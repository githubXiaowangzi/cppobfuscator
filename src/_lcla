done1
#include "..." search starts here:
#include <...> search starts here:
 /usr/local/lib/clang/3.1/include
 /usr/local/include
 /usr/include
 /usr/include/linux
 /usr/include/c++/4.6
 /usr/include/c++/4.6/i486-linux-gnu
 /usr/include/c++/4.6/backward
End of search list.
#include "..." search starts here:
#include <...> search starts here:
 /usr/local/lib/clang/3.1/include
 /usr/local/include
 /usr/include
 /usr/include/linux
 /usr/include/c++/4.6
 /usr/include/c++/4.6/i486-linux-gnu
 /usr/include/c++/4.6/backward
End of search list.
[DEBUG][alg/InitParseConsumer.h - line 27] +decl, size = 1
[DEBUG][alg/InitParseConsumer.h - line 27] +decl, size = 2
[DEBUG][alg/InitParseConsumer.h - line 27] +decl, size = 3
[DEBUG][alg/InitParseConsumer.h - line 27] +decl, size = 4
[DEBUG][alg/InitParseConsumer.h - line 27] +decl, size = 5
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 30] enter FuncDecl
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 37] unknown FunctionDecl type
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 51] enter ClassDecl
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 30] enter FuncDecl
[DEBUG][alg/FlattenCFG/VarRenamer.cpp - line 13] decl: CXXMethod
[DEBUG][alg/FlattenCFG/MoveLocalDeclToTop.cpp - line 26] Stmt CompoundStmt ( 179760344 -> p 0 )
(CompoundStmt 0xab6ecd8)
{
}
;
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 30] enter FuncDecl
[DEBUG][alg/FlattenCFG/VarRenamer.cpp - line 13] decl: CXXMethod
[DEBUG][alg/FlattenCFG/VarRenamer.cpp - line 13] decl: ParmVar
[DEBUG][alg/FlattenCFG/VarRenamer.cpp - line 22]  ---- name = x | type = T | desugared type = T | const = 0 | extern = 0 | POD = 0
[DEBUG][alg/FlattenCFG/MoveLocalDeclToTop.cpp - line 26] Stmt CompoundStmt ( 179760344 -> p 0 )
(CompoundStmt 0xab6ecd8)
{
}
;
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 30] enter FuncDecl
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 37] unknown FunctionDecl type
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 51] enter ClassDecl
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 30] enter FuncDecl
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 30] enter FuncDecl
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 30] enter FuncDecl
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 30] enter FuncDecl
[DEBUG][alg/FlattenCFG/VarRenamer.cpp - line 13] decl: Function
[DEBUG][alg/FlattenCFG/VarRenamer.cpp - line 13] decl: Var
[DEBUG][alg/FlattenCFG/VarRenamer.cpp - line 22]  ---- name = b | type = class B | desugared type = class B | const = 0 | extern = 0 | POD = 0
[DEBUG][alg/FlattenCFG/VarRenamer.cpp - line 13] decl: CXXRecord
[DEBUG][alg/FlattenCFG/VarRenamer.cpp - line 13] decl: Field
[DEBUG][alg/FlattenCFG/VarRenamer.cpp - line 13] decl: CXXRecord
[DEBUG][alg/FlattenCFG/VarRenamer.cpp - line 13] decl: Field
[DEBUG][alg/FlattenCFG/VarRenamer.cpp - line 13] decl: Var
[DEBUG][alg/FlattenCFG/VarRenamer.cpp - line 22]  ---- name = anoy | type = class ____nameddecl____3 | desugared type = class ____nameddecl____3 | const = 0 | extern = 0 | POD = 0
[DEBUG][alg/FlattenCFG/MoveLocalDeclToTop.cpp - line 26] Stmt CompoundStmt ( 179976112 -> p 0 )
(CompoundStmt 0xaba37b0
  (DeclStmt 0xaba2fc0
    0xaba2b90 "B ____nameddecl____1 =
      (CXXConstructExpr 0xaba2fa0 'class B''void (void) throw()')")
  (CXXMemberCallExpr 0xaba3020 'void'
    (MemberExpr 0xaba2fe8 '<bound member function type>' .func 0xab6f070
      (ImplicitCastExpr 0xaba3040 'class A<class B>' lvalue <UncheckedDerivedToBase (A)>
        (DeclRefExpr 0xaba2fd0 'class B' lvalue Var 0xaba2b90 '____nameddecl____1' 'class B')))
    (CXXConstructExpr 0xaba3120 'class B':'class B''void (const class B &) throw()'
      (ImplicitCastExpr 0xaba3050 'const class B' lvalue <NoOp>
        (DeclRefExpr 0xaba3008 'class B' lvalue Var 0xaba2b90 '____nameddecl____1' 'class B'))))
  (DeclStmt 0xaba3410
    0xaba3280 "class ____nameddecl____2;")
  (DeclStmt 0xaba3778
    0xaba3420 "class ____nameddecl____3;"
    0xaba3590 "class ____nameddecl____3 ____nameddecl____4 =
      (CXXConstructExpr 0xaba3748 'class ____nameddecl____3':'class ____nameddecl____3''void (void) throw()')")
  (ReturnStmt 0xaba37a0
    (IntegerLiteral 0xaba3788 'int' 0)))
{
    B ____nameddecl____1;
    ____nameddecl____1.func(____nameddecl____1);
    class ____nameddecl____2 {
        int x;
    };
    class ____nameddecl____3 {
        int y;
    } class  ____nameddecl____4;
    return 0;
}
;
[DEBUG][alg/FlattenCFG/MoveLocalDeclToTop.cpp - line 26] Stmt DeclStmt ( 179974080 -> p 179976112 )
(DeclStmt 0xaba2fc0
  0xaba2b90 "B ____nameddecl____1 =
    (CXXConstructExpr 0xaba2fa0 'class B''void (void) throw()')")
B ____nameddecl____1;
;
[DEBUG][alg/FlattenCFG/MoveLocalDeclToTop.cpp - line 99] notPODType
[DEBUG][alg/FlattenCFG/MoveLocalDeclToTop.cpp - line 105] initStyle 1
[DEBUG][alg/FlattenCFG/../Algorithm.h - line 90] --- ASSIGN EXPR BEGIN ---
[DEBUG][alg/FlattenCFG/../Algorithm.h - line 96] --- DECLREF END ---
[DEBUG][alg/FlattenCFG/../Algorithm.h - line 101] --- ASSIGN EXPR END ---
[DEBUG][alg/FlattenCFG/MoveLocalDeclToTop.cpp - line 26] Stmt CXXMemberCallExpr ( 179974176 -> p 179976112 )
(CXXMemberCallExpr 0xaba3020 'void'
  (MemberExpr 0xaba2fe8 '<bound member function type>' .func 0xab6f070
    (ImplicitCastExpr 0xaba3040 'class A<class B>' lvalue <UncheckedDerivedToBase (A)>
      (DeclRefExpr 0xaba2fd0 'class B' lvalue Var 0xaba2b90 '____nameddecl____1' 'class B')))
  (CXXConstructExpr 0xaba3120 'class B':'class B''void (const class B &) throw()'
    (ImplicitCastExpr 0xaba3050 'const class B' lvalue <NoOp>
      (DeclRefExpr 0xaba3008 'class B' lvalue Var 0xaba2b90 '____nameddecl____1' 'class B'))))
____nameddecl____1.func(____nameddecl____1);
[DEBUG][alg/FlattenCFG/MoveLocalDeclToTop.cpp - line 26] Stmt MemberExpr ( 179974120 -> p 179974176 )
(MemberExpr 0xaba2fe8 '<bound member function type>' .func 0xab6f070
  (ImplicitCastExpr 0xaba3040 'class A<class B>' lvalue <UncheckedDerivedToBase (A)>
    (DeclRefExpr 0xaba2fd0 'class B' lvalue Var 0xaba2b90 '____nameddecl____1' 'class B')))
____nameddecl____1.func;
[DEBUG][alg/FlattenCFG/MoveLocalDeclToTop.cpp - line 26] Stmt ImplicitCastExpr ( 179974208 -> p 179974120 )
(ImplicitCastExpr 0xaba3040 'class A<class B>' lvalue <UncheckedDerivedToBase (A)>
  (DeclRefExpr 0xaba2fd0 'class B' lvalue Var 0xaba2b90 '____nameddecl____1' 'class B'))
____nameddecl____1;
[DEBUG][alg/FlattenCFG/MoveLocalDeclToTop.cpp - line 26] Stmt DeclRefExpr ( 179974096 -> p 179974208 )
(DeclRefExpr 0xaba2fd0 'class B' lvalue Var 0xaba2b90 '____nameddecl____1' 'class B')
____nameddecl____1;
[DEBUG][alg/FlattenCFG/MoveLocalDeclToTop.cpp - line 26] Stmt CXXConstructExpr ( 179974432 -> p 179974176 )
(CXXConstructExpr 0xaba3120 'class B':'class B''void (const class B &) throw()'
  (ImplicitCastExpr 0xaba3050 'const class B' lvalue <NoOp>
    (DeclRefExpr 0xaba3008 'class B' lvalue Var 0xaba2b90 '____nameddecl____1' 'class B')))
____nameddecl____1;
[DEBUG][alg/FlattenCFG/MoveLocalDeclToTop.cpp - line 26] Stmt ImplicitCastExpr ( 179974224 -> p 179974432 )
(ImplicitCastExpr 0xaba3050 'const class B' lvalue <NoOp>
  (DeclRefExpr 0xaba3008 'class B' lvalue Var 0xaba2b90 '____nameddecl____1' 'class B'))
____nameddecl____1;
[DEBUG][alg/FlattenCFG/MoveLocalDeclToTop.cpp - line 26] Stmt DeclRefExpr ( 179974152 -> p 179974224 )
(DeclRefExpr 0xaba3008 'class B' lvalue Var 0xaba2b90 '____nameddecl____1' 'class B')
____nameddecl____1;
[DEBUG][alg/FlattenCFG/MoveLocalDeclToTop.cpp - line 26] Stmt DeclStmt ( 179975184 -> p 179976112 )
(DeclStmt 0xaba3410
  0xaba3280 "class ____nameddecl____2;")
class ____nameddecl____2 {
    int x;
};
;
[DEBUG][alg/FlattenCFG/MoveLocalDeclToTop.cpp - line 26] Stmt DeclStmt ( 179976056 -> p 179976112 )
(DeclStmt 0xaba3778
  0xaba3420 "class ____nameddecl____3;"
  0xaba3590 "class ____nameddecl____3 ____nameddecl____4 =
    (CXXConstructExpr 0xaba3748 'class ____nameddecl____3':'class ____nameddecl____3''void (void) throw()')")
class ____nameddecl____3 {
    int y;
} class  ____nameddecl____4;
;
[DEBUG][alg/FlattenCFG/MoveLocalDeclToTop.cpp - line 99] notPODType
[DEBUG][alg/FlattenCFG/MoveLocalDeclToTop.cpp - line 105] initStyle 1
[DEBUG][alg/FlattenCFG/../Algorithm.h - line 90] --- ASSIGN EXPR BEGIN ---
[DEBUG][alg/FlattenCFG/../Algorithm.h - line 96] --- DECLREF END ---
[DEBUG][alg/FlattenCFG/../Algorithm.h - line 101] --- ASSIGN EXPR END ---
[DEBUG][alg/FlattenCFG/MoveLocalDeclToTop.cpp - line 26] Stmt ReturnStmt ( 179976096 -> p 179976112 )
(ReturnStmt 0xaba37a0
  (IntegerLiteral 0xaba3788 'int' 0))
return 0;
;
[DEBUG][alg/FlattenCFG/MoveLocalDeclToTop.cpp - line 26] Stmt IntegerLiteral ( 179976072 -> p 179976096 )
(IntegerLiteral 0xaba3788 'int' 0)
0;
[DEBUG][alg/SimplePrinter.cpp - line 7] alg started.
template <typename T> class A {
public:
    void func(T x);
};
void func(T ____nameddecl____0) {
}

;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt CompoundStmt ( 179760344 -> p 0 )
(CompoundStmt 0xab6ecd8)
{
}
;
[0;1;33m
 [B1 (ENTRY)]
[0m[0;35m   Succs [0m(1):[0;35m B0[0m
[0;1;33m
 [B0 (EXIT)]
[0m[0;34m   Preds [0m(1):[0;34m B1[0m

Writing '/tmp/llvm_KadnTv/CFG.dot'...  done. 
class B : public A<B> {
public:
};
int main() {
    B ____nameddecl____1;
    class ____nameddecl____3 ____nameddecl____4;
    ____nameddecl____1 = B();
    ____nameddecl____1.func(____nameddecl____1);
    ____nameddecl____4 = class ____nameddecl____3();
    return 0;
}

;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt CompoundStmt ( 179976112 -> p 0 )
(CompoundStmt 0xaba37b0
  (DeclStmt 0xaba46c0
    0xaba2b90 "B ____nameddecl____1")
  (DeclStmt 0xaba4b00
    0xaba3590 "class ____nameddecl____3 ____nameddecl____4")
  (CXXOperatorCallExpr 0xaba4698 'class B' lvalue
    (ImplicitCastExpr 0xaba4688 'class B &(*)(const class B &) throw()' <FunctionToPointerDecay>
      (DeclRefExpr 0xaba4630 'class B &(const class B &) throw()' lvalue CXXMethod 0xaba39c0 'operator=' 'class B &(const class B &) throw()'))
    (DeclRefExpr 0xaba3840 'class B' lvalue Var 0xaba2b90 '____nameddecl____1' 'class B')
    (MaterializeTemporaryExpr 0xaba4620 'const class B' lvalue
      (ImplicitCastExpr 0xaba4610 'const class B' <NoOp>
        (CXXFunctionalCastExpr 0xaba3828 'class B' functional cast to class B <ConstructorConversion>
          (CXXConstructExpr 0xaba3800 'class B''void (const class B &) throw()' elidable
            (MaterializeTemporaryExpr 0xaba37f0 'const class B' lvalue
              (ImplicitCastExpr 0xaba37e0 'const class B' <NoOp>
                (CXXConstructExpr 0xaba2fa0 'class B''void (void) throw()'))))))))
  (CXXMemberCallExpr 0xaba3020 'void'
    (MemberExpr 0xaba2fe8 '<bound member function type>' .func 0xab6f070
      (ImplicitCastExpr 0xaba3040 'class A<class B>' lvalue <UncheckedDerivedToBase (A)>
        (DeclRefExpr 0xaba2fd0 'class B' lvalue Var 0xaba2b90 '____nameddecl____1' 'class B')))
    (CXXConstructExpr 0xaba3120 'class B':'class B''void (const class B &) throw()'
      (ImplicitCastExpr 0xaba3050 'const class B' lvalue <NoOp>
        (DeclRefExpr 0xaba3008 'class B' lvalue Var 0xaba2b90 '____nameddecl____1' 'class B'))))
  (CXXOperatorCallExpr 0xaba4ad8 'class ____nameddecl____3' lvalue
    (ImplicitCastExpr 0xaba4ac8 'class ____nameddecl____3 &(*)(const class ____nameddecl____3 &) throw()' <FunctionToPointerDecay>
      (DeclRefExpr 0xaba4a78 'class ____nameddecl____3 &(const class ____nameddecl____3 &) throw()' lvalue CXXMethod 0xaba48f0 'operator=' 'class ____nameddecl____3 &(const class ____nameddecl____3 &) throw()'))
    (DeclRefExpr 0xaba4878 'class ____nameddecl____3':'class ____nameddecl____3' lvalue Var 0xaba3590 '____nameddecl____4' 'class ____nameddecl____3':'class ____nameddecl____3')
    (MaterializeTemporaryExpr 0xaba4a68 'const class ____nameddecl____3' lvalue
      (ImplicitCastExpr 0xaba4a58 'const class ____nameddecl____3' <NoOp>
        (CXXFunctionalCastExpr 0xaba4860 'class ____nameddecl____3':'class ____nameddecl____3' functional cast to class ____nameddecl____3 <ConstructorConversion>
          (CXXConstructExpr 0xaba4790 'class ____nameddecl____3':'class ____nameddecl____3''void (const class ____nameddecl____3 &) throw()' elidable
            (MaterializeTemporaryExpr 0xaba4700 'const class ____nameddecl____3' lvalue
              (ImplicitCastExpr 0xaba46f0 'const class ____nameddecl____3' <NoOp>
                (CXXConstructExpr 0xaba3748 'class ____nameddecl____3':'class ____nameddecl____3''void (void) throw()'))))))))
  (ReturnStmt 0xaba37a0
    (IntegerLiteral 0xaba3788 'int' 0)))
{
    B ____nameddecl____1;
    class ____nameddecl____3 ____nameddecl____4;
    ____nameddecl____1 = B();
    ____nameddecl____1.func(____nameddecl____1);
    ____nameddecl____4 = class ____nameddecl____3();
    return 0;
}
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt DeclStmt ( 179979968 -> p 179976112 )
(DeclStmt 0xaba46c0
  0xaba2b90 "B ____nameddecl____1")
B ____nameddecl____1;
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt DeclStmt ( 179981056 -> p 179976112 )
(DeclStmt 0xaba4b00
  0xaba3590 "class ____nameddecl____3 ____nameddecl____4")
class ____nameddecl____3 ____nameddecl____4;
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt CXXOperatorCallExpr ( 179979928 -> p 179976112 )
(CXXOperatorCallExpr 0xaba4698 'class B' lvalue
  (ImplicitCastExpr 0xaba4688 'class B &(*)(const class B &) throw()' <FunctionToPointerDecay>
    (DeclRefExpr 0xaba4630 'class B &(const class B &) throw()' lvalue CXXMethod 0xaba39c0 'operator=' 'class B &(const class B &) throw()'))
  (DeclRefExpr 0xaba3840 'class B' lvalue Var 0xaba2b90 '____nameddecl____1' 'class B')
  (MaterializeTemporaryExpr 0xaba4620 'const class B' lvalue
    (ImplicitCastExpr 0xaba4610 'const class B' <NoOp>
      (CXXFunctionalCastExpr 0xaba3828 'class B' functional cast to class B <ConstructorConversion>
        (CXXConstructExpr 0xaba3800 'class B''void (const class B &) throw()' elidable
          (MaterializeTemporaryExpr 0xaba37f0 'const class B' lvalue
            (ImplicitCastExpr 0xaba37e0 'const class B' <NoOp>
              (CXXConstructExpr 0xaba2fa0 'class B''void (void) throw()'))))))))
____nameddecl____1 = B();
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt ImplicitCastExpr ( 179979912 -> p 179979928 )
(ImplicitCastExpr 0xaba4688 'class B &(*)(const class B &) throw()' <FunctionToPointerDecay>
  (DeclRefExpr 0xaba4630 'class B &(const class B &) throw()' lvalue CXXMethod 0xaba39c0 'operator=' 'class B &(const class B &) throw()'))
operator=;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt DeclRefExpr ( 179979824 -> p 179979912 )
(DeclRefExpr 0xaba4630 'class B &(const class B &) throw()' lvalue CXXMethod 0xaba39c0 'operator=' 'class B &(const class B &) throw()')
operator=;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt DeclRefExpr ( 179976256 -> p 179979928 )
(DeclRefExpr 0xaba3840 'class B' lvalue Var 0xaba2b90 '____nameddecl____1' 'class B')
____nameddecl____1;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt MaterializeTemporaryExpr ( 179979808 -> p 179979928 )
(MaterializeTemporaryExpr 0xaba4620 'const class B' lvalue
  (ImplicitCastExpr 0xaba4610 'const class B' <NoOp>
    (CXXFunctionalCastExpr 0xaba3828 'class B' functional cast to class B <ConstructorConversion>
      (CXXConstructExpr 0xaba3800 'class B''void (const class B &) throw()' elidable
        (MaterializeTemporaryExpr 0xaba37f0 'const class B' lvalue
          (ImplicitCastExpr 0xaba37e0 'const class B' <NoOp>
            (CXXConstructExpr 0xaba2fa0 'class B''void (void) throw()')))))))
B();
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt ImplicitCastExpr ( 179979792 -> p 179979808 )
(ImplicitCastExpr 0xaba4610 'const class B' <NoOp>
  (CXXFunctionalCastExpr 0xaba3828 'class B' functional cast to class B <ConstructorConversion>
    (CXXConstructExpr 0xaba3800 'class B''void (const class B &) throw()' elidable
      (MaterializeTemporaryExpr 0xaba37f0 'const class B' lvalue
        (ImplicitCastExpr 0xaba37e0 'const class B' <NoOp>
          (CXXConstructExpr 0xaba2fa0 'class B''void (void) throw()'))))))
B();
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt CXXFunctionalCastExpr ( 179976232 -> p 179979792 )
(CXXFunctionalCastExpr 0xaba3828 'class B' functional cast to class B <ConstructorConversion>
  (CXXConstructExpr 0xaba3800 'class B''void (const class B &) throw()' elidable
    (MaterializeTemporaryExpr 0xaba37f0 'const class B' lvalue
      (ImplicitCastExpr 0xaba37e0 'const class B' <NoOp>
        (CXXConstructExpr 0xaba2fa0 'class B''void (void) throw()')))))
B();
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt CXXConstructExpr ( 179976192 -> p 179976232 )
(CXXConstructExpr 0xaba3800 'class B''void (const class B &) throw()' elidable
  (MaterializeTemporaryExpr 0xaba37f0 'const class B' lvalue
    (ImplicitCastExpr 0xaba37e0 'const class B' <NoOp>
      (CXXConstructExpr 0xaba2fa0 'class B''void (void) throw()'))))
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt MaterializeTemporaryExpr ( 179976176 -> p 179976192 )
(MaterializeTemporaryExpr 0xaba37f0 'const class B' lvalue
  (ImplicitCastExpr 0xaba37e0 'const class B' <NoOp>
    (CXXConstructExpr 0xaba2fa0 'class B''void (void) throw()')))
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt ImplicitCastExpr ( 179976160 -> p 179976176 )
(ImplicitCastExpr 0xaba37e0 'const class B' <NoOp>
  (CXXConstructExpr 0xaba2fa0 'class B''void (void) throw()'))
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt CXXConstructExpr ( 179974048 -> p 179976160 )
(CXXConstructExpr 0xaba2fa0 'class B''void (void) throw()')
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt CXXMemberCallExpr ( 179974176 -> p 179976112 )
(CXXMemberCallExpr 0xaba3020 'void'
  (MemberExpr 0xaba2fe8 '<bound member function type>' .func 0xab6f070
    (ImplicitCastExpr 0xaba3040 'class A<class B>' lvalue <UncheckedDerivedToBase (A)>
      (DeclRefExpr 0xaba2fd0 'class B' lvalue Var 0xaba2b90 '____nameddecl____1' 'class B')))
  (CXXConstructExpr 0xaba3120 'class B':'class B''void (const class B &) throw()'
    (ImplicitCastExpr 0xaba3050 'const class B' lvalue <NoOp>
      (DeclRefExpr 0xaba3008 'class B' lvalue Var 0xaba2b90 '____nameddecl____1' 'class B'))))
____nameddecl____1.func(____nameddecl____1);
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt MemberExpr ( 179974120 -> p 179974176 )
(MemberExpr 0xaba2fe8 '<bound member function type>' .func 0xab6f070
  (ImplicitCastExpr 0xaba3040 'class A<class B>' lvalue <UncheckedDerivedToBase (A)>
    (DeclRefExpr 0xaba2fd0 'class B' lvalue Var 0xaba2b90 '____nameddecl____1' 'class B')))
____nameddecl____1.func;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt ImplicitCastExpr ( 179974208 -> p 179974120 )
(ImplicitCastExpr 0xaba3040 'class A<class B>' lvalue <UncheckedDerivedToBase (A)>
  (DeclRefExpr 0xaba2fd0 'class B' lvalue Var 0xaba2b90 '____nameddecl____1' 'class B'))
____nameddecl____1;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt DeclRefExpr ( 179974096 -> p 179974208 )
(DeclRefExpr 0xaba2fd0 'class B' lvalue Var 0xaba2b90 '____nameddecl____1' 'class B')
____nameddecl____1;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt CXXConstructExpr ( 179974432 -> p 179974176 )
(CXXConstructExpr 0xaba3120 'class B':'class B''void (const class B &) throw()'
  (ImplicitCastExpr 0xaba3050 'const class B' lvalue <NoOp>
    (DeclRefExpr 0xaba3008 'class B' lvalue Var 0xaba2b90 '____nameddecl____1' 'class B')))
____nameddecl____1;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt ImplicitCastExpr ( 179974224 -> p 179974432 )
(ImplicitCastExpr 0xaba3050 'const class B' lvalue <NoOp>
  (DeclRefExpr 0xaba3008 'class B' lvalue Var 0xaba2b90 '____nameddecl____1' 'class B'))
____nameddecl____1;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt DeclRefExpr ( 179974152 -> p 179974224 )
(DeclRefExpr 0xaba3008 'class B' lvalue Var 0xaba2b90 '____nameddecl____1' 'class B')
____nameddecl____1;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt CXXOperatorCallExpr ( 179981016 -> p 179976112 )
(CXXOperatorCallExpr 0xaba4ad8 'class ____nameddecl____3' lvalue
  (ImplicitCastExpr 0xaba4ac8 'class ____nameddecl____3 &(*)(const class ____nameddecl____3 &) throw()' <FunctionToPointerDecay>
    (DeclRefExpr 0xaba4a78 'class ____nameddecl____3 &(const class ____nameddecl____3 &) throw()' lvalue CXXMethod 0xaba48f0 'operator=' 'class ____nameddecl____3 &(const class ____nameddecl____3 &) throw()'))
  (DeclRefExpr 0xaba4878 'class ____nameddecl____3':'class ____nameddecl____3' lvalue Var 0xaba3590 '____nameddecl____4' 'class ____nameddecl____3':'class ____nameddecl____3')
  (MaterializeTemporaryExpr 0xaba4a68 'const class ____nameddecl____3' lvalue
    (ImplicitCastExpr 0xaba4a58 'const class ____nameddecl____3' <NoOp>
      (CXXFunctionalCastExpr 0xaba4860 'class ____nameddecl____3':'class ____nameddecl____3' functional cast to class ____nameddecl____3 <ConstructorConversion>
        (CXXConstructExpr 0xaba4790 'class ____nameddecl____3':'class ____nameddecl____3''void (const class ____nameddecl____3 &) throw()' elidable
          (MaterializeTemporaryExpr 0xaba4700 'const class ____nameddecl____3' lvalue
            (ImplicitCastExpr 0xaba46f0 'const class ____nameddecl____3' <NoOp>
              (CXXConstructExpr 0xaba3748 'class ____nameddecl____3':'class ____nameddecl____3''void (void) throw()'))))))))
____nameddecl____4 = class ____nameddecl____3();
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt ImplicitCastExpr ( 179981000 -> p 179981016 )
(ImplicitCastExpr 0xaba4ac8 'class ____nameddecl____3 &(*)(const class ____nameddecl____3 &) throw()' <FunctionToPointerDecay>
  (DeclRefExpr 0xaba4a78 'class ____nameddecl____3 &(const class ____nameddecl____3 &) throw()' lvalue CXXMethod 0xaba48f0 'operator=' 'class ____nameddecl____3 &(const class ____nameddecl____3 &) throw()'))
operator=;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt DeclRefExpr ( 179980920 -> p 179981000 )
(DeclRefExpr 0xaba4a78 'class ____nameddecl____3 &(const class ____nameddecl____3 &) throw()' lvalue CXXMethod 0xaba48f0 'operator=' 'class ____nameddecl____3 &(const class ____nameddecl____3 &) throw()')
operator=;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt DeclRefExpr ( 179980408 -> p 179981016 )
(DeclRefExpr 0xaba4878 'class ____nameddecl____3':'class ____nameddecl____3' lvalue Var 0xaba3590 '____nameddecl____4' 'class ____nameddecl____3':'class ____nameddecl____3')
____nameddecl____4;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt MaterializeTemporaryExpr ( 179980904 -> p 179981016 )
(MaterializeTemporaryExpr 0xaba4a68 'const class ____nameddecl____3' lvalue
  (ImplicitCastExpr 0xaba4a58 'const class ____nameddecl____3' <NoOp>
    (CXXFunctionalCastExpr 0xaba4860 'class ____nameddecl____3':'class ____nameddecl____3' functional cast to class ____nameddecl____3 <ConstructorConversion>
      (CXXConstructExpr 0xaba4790 'class ____nameddecl____3':'class ____nameddecl____3''void (const class ____nameddecl____3 &) throw()' elidable
        (MaterializeTemporaryExpr 0xaba4700 'const class ____nameddecl____3' lvalue
          (ImplicitCastExpr 0xaba46f0 'const class ____nameddecl____3' <NoOp>
            (CXXConstructExpr 0xaba3748 'class ____nameddecl____3':'class ____nameddecl____3''void (void) throw()')))))))
class ____nameddecl____3();
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt ImplicitCastExpr ( 179980888 -> p 179980904 )
(ImplicitCastExpr 0xaba4a58 'const class ____nameddecl____3' <NoOp>
  (CXXFunctionalCastExpr 0xaba4860 'class ____nameddecl____3':'class ____nameddecl____3' functional cast to class ____nameddecl____3 <ConstructorConversion>
    (CXXConstructExpr 0xaba4790 'class ____nameddecl____3':'class ____nameddecl____3''void (const class ____nameddecl____3 &) throw()' elidable
      (MaterializeTemporaryExpr 0xaba4700 'const class ____nameddecl____3' lvalue
        (ImplicitCastExpr 0xaba46f0 'const class ____nameddecl____3' <NoOp>
          (CXXConstructExpr 0xaba3748 'class ____nameddecl____3':'class ____nameddecl____3''void (void) throw()'))))))
class ____nameddecl____3();
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt CXXFunctionalCastExpr ( 179980384 -> p 179980888 )
(CXXFunctionalCastExpr 0xaba4860 'class ____nameddecl____3':'class ____nameddecl____3' functional cast to class ____nameddecl____3 <ConstructorConversion>
  (CXXConstructExpr 0xaba4790 'class ____nameddecl____3':'class ____nameddecl____3''void (const class ____nameddecl____3 &) throw()' elidable
    (MaterializeTemporaryExpr 0xaba4700 'const class ____nameddecl____3' lvalue
      (ImplicitCastExpr 0xaba46f0 'const class ____nameddecl____3' <NoOp>
        (CXXConstructExpr 0xaba3748 'class ____nameddecl____3':'class ____nameddecl____3''void (void) throw()')))))
class ____nameddecl____3();
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt CXXConstructExpr ( 179980176 -> p 179980384 )
(CXXConstructExpr 0xaba4790 'class ____nameddecl____3':'class ____nameddecl____3''void (const class ____nameddecl____3 &) throw()' elidable
  (MaterializeTemporaryExpr 0xaba4700 'const class ____nameddecl____3' lvalue
    (ImplicitCastExpr 0xaba46f0 'const class ____nameddecl____3' <NoOp>
      (CXXConstructExpr 0xaba3748 'class ____nameddecl____3':'class ____nameddecl____3''void (void) throw()'))))
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt MaterializeTemporaryExpr ( 179980032 -> p 179980176 )
(MaterializeTemporaryExpr 0xaba4700 'const class ____nameddecl____3' lvalue
  (ImplicitCastExpr 0xaba46f0 'const class ____nameddecl____3' <NoOp>
    (CXXConstructExpr 0xaba3748 'class ____nameddecl____3':'class ____nameddecl____3''void (void) throw()')))
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt ImplicitCastExpr ( 179980016 -> p 179980032 )
(ImplicitCastExpr 0xaba46f0 'const class ____nameddecl____3' <NoOp>
  (CXXConstructExpr 0xaba3748 'class ____nameddecl____3':'class ____nameddecl____3''void (void) throw()'))
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt CXXConstructExpr ( 179976008 -> p 179980016 )
(CXXConstructExpr 0xaba3748 'class ____nameddecl____3':'class ____nameddecl____3''void (void) throw()')
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt ReturnStmt ( 179976096 -> p 179976112 )
(ReturnStmt 0xaba37a0
  (IntegerLiteral 0xaba3788 'int' 0))
return 0;
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt IntegerLiteral ( 179976072 -> p 179976096 )
(IntegerLiteral 0xaba3788 'int' 0)
0;
[0;1;33m
 [B2 (ENTRY)]
[0m[0;35m   Succs [0m(1):[0;35m B1[0m
[0;1;33m
 [B1]
[0m   1: B ____nameddecl____1;
   2: class ____nameddecl____3 ____nameddecl____4;
   3:  (CXXConstructExpr, class B)
   4: [B1.3] (CXXConstructExpr, class B)
   5: ____nameddecl____1 = B([B1.4]) (OperatorCall)
   6: ____nameddecl____1 (CXXConstructExpr, class B)
   7: ____nameddecl____1.func([B1.6])
   8:  (CXXConstructExpr, class ____nameddecl____3)
   9: [B1.8] (CXXConstructExpr, class ____nameddecl____3)
  10: ____nameddecl____4 = class ____nameddecl____3([B1.9]) (OperatorCall)
  11: return 0;
[0;34m   Preds [0m(1):[0;34m B2[0m
[0;35m   Succs [0m(1):[0;35m B0[0m
[0;1;33m
 [B0 (EXIT)]
[0m[0;34m   Preds [0m(1):[0;34m B1[0m

Writing '/tmp/llvm_L93ZAP/CFG.dot'...  done. 
[DEBUG][alg/SimplePrinter.cpp - line 24] alg finished.
[DEBUG][ResourceManager.cpp - line 98] src _class.cpp not changed.
[DEBUG][ResourceManager.cpp - line 136] Open desfile @_class.cpp
done2
