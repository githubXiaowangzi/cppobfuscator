done1
#include "..." search starts here:
#include <...> search starts here:
 /usr/local/lib/clang/3.1/include
 /usr/local/include
 /usr/include
 /usr/include/linux
 /usr/include/c++/4.6
 /usr/include/c++/4.6/i486-linux-gnu
 /usr/include/c++/4.6/backward
End of search list.
#include "..." search starts here:
#include <...> search starts here:
 /usr/local/lib/clang/3.1/include
 /usr/local/include
 /usr/include
 /usr/include/linux
 /usr/include/c++/4.6
 /usr/include/c++/4.6/i486-linux-gnu
 /usr/include/c++/4.6/backward
End of search list.
_while.cpp:20:9: warning: using the result of an assignment as a condition without parentheses
        while(y=n){}
              ~^~
_while.cpp:20:9: note: place parentheses around the assignment to silence this warning
        while(y=n){}
               ^
              (  )
_while.cpp:20:9: note: use '==' to turn this assignment into an equality comparison
        while(y=n){}
               ^
               ==
[DEBUG][alg/InitParseConsumer.h - line 27] +decl, size = 1
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 30] enter FuncDecl
[DEBUG][alg/FlattenCFG/VarRenamer.cpp - line 17] decl: Function
[DEBUG][alg/FlattenCFG/VarRenamer.cpp - line 17] decl: Var
[DEBUG][alg/FlattenCFG/VarRenamer.cpp - line 26]  ---- name = n | type = int | desugared type = int | const = 0 | extern = 0 | POD = 1
12[DEBUG][alg/FlattenCFG/VarRenamer.cpp - line 17] decl: Var
[DEBUG][alg/FlattenCFG/VarRenamer.cpp - line 26]  ---- name = a | type = int | desugared type = int | const = 0 | extern = 0 | POD = 1
____localvar____0 + 12[DEBUG][alg/FlattenCFG/VarRenamer.cpp - line 17] decl: Var
[DEBUG][alg/FlattenCFG/VarRenamer.cpp - line 26]  ---- name = y | type = int | desugared type = int | const = 0 | extern = 0 | POD = 1
____localvar____0 + 2[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 33] leaving Stmt IntegerLiteral, start transform
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 33] leaving Stmt DeclStmt, start transform
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 33] leaving Stmt DeclRefExpr, start transform
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 33] leaving Stmt ImplicitCastExpr, start transform
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 33] leaving Stmt IntegerLiteral, start transform
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 33] leaving Stmt BinaryOperator, start transform
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 33] leaving Stmt DeclStmt, start transform
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 33] leaving Stmt DeclRefExpr, start transform
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 33] leaving Stmt ImplicitCastExpr, start transform
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 33] leaving Stmt ImplicitCastExpr, start transform
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 33] leaving Stmt CompoundStmt, start transform
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 33] leaving Stmt WhileStmt, start transform
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 64] while to if trans
[DEBUG][alg/FlattenCFG/../Algorithm.h - line 51] info 150759720: ____label____0 0
[DEBUG][alg/FlattenCFG/../Algorithm.h - line 51] info 150759756: ____label____1 0
[DEBUG][alg/FlattenCFG/../Algorithm.h - line 51] info 150759792: ____label____2 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 33] leaving Stmt DeclRefExpr, start transform
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 33] leaving Stmt ImplicitCastExpr, start transform
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 33] leaving Stmt IntegerLiteral, start transform
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 33] leaving Stmt BinaryOperator, start transform
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 33] leaving Stmt DeclRefExpr, start transform
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 33] leaving Stmt UnaryOperator, start transform
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 33] leaving Stmt CompoundStmt, start transform
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 33] leaving Stmt WhileStmt, start transform
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 64] while to if trans
[DEBUG][alg/FlattenCFG/../Algorithm.h - line 51] info 150759828: ____label____3 0
[DEBUG][alg/FlattenCFG/../Algorithm.h - line 51] info 150759864: ____label____4 0
[DEBUG][alg/FlattenCFG/../Algorithm.h - line 51] info 150759900: ____label____5 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 33] leaving Stmt DeclRefExpr, start transform
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 33] leaving Stmt ImplicitCastExpr, start transform
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 33] leaving Stmt IntegerLiteral, start transform
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 33] leaving Stmt BinaryOperator, start transform
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 33] leaving Stmt DeclStmt, start transform
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 33] leaving Stmt DeclRefExpr, start transform
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 33] leaving Stmt DeclRefExpr, start transform
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 33] leaving Stmt ImplicitCastExpr, start transform
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 33] leaving Stmt BinaryOperator, start transform
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 33] leaving Stmt ImplicitCastExpr, start transform
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 33] leaving Stmt ImplicitCastExpr, start transform
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 33] leaving Stmt CompoundStmt, start transform
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 33] leaving Stmt WhileStmt, start transform
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 64] while to if trans
[DEBUG][alg/FlattenCFG/../Algorithm.h - line 51] info 150759936: ____label____6 0
[DEBUG][alg/FlattenCFG/../Algorithm.h - line 51] info 150759972: ____label____7 0
[DEBUG][alg/FlattenCFG/../Algorithm.h - line 51] info 150760008: ____label____8 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 33] leaving Stmt DeclRefExpr, start transform
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 33] leaving Stmt IntegerLiteral, start transform
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 33] leaving Stmt CompoundAssignOperator, start transform
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 33] leaving Stmt IntegerLiteral, start transform
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 33] leaving Stmt ReturnStmt, start transform
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 33] leaving Stmt CompoundStmt, start transform
[DEBUG][alg/FlattenCFG/MoveLocalDeclToTop.cpp - line 26] Stmt CompoundStmt ( 150798336 -> p 0 )
(CompoundStmt 0x8fd0000
  (DeclStmt 0x8fcfc68
    0x8fcfc20 "int ____localvar____0 =
      (IntegerLiteral 0x8fcfc50 'int' 12)")
  (LabelStmt 0x8fae930 '____label____0'
    (CompoundStmt 0x8faea30
      (IfStmt 0x8fae9c0
        (DeclStmt 0x8fae9e0
          0x8fcfc90 "int ____localvar____1 =
            (BinaryOperator 0x8fcfd00 'int' '+'
              (ImplicitCastExpr 0x8fcfcf0 'int' <LValueToRValue>
                (DeclRefExpr 0x8fcfcc0 'int' lvalue Var 0x8fcfc20 '____localvar____0' 'int'))
              (IntegerLiteral 0x8fcfcd8 'int' 12))")
        (ImplicitCastExpr 0x8fcfd50 '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0x8fcfd40 'int' <LValueToRValue>
            (DeclRefExpr 0x8fcfd28 'int' lvalue Var 0x8fcfc90 '____localvar____1' 'int')))
        (CompoundStmt 0x8fae9a8
          (CompoundStmt 0x8fcfd18)
          (LabelStmt 0x8fae998 '____label____1'
            (CompoundStmt 0x8fae980
              (GotoStmt 0x8fae940 '____label____0':0x8fae900))))
        <<<NULL>>>)
      (LabelStmt 0x8faea20 '____label____2'
        (NullStmt 0x8faea10))))
  (LabelStmt 0x8faea80 '____label____3'
    (CompoundStmt 0x8faeb70
      (IfStmt 0x8faeb10
        <<<NULL>>>
        (BinaryOperator 0x8fcfdc8 '_Bool' '=='
          (ImplicitCastExpr 0x8fcfdb8 'int' <LValueToRValue>
            (DeclRefExpr 0x8fcfd88 'int' lvalue Var 0x8fcfc20 '____localvar____0' 'int'))
          (IntegerLiteral 0x8fcfda0 'int' 12))
        (CompoundStmt 0x8faeaf8
          (CompoundStmt 0x8fcfe10
            (UnaryOperator 0x8fcfdf8 'int' postfix '++'
              (DeclRefExpr 0x8fcfde0 'int' lvalue Var 0x8fcfc20 '____localvar____0' 'int')))
          (LabelStmt 0x8faeae8 '____label____4'
            (CompoundStmt 0x8faead0
              (GotoStmt 0x8faea90 '____label____3':0x8faea50))))
        <<<NULL>>>)
      (LabelStmt 0x8faeb60 '____label____5'
        (NullStmt 0x8faeb50))))
  (DeclStmt 0x8fcfed8
    0x8fcfe50 "int ____localvar____2 =
      (BinaryOperator 0x8fcfec0 'int' '+'
        (ImplicitCastExpr 0x8fcfeb0 'int' <LValueToRValue>
          (DeclRefExpr 0x8fcfe80 'int' lvalue Var 0x8fcfc20 '____localvar____0' 'int'))
        (IntegerLiteral 0x8fcfe98 'int' 2))")
  (LabelStmt 0x8faebc0 '____label____6'
    (CompoundStmt 0x8faecb0
      (IfStmt 0x8faec50
        <<<NULL>>>
        (ImplicitCastExpr 0x8fcff50 '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0x8fcff40 'int' <LValueToRValue>
            (BinaryOperator 0x8fcff28 'int' lvalue '='
              (DeclRefExpr 0x8fcfee8 'int' lvalue Var 0x8fcfe50 '____localvar____2' 'int')
              (ImplicitCastExpr 0x8fcff18 'int' <LValueToRValue>
                (DeclRefExpr 0x8fcff00 'int' lvalue Var 0x8fcfc20 '____localvar____0' 'int')))))
        (CompoundStmt 0x8faec38
          (CompoundStmt 0x8fcff60)
          (LabelStmt 0x8faec28 '____label____7'
            (CompoundStmt 0x8faec10
              (GotoStmt 0x8faebd0 '____label____6':0x8faeb90))))
        <<<NULL>>>)
      (LabelStmt 0x8faeca0 '____label____8'
        (NullStmt 0x8faec90))))
  (CompoundAssignOperator 0x8fcffb8 'int' lvalue '*=' ComputeLHSTy='int' ComputeResultTy='int'
    (DeclRefExpr 0x8fcff84 'int' lvalue Var 0x8fcfe50 '____localvar____2' 'int')
    (IntegerLiteral 0x8fcffa0 'int' 2))
  (ReturnStmt 0x8fcfff0
    (IntegerLiteral 0x8fcffd8 'int' 0)))
{
    int ____localvar____0 = 12;
  ____label____0:
    {
        if (____localvar____1) {
            {
            }
          ____label____1:
            {
                goto ____label____0;
            }
        }
      ____label____2:
        ;
    }
  ____label____3:
    {
        if (____localvar____0 == 12) {
            {
                ____localvar____0++;
            }
          ____label____4:
            {
                goto ____label____3;
            }
        }
      ____label____5:
        ;
    }
    int ____localvar____2 = ____localvar____0 + 2;
  ____label____6:
    {
        if (____localvar____2 = ____localvar____0) {
            {
            }
          ____label____7:
            {
                goto ____label____6;
            }
        }
      ____label____8:
        ;
    }
    ____localvar____2 *= 2;
    return 0;
}
;
[DEBUG][alg/FlattenCFG/MoveLocalDeclToTop.cpp - line 26] Stmt DeclStmt ( 150797416 -> p 150798336 )
(DeclStmt 0x8fcfc68
  0x8fcfc20 "int ____localvar____0 =
    (IntegerLiteral 0x8fcfc50 'int' 12)")
int ____localvar____0 = 12;
;
[DEBUG][alg/FlattenCFG/MoveLocalDeclToTop.cpp - line 105] initStyle 0
[DEBUG][alg/FlattenCFG/../Algorithm.h - line 91] --- ASSIGN EXPR BEGIN ---
[DEBUG][alg/FlattenCFG/../Algorithm.h - line 97] --- DECLREF END ---
[DEBUG][alg/FlattenCFG/../Algorithm.h - line 102] --- ASSIGN EXPR END ---
[DEBUG][alg/FlattenCFG/MoveLocalDeclToTop.cpp - line 26] Stmt DeclRefExpr ( 150662344 -> p 0 )
(DeclRefExpr 0x8faecc8 'int' lvalue Var 0x8fcfc20 '____localvar____0' 'int')
____localvar____0;
[DEBUG][alg/FlattenCFG/MoveLocalDeclToTop.cpp - line 26] Stmt IntegerLiteral ( 150797392 -> p 150797416 )
(IntegerLiteral 0x8fcfc50 'int' 12)
12;
[DEBUG][alg/FlattenCFG/MoveLocalDeclToTop.cpp - line 26] Stmt LabelStmt ( 150661424 -> p 150798336 )
(LabelStmt 0x8fae930 '____label____0'
  (CompoundStmt 0x8faea30
    (IfStmt 0x8fae9c0
      (DeclStmt 0x8fae9e0
        0x8fcfc90 "int ____localvar____1 =
          (BinaryOperator 0x8fcfd00 'int' '+'
            (ImplicitCastExpr 0x8fcfcf0 'int' <LValueToRValue>
              (DeclRefExpr 0x8fcfcc0 'int' lvalue Var 0x8fcfc20 '____localvar____0' 'int'))
            (IntegerLiteral 0x8fcfcd8 'int' 12))")
      (ImplicitCastExpr 0x8fcfd50 '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0x8fcfd40 'int' <LValueToRValue>
          (DeclRefExpr 0x8fcfd28 'int' lvalue Var 0x8fcfc90 '____localvar____1' 'int')))
      (CompoundStmt 0x8fae9a8
        (CompoundStmt 0x8fcfd18)
        (LabelStmt 0x8fae998 '____label____1'
          (CompoundStmt 0x8fae980
            (GotoStmt 0x8fae940 '____label____0':0x8fae900))))
      <<<NULL>>>)
    (LabelStmt 0x8faea20 '____label____2'
      (NullStmt 0x8faea10))))
____label____0:
{
    if (____localvar____1) {
        {
        }
      ____label____1:
        {
            goto ____label____0;
        }
    }
  ____label____2:
    ;
}
;
[DEBUG][alg/FlattenCFG/MoveLocalDeclToTop.cpp - line 26] Stmt CompoundStmt ( 150661680 -> p 150661424 )
(CompoundStmt 0x8faea30
  (IfStmt 0x8fae9c0
    (DeclStmt 0x8fae9e0
      0x8fcfc90 "int ____localvar____1 =
        (BinaryOperator 0x8fcfd00 'int' '+'
          (ImplicitCastExpr 0x8fcfcf0 'int' <LValueToRValue>
            (DeclRefExpr 0x8fcfcc0 'int' lvalue Var 0x8fcfc20 '____localvar____0' 'int'))
          (IntegerLiteral 0x8fcfcd8 'int' 12))")
    (ImplicitCastExpr 0x8fcfd50 '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0x8fcfd40 'int' <LValueToRValue>
        (DeclRefExpr 0x8fcfd28 'int' lvalue Var 0x8fcfc90 '____localvar____1' 'int')))
    (CompoundStmt 0x8fae9a8
      (CompoundStmt 0x8fcfd18)
      (LabelStmt 0x8fae998 '____label____1'
        (CompoundStmt 0x8fae980
          (GotoStmt 0x8fae940 '____label____0':0x8fae900))))
    <<<NULL>>>)
  (LabelStmt 0x8faea20 '____label____2'
    (NullStmt 0x8faea10)))
{
    if (____localvar____1) {
        {
        }
      ____label____1:
        {
            goto ____label____0;
        }
    }
  ____label____2:
    ;
}
;
[DEBUG][alg/FlattenCFG/MoveLocalDeclToTop.cpp - line 26] Stmt IfStmt ( 150661568 -> p 150661680 )
(IfStmt 0x8fae9c0
  (DeclStmt 0x8fae9e0
    0x8fcfc90 "int ____localvar____1 =
      (BinaryOperator 0x8fcfd00 'int' '+'
        (ImplicitCastExpr 0x8fcfcf0 'int' <LValueToRValue>
          (DeclRefExpr 0x8fcfcc0 'int' lvalue Var 0x8fcfc20 '____localvar____0' 'int'))
        (IntegerLiteral 0x8fcfcd8 'int' 12))")
  (ImplicitCastExpr 0x8fcfd50 '_Bool' <IntegralToBoolean>
    (ImplicitCastExpr 0x8fcfd40 'int' <LValueToRValue>
      (DeclRefExpr 0x8fcfd28 'int' lvalue Var 0x8fcfc90 '____localvar____1' 'int')))
  (CompoundStmt 0x8fae9a8
    (CompoundStmt 0x8fcfd18)
    (LabelStmt 0x8fae998 '____label____1'
      (CompoundStmt 0x8fae980
        (GotoStmt 0x8fae940 '____label____0':0x8fae900))))
  <<<NULL>>>)
if (____localvar____1) {
    {
    }
  ____label____1:
    {
        goto ____label____0;
    }
}
;
____localvar____1int ____localvar____1 = ____localvar____0 + 12;
[DEBUG][alg/FlattenCFG/MoveLocalDeclToTop.cpp - line 26] Stmt DeclStmt ( 150661600 -> p 150661568 )
(DeclStmt 0x8fae9e0
  0x8fcfc90 "int ____localvar____1 =
    (BinaryOperator 0x8fcfd00 'int' '+'
      (ImplicitCastExpr 0x8fcfcf0 'int' <LValueToRValue>
        (DeclRefExpr 0x8fcfcc0 'int' lvalue Var 0x8fcfc20 '____localvar____0' 'int'))
      (IntegerLiteral 0x8fcfcd8 'int' 12))")
int ____localvar____1 = ____localvar____0 + 12;
;
[DEBUG][alg/FlattenCFG/MoveLocalDeclToTop.cpp - line 105] initStyle 0
[DEBUG][alg/FlattenCFG/../Algorithm.h - line 91] --- ASSIGN EXPR BEGIN ---
[DEBUG][alg/FlattenCFG/../Algorithm.h - line 97] --- DECLREF END ---
[DEBUG][alg/FlattenCFG/../Algorithm.h - line 102] --- ASSIGN EXPR END ---
