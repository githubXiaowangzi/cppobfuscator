done1
#include "..." search starts here:
#include <...> search starts here:
 /usr/local/lib/clang/3.1/include
 /usr/local/include
 /usr/include
 /usr/include/linux
 /usr/include/c++/4.6
 /usr/include/c++/4.6/i486-linux-gnu
 /usr/include/c++/4.6/backward
End of search list.
#include "..." search starts here:
#include <...> search starts here:
 /usr/local/lib/clang/3.1/include
 /usr/local/include
 /usr/include
 /usr/include/linux
 /usr/include/c++/4.6
 /usr/include/c++/4.6/i486-linux-gnu
 /usr/include/c++/4.6/backward
End of search list.
[DEBUG][alg/InitParseConsumer.h - line 30] +decl, size = 1
[DEBUG][alg/InitParseConsumer.h - line 30] +decl, size = 2
[DEBUG][alg/InitParseConsumer.h - line 30] +decl, size = 3
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 30] enter FuncDecl
[DEBUG][alg/FlattenCFG/VarRenamer.cpp - line 17] decl: Function
[DEBUG][alg/FlattenCFG/VarRenamer.cpp - line 17] decl: Var
[DEBUG][alg/FlattenCFG/VarRenamer.cpp - line 26]  ---- name = x | type = int | desugared type = int | const = 0 | extern = 0 | POD = 1
1[DEBUG][alg/FlattenCFG/VarRenamer.cpp - line 17] decl: Var
[DEBUG][alg/FlattenCFG/VarRenamer.cpp - line 26]  ---- name = y | type = int | desugared type = int | const = 0 | extern = 0 | POD = 1
____localvar____0[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt CompoundStmt ac23018 abb37e0 abb37e0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt DeclStmt ac22e68 abb3780 abb3780
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt IntegerLiteral ac22e50 abeaff8 abeaff8
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt IntegerLiteral, start transform
(IntegerLiteral 0xac22e50 'int' 1)
1[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt DeclStmt, start transform
(DeclStmt 0xac22e68
  0xac22e20 "int ____localvar____0 =
    (IntegerLiteral 0xac22e50 'int' 1)")
int ____localvar____0 = 1;
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt SwitchStmt ac22f10 abd98b0 abd98b0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt DeclStmt ac22f30 abdad70 abdad70
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt ImplicitCastExpr ac22ed8 abb3938 abb3938
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt DeclRefExpr ac22ec0 abe1bd0 abe1bd0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt DeclRefExpr, start transform
(DeclRefExpr 0xac22ec0 'int' lvalue Var 0xac22e20 '____localvar____0' 'int')
____localvar____0[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt ImplicitCastExpr, start transform
(ImplicitCastExpr 0xac22ed8 'int' <LValueToRValue>
  (DeclRefExpr 0xac22ec0 'int' lvalue Var 0xac22e20 '____localvar____0' 'int'))
____localvar____0[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt DeclStmt, start transform
(DeclStmt 0xac22f30
  0xac22e90 "int ____localvar____1 =
    (ImplicitCastExpr 0xac22ed8 'int' <LValueToRValue>
      (DeclRefExpr 0xac22ec0 'int' lvalue Var 0xac22e20 '____localvar____0' 'int'))")
int ____localvar____1 = ____localvar____0;
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt ImplicitCastExpr ac22f00 abffed8 abffed8
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt DeclRefExpr ac22ee4 abffe88 abffe88
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt DeclRefExpr, start transform
(DeclRefExpr 0xac22ee4 'int' lvalue Var 0xac22e90 '____localvar____1' 'int')
____localvar____1[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt ImplicitCastExpr, start transform
(ImplicitCastExpr 0xac22f00 'int' <LValueToRValue>
  (DeclRefExpr 0xac22ee4 'int' lvalue Var 0xac22e90 '____localvar____1' 'int'))
____localvar____1[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt CompoundStmt ac22ff8 abf8030 abf8030
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt CaseStmt ac22f58 abf8060 abf8060
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt IntegerLiteral ac22f40 ababa60 ababa60
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt IntegerLiteral, start transform
(IntegerLiteral 0xac22f40 'int' 1)
1[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt BreakStmt ac22f78 ababa90 ababa90
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt BreakStmt, start transform
(BreakStmt 0xac22f78)
break;
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt CaseStmt, start transform
(CaseStmt 0xac22f58
  (IntegerLiteral 0xac22f40 'int' 1)
  <<<NULL>>>
  (BreakStmt 0xac22f78))
case 1:
break;
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt CaseStmt ac22f98 abf80b8 abf80b8
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt IntegerLiteral ac22f80 abf80e8 abf80e8
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt IntegerLiteral, start transform
(IntegerLiteral 0xac22f80 'int' 2)
2[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt CompoundStmt ac22fc0 abf8118 abf8118
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt BreakStmt ac22fb8 abf8148 abf8148
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt BreakStmt, start transform
(BreakStmt 0xac22fb8)
break;
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt CompoundStmt, start transform
(CompoundStmt 0xac22fc0
  (BreakStmt 0xac22fb8))
{
    break;
}
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt CaseStmt, start transform
(CaseStmt 0xac22f98
  (IntegerLiteral 0xac22f80 'int' 2)
  <<<NULL>>>
  (CompoundStmt 0xac22fc0
    (BreakStmt 0xac22fb8)))
case 2:
{
    break;
}
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt DefaultStmt ac22fe0 abae630 abae630
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt BreakStmt ac22fd8 abae660 abae660
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt BreakStmt, start transform
(BreakStmt 0xac22fd8)
break;
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt DefaultStmt, start transform
(DefaultStmt 0xac22fe0
  (BreakStmt 0xac22fd8))
default:
break;
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt CompoundStmt, start transform
(CompoundStmt 0xac22ff8
  (CaseStmt 0xac22f58
    (IntegerLiteral 0xac22f40 'int' 1)
    <<<NULL>>>
    (BreakStmt 0xac22f78))
  (CaseStmt 0xac22f98
    (IntegerLiteral 0xac22f80 'int' 2)
    <<<NULL>>>
    (CompoundStmt 0xac22fc0
      (BreakStmt 0xac22fb8)))
  (DefaultStmt 0xac22fe0
    (BreakStmt 0xac22fd8)))
{
  case 1:
    break;
  case 2:
    {
        break;
    }
  default:
    break;
}
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt SwitchStmt, start transform
(SwitchStmt 0xac22f10
  (DeclStmt 0xac22f30
    0xac22e90 "int ____localvar____1 =
      (ImplicitCastExpr 0xac22ed8 'int' <LValueToRValue>
        (DeclRefExpr 0xac22ec0 'int' lvalue Var 0xac22e20 '____localvar____0' 'int'))")
  (ImplicitCastExpr 0xac22f00 'int' <LValueToRValue>
    (DeclRefExpr 0xac22ee4 'int' lvalue Var 0xac22e90 '____localvar____1' 'int'))
  (CompoundStmt 0xac22ff8
    (CaseStmt 0xac22f58
      (IntegerLiteral 0xac22f40 'int' 1)
      <<<NULL>>>
      (BreakStmt 0xac22f78))
    (CaseStmt 0xac22f98
      (IntegerLiteral 0xac22f80 'int' 2)
      <<<NULL>>>
      (CompoundStmt 0xac22fc0
        (BreakStmt 0xac22fb8)))
    (DefaultStmt 0xac22fe0
      (BreakStmt 0xac22fd8))))
switch (____localvar____1) {
  case 1:
    break;
  case 2:
    {
        break;
    }
  default:
    break;
}
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 246] switch to if trans
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 251] LABEL_SWITCH
[DEBUG][./alg/Algorithm.h - line 57] info 180460428: ____label____0 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 264] get switch sub ptr
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 269] create if 
[DEBUG][./alg/Algorithm.h - line 57] info 180460464: ____label____1 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 279] iterator case/default
[DEBUG][./alg/Algorithm.h - line 57] info 180460500: ____label____2 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 292] record case: (abae630) ac22fe0 ac23010 ac24770
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 321] default stmt reached ac22fe0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 323] default stmt end
[DEBUG][./alg/Algorithm.h - line 57] info 180460536: ____label____3 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 292] record case: (abf80b8) ac22f98 ac2300c ac247b0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 295] case stmt reached ac22f98
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 307] set else if
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 319] case stmt end
[DEBUG][./alg/Algorithm.h - line 57] info 180460572: ____label____4 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 292] record case: (abf8060) ac22f58 ac23008 ac24840
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 295] case stmt reached ac22f58
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 307] set else if
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 319] case stmt end
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 329] add last else goto
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 340] transform break
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 354] pop stmt BreakStmt (bfdde048) ac22fd8 ac22fe8 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 358] break reached
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 361] break end
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 354] pop stmt DefaultStmt (bfdde048) ac22fe0 ac23010 ac24770
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 363] SwitchCase reached ac22fe0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 369] switchCase ended
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 354] pop stmt BreakStmt (bfdde048) ac22fb8 ac22fd0 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 358] break reached
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 361] break end
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 354] pop stmt CompoundStmt (bfdde048) ac22fc0 ac22fa8 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 354] pop stmt IntegerLiteral (bfdde048) ac22f80 ac22fa0 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 354] pop stmt CaseStmt (bfdde048) ac22f98 ac2300c ac247b0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 363] SwitchCase reached ac22f98
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 369] switchCase ended
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 354] pop stmt BreakStmt (bfdde048) ac22f78 ac22f68 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 358] break reached
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 361] break end
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 354] pop stmt IntegerLiteral (bfdde048) ac22f40 ac22f60 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 354] pop stmt CaseStmt (bfdde048) ac22f58 ac23008 ac24840
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 363] SwitchCase reached ac22f58
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 369] switchCase ended
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 354] pop stmt CompoundStmt (bfdde048) ac22ff8 ac22f1c 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 354] pop stmt DeclRefExpr (bfdde048) ac22ee4 ac22f08 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 354] pop stmt ImplicitCastExpr (bfdde048) ac22f00 ac22f18 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 354] pop stmt DeclRefExpr (bfdde048) ac22ec0 ac22ee0 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 354] pop stmt ImplicitCastExpr (bfdde048) ac22ed8 ac22eb8 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 354] pop stmt DeclStmt (bfdde048) ac22f30 ac22f14 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 377] set new switch body
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 397] done
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 400] free memory
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt CompoundStmt, start transform
(CompoundStmt 0xac23018
  (DeclStmt 0xac22e68
    0xac22e20 "int ____localvar____0 =
      (IntegerLiteral 0xac22e50 'int' 1)")
  (LabelStmt 0xac246d0 '____label____0'
    (CompoundStmt 0xac24900
      (DeclStmt 0xac22f30
        0xac22e90 "int ____localvar____1 =
          (ImplicitCastExpr 0xac22ed8 'int' <LValueToRValue>
            (DeclRefExpr 0xac22ec0 'int' lvalue Var 0xac22e20 '____localvar____0' 'int'))")
      (IfStmt 0xac246e0
        <<<NULL>>>
        (BinaryOperator 0xac247e8 '_Bool' '=='
          (ImplicitCastExpr 0xac247d8 'int' <LValueToRValue>
            (DeclRefExpr 0xac247c0 'int' lvalue Var 0xac22e90 '____localvar____1' 'int'))
          (IntegerLiteral 0xac22f80 'int' 2))
        (GotoStmt 0xac24800 '____label____3':0xac24780)
        (IfStmt 0xac248a0
          <<<NULL>>>
          (BinaryOperator 0xac24878 '_Bool' '=='
            (ImplicitCastExpr 0xac24868 'int' <LValueToRValue>
              (DeclRefExpr 0xac24850 'int' lvalue Var 0xac22e90 '____localvar____1' 'int'))
            (IntegerLiteral 0xac22f40 'int' 1))
          (GotoStmt 0xac24890 '____label____4':0xac24810)
          (GotoStmt 0xac248c0 '____label____2':0xac24740)))
      (CompoundStmt 0xac22ff8
        (LabelStmt 0xac24840 '____label____4'
          (GotoStmt 0xac248f0 '____label____1':0xac24700))
        (LabelStmt 0xac247b0 '____label____3'
          (CompoundStmt 0xac22fc0
            (GotoStmt 0xac248e0 '____label____1':0xac24700)))
        (LabelStmt 0xac24770 '____label____2'
          (GotoStmt 0xac248d0 '____label____1':0xac24700)))
      (LabelStmt 0xac24730 '____label____1'
        (NullStmt 0xac24720)))))
{
    int ____localvar____0 = 1;
  ____label____0:
    {
        int ____localvar____1 = ____localvar____0;
        if (____localvar____1 == 2)
            goto ____label____3;
        else if (____localvar____1 == 1)
            goto ____label____4;
        else
            goto ____label____2;
        {
          ____label____4:
            goto ____label____1;
          ____label____3:
            {
                goto ____label____1;
            }
          ____label____2:
            goto ____label____1;
        }
      ____label____1:
        ;
    }
}
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 30] enter FuncDecl
[DEBUG][alg/FlattenCFG/VarRenamer.cpp - line 17] decl: Function
[DEBUG][alg/FlattenCFG/VarRenamer.cpp - line 17] decl: Var
[DEBUG][alg/FlattenCFG/VarRenamer.cpp - line 26]  ---- name = x | type = int | desugared type = int | const = 0 | extern = 0 | POD = 1
1[DEBUG][alg/FlattenCFG/VarRenamer.cpp - line 17] decl: Var
[DEBUG][alg/FlattenCFG/VarRenamer.cpp - line 26]  ---- name = y | type = int | desugared type = int | const = 0 | extern = 0 | POD = 1
2[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt CompoundStmt ac23df8 abb37e0 abb37e0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt DeclStmt ac23178 abb3780 abb3780
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt IntegerLiteral ac230f0 abeaff8 abeaff8
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt IntegerLiteral, start transform
(IntegerLiteral 0xac230f0 'int' 1)
1[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt IntegerLiteral ac23150 abd98b0 abd98b0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt IntegerLiteral, start transform
(IntegerLiteral 0xac23150 'int' 2)
2[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt DeclStmt, start transform
(DeclStmt 0xac23178
  0xac230c0 "int ____localvar____2 =
    (IntegerLiteral 0xac230f0 'int' 1)"
  0xac23120 "int ____localvar____3 =
    (IntegerLiteral 0xac23150 'int' 2)")
int ____localvar____2 = 1, ____localvar____3 = 2;
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt SwitchStmt ac231f0 abb3938 abb3938
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt ImplicitCastExpr ac231e0 abdad70 abdad70
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt BinaryOperator ac231c8 ababd30 ababd30
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt DeclRefExpr ac23188 abe1bd0 abe1bd0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt DeclRefExpr, start transform
(DeclRefExpr 0xac23188 'int' lvalue Var 0xac230c0 '____localvar____2' 'int')
____localvar____2[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt ImplicitCastExpr ac231b8 abffe68 abffe68
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt DeclRefExpr ac231a0 abf8010 abf8010
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt DeclRefExpr, start transform
(DeclRefExpr 0xac231a0 'int' lvalue Var 0xac23120 '____localvar____3' 'int')
____localvar____3[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt ImplicitCastExpr, start transform
(ImplicitCastExpr 0xac231b8 'int' <LValueToRValue>
  (DeclRefExpr 0xac231a0 'int' lvalue Var 0xac23120 '____localvar____3' 'int'))
____localvar____3[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt BinaryOperator, start transform
(BinaryOperator 0xac231c8 'int' lvalue '='
  (DeclRefExpr 0xac23188 'int' lvalue Var 0xac230c0 '____localvar____2' 'int')
  (ImplicitCastExpr 0xac231b8 'int' <LValueToRValue>
    (DeclRefExpr 0xac231a0 'int' lvalue Var 0xac23120 '____localvar____3' 'int')))
____localvar____2 = ____localvar____3[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt ImplicitCastExpr, start transform
(ImplicitCastExpr 0xac231e0 'int' <LValueToRValue>
  (BinaryOperator 0xac231c8 'int' lvalue '='
    (DeclRefExpr 0xac23188 'int' lvalue Var 0xac230c0 '____localvar____2' 'int')
    (ImplicitCastExpr 0xac231b8 'int' <LValueToRValue>
      (DeclRefExpr 0xac231a0 'int' lvalue Var 0xac23120 '____localvar____3' 'int'))))
____localvar____2 = ____localvar____3[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt CompoundStmt ac23bc8 abf8040 abf8040
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt CallExpr ac23b38 ababa40 ababa40
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt ImplicitCastExpr ac23b28 ababa70 ababa70
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt DeclRefExpr ac23acc ababaa0 ababaa0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt DeclRefExpr, start transform
(DeclRefExpr 0xac23acc 'int (const char *restrict, ...)' lvalue Function 0xac1b2e0 'printf' 'int (const char *restrict, ...)')
printf[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt ImplicitCastExpr, start transform
(ImplicitCastExpr 0xac23b28 'int (*)(const char *restrict, ...)' <FunctionToPointerDecay>
  (DeclRefExpr 0xac23acc 'int (const char *restrict, ...)' lvalue Function 0xac1b2e0 'printf' 'int (const char *restrict, ...)'))
printf[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt ImplicitCastExpr ac23b60 ababa18 ababa18
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt StringLiteral ac23a90 abf8138 abf8138
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt StringLiteral, start transform
(StringLiteral 0xac23a90 'const char [4]' lvalue "%d\n")
"%d\n"[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt ImplicitCastExpr, start transform
(ImplicitCastExpr 0xac23b60 'const char *' <ArrayToPointerDecay>
  (StringLiteral 0xac23a90 'const char [4]' lvalue "%d\n"))
"%d\n"[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt ImplicitCastExpr ac23b70 abd95e0 abd95e0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt DeclRefExpr ac23ab4 abd95f0 abd95f0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt DeclRefExpr, start transform
(DeclRefExpr 0xac23ab4 'int' lvalue Var 0xac230c0 '____localvar____2' 'int')
____localvar____2[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt ImplicitCastExpr, start transform
(ImplicitCastExpr 0xac23b70 'int' <LValueToRValue>
  (DeclRefExpr 0xac23ab4 'int' lvalue Var 0xac230c0 '____localvar____2' 'int'))
____localvar____2[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt CallExpr, start transform
(CallExpr 0xac23b38 'int'
  (ImplicitCastExpr 0xac23b28 'int (*)(const char *restrict, ...)' <FunctionToPointerDecay>
    (DeclRefExpr 0xac23acc 'int (const char *restrict, ...)' lvalue Function 0xac1b2e0 'printf' 'int (const char *restrict, ...)'))
  (ImplicitCastExpr 0xac23b60 'const char *' <ArrayToPointerDecay>
    (StringLiteral 0xac23a90 'const char [4]' lvalue "%d\n"))
  (ImplicitCastExpr 0xac23b70 'int' <LValueToRValue>
    (DeclRefExpr 0xac23ab4 'int' lvalue Var 0xac230c0 '____localvar____2' 'int')))
printf("%d\n", ____localvar____2)[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt CaseStmt ac23b98 abd9640 abd9640
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt IntegerLiteral ac23b80 abd9650 abd9650
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt IntegerLiteral, start transform
(IntegerLiteral 0xac23b80 'int' 1)
1[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt NullStmt ac23bb8 abae610 abae610
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt NullStmt, start transform
(NullStmt 0xac23bb8)
;
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt CaseStmt, start transform
(CaseStmt 0xac23b98
  (IntegerLiteral 0xac23b80 'int' 1)
  <<<NULL>>>
  (NullStmt 0xac23bb8))
case 1:
;
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt CompoundStmt, start transform
(CompoundStmt 0xac23bc8
  (CallExpr 0xac23b38 'int'
    (ImplicitCastExpr 0xac23b28 'int (*)(const char *restrict, ...)' <FunctionToPointerDecay>
      (DeclRefExpr 0xac23acc 'int (const char *restrict, ...)' lvalue Function 0xac1b2e0 'printf' 'int (const char *restrict, ...)'))
    (ImplicitCastExpr 0xac23b60 'const char *' <ArrayToPointerDecay>
      (StringLiteral 0xac23a90 'const char [4]' lvalue "%d\n"))
    (ImplicitCastExpr 0xac23b70 'int' <LValueToRValue>
      (DeclRefExpr 0xac23ab4 'int' lvalue Var 0xac230c0 '____localvar____2' 'int')))
  (CaseStmt 0xac23b98
    (IntegerLiteral 0xac23b80 'int' 1)
    <<<NULL>>>
    (NullStmt 0xac23bb8)))
{
    printf("%d\n", ____localvar____2);
  case 1:
    ;
}
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt SwitchStmt, start transform
(SwitchStmt 0xac231f0
  <<<NULL>>>
  (ImplicitCastExpr 0xac231e0 'int' <LValueToRValue>
    (BinaryOperator 0xac231c8 'int' lvalue '='
      (DeclRefExpr 0xac23188 'int' lvalue Var 0xac230c0 '____localvar____2' 'int')
      (ImplicitCastExpr 0xac231b8 'int' <LValueToRValue>
        (DeclRefExpr 0xac231a0 'int' lvalue Var 0xac23120 '____localvar____3' 'int'))))
  (CompoundStmt 0xac23bc8
    (CallExpr 0xac23b38 'int'
      (ImplicitCastExpr 0xac23b28 'int (*)(const char *restrict, ...)' <FunctionToPointerDecay>
        (DeclRefExpr 0xac23acc 'int (const char *restrict, ...)' lvalue Function 0xac1b2e0 'printf' 'int (const char *restrict, ...)'))
      (ImplicitCastExpr 0xac23b60 'const char *' <ArrayToPointerDecay>
        (StringLiteral 0xac23a90 'const char [4]' lvalue "%d\n"))
      (ImplicitCastExpr 0xac23b70 'int' <LValueToRValue>
        (DeclRefExpr 0xac23ab4 'int' lvalue Var 0xac230c0 '____localvar____2' 'int')))
    (CaseStmt 0xac23b98
      (IntegerLiteral 0xac23b80 'int' 1)
      <<<NULL>>>
      (NullStmt 0xac23bb8))))
switch (____localvar____2 = ____localvar____3) {
    printf("%d\n", ____localvar____2);
  case 1:
    ;
}
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 246] switch to if trans
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 251] LABEL_SWITCH
[DEBUG][./alg/Algorithm.h - line 57] info 180460688: ____label____5 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 256] create cond var
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 264] get switch sub ptr
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 269] create if 
[DEBUG][./alg/Algorithm.h - line 57] info 180362016: ____label____6 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 279] iterator case/default
[DEBUG][./alg/Algorithm.h - line 57] info 180362052: ____label____7 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 292] record case: (abd9640) ac23b98 ac23bdc ac24a50
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 295] case stmt reached ac23b98
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 307] set else if
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 319] case stmt end
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 329] add last else goto
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 340] transform break
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 354] pop stmt NullStmt (bfdde048) ac23bb8 ac23ba8 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 354] pop stmt IntegerLiteral (bfdde048) ac23b80 ac23ba0 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 354] pop stmt CaseStmt (bfdde048) ac23b98 ac23bdc ac24a50
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 363] SwitchCase reached ac23b98
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 369] switchCase ended
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 354] pop stmt DeclRefExpr (bfdde048) ac23ab4 ac23b78 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 354] pop stmt ImplicitCastExpr (bfdde048) ac23b70 ac23b58 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 354] pop stmt StringLiteral (bfdde048) ac23a90 ac23b68 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 354] pop stmt ImplicitCastExpr (bfdde048) ac23b60 ac23b54 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 354] pop stmt DeclRefExpr (bfdde048) ac23acc ac23b30 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 354] pop stmt ImplicitCastExpr (bfdde048) ac23b28 ac23b50 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 354] pop stmt CallExpr (bfdde048) ac23b38 ac23bd8 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 354] pop stmt CompoundStmt (bfdde048) ac23bc8 ac231fc 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 354] pop stmt DeclRefExpr (bfdde048) ac231a0 ac231c0 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 354] pop stmt ImplicitCastExpr (bfdde048) ac231b8 ac231dc 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 354] pop stmt DeclRefExpr (bfdde048) ac23188 ac231d8 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 354] pop stmt BinaryOperator (bfdde048) ac231c8 ac231e8 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 354] pop stmt ImplicitCastExpr (bfdde048) ac231e0 ac231f8 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 377] set new switch body
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 397] done
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 400] free memory
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt SwitchStmt ac23c08 abdad70 abdad70
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt ImplicitCastExpr ac23bf8 abdadd0 abdadd0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt DeclRefExpr ac23be0 abffed8 abffed8
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt DeclRefExpr, start transform
(DeclRefExpr 0xac23be0 'int' lvalue Var 0xac230c0 '____localvar____2' 'int')
____localvar____2[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt ImplicitCastExpr, start transform
(ImplicitCastExpr 0xac23bf8 'int' <LValueToRValue>
  (DeclRefExpr 0xac23be0 'int' lvalue Var 0xac230c0 '____localvar____2' 'int'))
____localvar____2[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt CompoundStmt ac23dd8 abe1bd0 abe1bd0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt DefaultStmt ac23c70 abffe68 abffe68
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt BinaryOperator ac23c58 abf8010 abf8010
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt DeclRefExpr ac23c24 abf8040 abf8040
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt DeclRefExpr, start transform
(DeclRefExpr 0xac23c24 'int' lvalue Var 0xac230c0 '____localvar____2' 'int')
____localvar____2[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt IntegerLiteral ac23c40 ababa40 ababa40
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt IntegerLiteral, start transform
(IntegerLiteral 0xac23c40 'int' 1)
1[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt BinaryOperator, start transform
(BinaryOperator 0xac23c58 'int' lvalue '='
  (DeclRefExpr 0xac23c24 'int' lvalue Var 0xac230c0 '____localvar____2' 'int')
  (IntegerLiteral 0xac23c40 'int' 1))
____localvar____2 = 1[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt DefaultStmt, start transform
(DefaultStmt 0xac23c70
  (BinaryOperator 0xac23c58 'int' lvalue '='
    (DeclRefExpr 0xac23c24 'int' lvalue Var 0xac230c0 '____localvar____2' 'int')
    (IntegerLiteral 0xac23c40 'int' 1)))
default:
____localvar____2 = 1;
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt CaseStmt ac23ca0 ababa70 ababa70
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt IntegerLiteral ac23c88 ababaa0 ababaa0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt IntegerLiteral, start transform
(IntegerLiteral 0xac23c88 'int' 1)
1[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt BinaryOperator ac23cf0 abf80d8 abf80d8
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt DeclRefExpr ac23cc0 abf8108 abf8108
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt DeclRefExpr, start transform
(DeclRefExpr 0xac23cc0 'int' lvalue Var 0xac23120 '____localvar____3' 'int')
____localvar____3[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt IntegerLiteral ac23cd8 abf8138 abf8138
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt IntegerLiteral, start transform
(IntegerLiteral 0xac23cd8 'int' 2)
2[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt BinaryOperator, start transform
(BinaryOperator 0xac23cf0 'int' lvalue '='
  (DeclRefExpr 0xac23cc0 'int' lvalue Var 0xac23120 '____localvar____3' 'int')
  (IntegerLiteral 0xac23cd8 'int' 2))
____localvar____3 = 2[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt CaseStmt, start transform
(CaseStmt 0xac23ca0
  (IntegerLiteral 0xac23c88 'int' 1)
  <<<NULL>>>
  (BinaryOperator 0xac23cf0 'int' lvalue '='
    (DeclRefExpr 0xac23cc0 'int' lvalue Var 0xac23120 '____localvar____3' 'int')
    (IntegerLiteral 0xac23cd8 'int' 2)))
case 1:
____localvar____3 = 2;
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt SwitchStmt ac23d30 abab8b0 abab8b0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt ImplicitCastExpr ac23d20 abab8e0 abab8e0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt DeclRefExpr ac23d08 abab910 abab910
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt DeclRefExpr, start transform
(DeclRefExpr 0xac23d08 'int' lvalue Var 0xac23120 '____localvar____3' 'int')
____localvar____3[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt ImplicitCastExpr, start transform
(ImplicitCastExpr 0xac23d20 'int' <LValueToRValue>
  (DeclRefExpr 0xac23d08 'int' lvalue Var 0xac23120 '____localvar____3' 'int'))
____localvar____3[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt CompoundStmt ac23d90 abd95e0 abd95e0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt CaseStmt ac23d68 abd9610 abd9610
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt IntegerLiteral ac23d50 abd9640 abd9640
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt IntegerLiteral, start transform
(IntegerLiteral 0xac23d50 'int' 2)
2[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt BreakStmt ac23d88 abae630 abae630
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt BreakStmt, start transform
(BreakStmt 0xac23d88)
break;
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt CaseStmt, start transform
(CaseStmt 0xac23d68
  (IntegerLiteral 0xac23d50 'int' 2)
  <<<NULL>>>
  (BreakStmt 0xac23d88))
case 2:
break;
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt CompoundStmt, start transform
(CompoundStmt 0xac23d90
  (CaseStmt 0xac23d68
    (IntegerLiteral 0xac23d50 'int' 2)
    <<<NULL>>>
    (BreakStmt 0xac23d88)))
{
  case 2:
    break;
}
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt SwitchStmt, start transform
(SwitchStmt 0xac23d30
  <<<NULL>>>
  (ImplicitCastExpr 0xac23d20 'int' <LValueToRValue>
    (DeclRefExpr 0xac23d08 'int' lvalue Var 0xac23120 '____localvar____3' 'int'))
  (CompoundStmt 0xac23d90
    (CaseStmt 0xac23d68
      (IntegerLiteral 0xac23d50 'int' 2)
      <<<NULL>>>
      (BreakStmt 0xac23d88))))
switch (____localvar____3) {
  case 2:
    break;
}
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 246] switch to if trans
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 251] LABEL_SWITCH
[DEBUG][./alg/Algorithm.h - line 57] info 180362088: ____label____8 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 256] create cond var
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 264] get switch sub ptr
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 269] create if 
[DEBUG][./alg/Algorithm.h - line 57] info 180362164: ____label____9 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 279] iterator case/default
[DEBUG][./alg/Algorithm.h - line 57] info 180362200: ____label____10 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 292] record case: (abd9610) ac23d68 ac23da0 ac24c00
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 295] case stmt reached ac23d68
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 307] set else if
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 319] case stmt end
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 329] add last else goto
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 340] transform break
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 354] pop stmt BreakStmt (bfdddfa8) ac23d88 ac23d78 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 358] break reached
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 361] break end
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 354] pop stmt IntegerLiteral (bfdddfa8) ac23d50 ac23d70 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 354] pop stmt CaseStmt (bfdddfa8) ac23d68 ac23da0 ac24c00
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 363] SwitchCase reached ac23d68
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 369] switchCase ended
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 354] pop stmt CompoundStmt (bfdddfa8) ac23d90 ac23d3c 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 354] pop stmt DeclRefExpr (bfdddfa8) ac23d08 ac23d28 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 354] pop stmt ImplicitCastExpr (bfdddfa8) ac23d20 ac23d38 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 377] set new switch body
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 397] done
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 400] free memory
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt UnaryOperator ac23dc0 abab8e0 abab8e0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt DeclRefExpr ac23da4 abab910 abab910
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt DeclRefExpr, start transform
(DeclRefExpr 0xac23da4 'int' lvalue Var 0xac23120 '____localvar____3' 'int')
____localvar____3[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt UnaryOperator, start transform
(UnaryOperator 0xac23dc0 'int' postfix '++'
  (DeclRefExpr 0xac23da4 'int' lvalue Var 0xac23120 '____localvar____3' 'int'))
____localvar____3++[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt CompoundStmt, start transform
(CompoundStmt 0xac23dd8
  (DefaultStmt 0xac23c70
    (BinaryOperator 0xac23c58 'int' lvalue '='
      (DeclRefExpr 0xac23c24 'int' lvalue Var 0xac230c0 '____localvar____2' 'int')
      (IntegerLiteral 0xac23c40 'int' 1)))
  (CaseStmt 0xac23ca0
    (IntegerLiteral 0xac23c88 'int' 1)
    <<<NULL>>>
    (BinaryOperator 0xac23cf0 'int' lvalue '='
      (DeclRefExpr 0xac23cc0 'int' lvalue Var 0xac23120 '____localvar____3' 'int')
      (IntegerLiteral 0xac23cd8 'int' 2)))
  (LabelStmt 0xac24b10 '____label____8'
    (CompoundStmt 0xac24c80
      (DeclStmt 0xac24b60
        0xac24b20 "auto int ____localvar____5 =
          (ImplicitCastExpr 0xac23d20 'int' <LValueToRValue>
            (DeclRefExpr 0xac23d08 'int' lvalue Var 0xac23120 '____localvar____3' 'int'))")
      (IfStmt 0xac24b70
        <<<NULL>>>
        (BinaryOperator 0xac24c38 '_Bool' '=='
          (ImplicitCastExpr 0xac24c28 'int' <LValueToRValue>
            (DeclRefExpr 0xac24c10 'int' lvalue Var 0xac24b20 '____localvar____5' 'int'))
          (IntegerLiteral 0xac23d50 'int' 2))
        (GotoStmt 0xac24c50 '____label____10':0xac24bd0)
        (GotoStmt 0xac24c60 '____label____9':0xac24b90))
      (CompoundStmt 0xac23d90
        (LabelStmt 0xac24c00 '____label____10'
          (GotoStmt 0xac24c70 '____label____9':0xac24b90)))
      (LabelStmt 0xac24bc0 '____label____9'
        (NullStmt 0xac24bb0))))
  (UnaryOperator 0xac23dc0 'int' postfix '++'
    (DeclRefExpr 0xac23da4 'int' lvalue Var 0xac23120 '____localvar____3' 'int')))
{
  default:
    ____localvar____2 = 1;
  case 1:
    ____localvar____3 = 2;
  ____label____8:
    {
        int ____localvar____5 = ____localvar____3;
        if (____localvar____5 == 2)
            goto ____label____10;
        else
            goto ____label____9;
        {
          ____label____10:
            goto ____label____9;
        }
      ____label____9:
        ;
    }
    ____localvar____3++;
}
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt SwitchStmt, start transform
(SwitchStmt 0xac23c08
  <<<NULL>>>
  (ImplicitCastExpr 0xac23bf8 'int' <LValueToRValue>
    (DeclRefExpr 0xac23be0 'int' lvalue Var 0xac230c0 '____localvar____2' 'int'))
  (CompoundStmt 0xac23dd8
    (DefaultStmt 0xac23c70
      (BinaryOperator 0xac23c58 'int' lvalue '='
        (DeclRefExpr 0xac23c24 'int' lvalue Var 0xac230c0 '____localvar____2' 'int')
        (IntegerLiteral 0xac23c40 'int' 1)))
    (CaseStmt 0xac23ca0
      (IntegerLiteral 0xac23c88 'int' 1)
      <<<NULL>>>
      (BinaryOperator 0xac23cf0 'int' lvalue '='
        (DeclRefExpr 0xac23cc0 'int' lvalue Var 0xac23120 '____localvar____3' 'int')
        (IntegerLiteral 0xac23cd8 'int' 2)))
    (LabelStmt 0xac24b10 '____label____8'
      (CompoundStmt 0xac24c80
        (DeclStmt 0xac24b60
          0xac24b20 "auto int ____localvar____5 =
            (ImplicitCastExpr 0xac23d20 'int' <LValueToRValue>
              (DeclRefExpr 0xac23d08 'int' lvalue Var 0xac23120 '____localvar____3' 'int'))")
        (IfStmt 0xac24b70
          <<<NULL>>>
          (BinaryOperator 0xac24c38 '_Bool' '=='
            (ImplicitCastExpr 0xac24c28 'int' <LValueToRValue>
              (DeclRefExpr 0xac24c10 'int' lvalue Var 0xac24b20 '____localvar____5' 'int'))
            (IntegerLiteral 0xac23d50 'int' 2))
          (GotoStmt 0xac24c50 '____label____10':0xac24bd0)
          (GotoStmt 0xac24c60 '____label____9':0xac24b90))
        (CompoundStmt 0xac23d90
          (LabelStmt 0xac24c00 '____label____10'
            (GotoStmt 0xac24c70 '____label____9':0xac24b90)))
        (LabelStmt 0xac24bc0 '____label____9'
          (NullStmt 0xac24bb0))))
    (UnaryOperator 0xac23dc0 'int' postfix '++'
      (DeclRefExpr 0xac23da4 'int' lvalue Var 0xac23120 '____localvar____3' 'int'))))
switch (____localvar____2) {
  default:
    ____localvar____2 = 1;
  case 1:
    ____localvar____3 = 2;
  ____label____8:
    {
        int ____localvar____5 = ____localvar____3;
        if (____localvar____5 == 2)
            goto ____label____10;
        else
            goto ____label____9;
        {
          ____label____10:
            goto ____label____9;
        }
      ____label____9:
        ;
    }
    ____localvar____3++;
}
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 246] switch to if trans
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 251] LABEL_SWITCH
[DEBUG][./alg/Algorithm.h - line 57] info 180362236: ____label____11 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 256] create cond var
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 264] get switch sub ptr
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 269] create if 
[DEBUG][./alg/Algorithm.h - line 57] info 180362312: ____label____12 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 279] iterator case/default
[DEBUG][./alg/Algorithm.h - line 57] info 180362348: ____label____13 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 292] record case: (ababa70) ac23ca0 ac23dec ac24dc0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 295] case stmt reached ac23ca0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 307] set else if
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 319] case stmt end
[DEBUG][./alg/Algorithm.h - line 57] info 180362384: ____label____14 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 292] record case: (abffe68) ac23c70 ac23de8 ac24e50
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 321] default stmt reached ac23c70
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 323] default stmt end
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 329] add last else goto
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 340] transform break
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 354] pop stmt DeclRefExpr (bfdde048) ac23da4 ac23dd0 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 354] pop stmt UnaryOperator (bfdde048) ac23dc0 ac23df4 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 354] pop stmt SwitchStmt (bfdde048) ac23d30 ac23df0 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 354] pop stmt IntegerLiteral (bfdde048) ac23cd8 ac23d04 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 354] pop stmt DeclRefExpr (bfdde048) ac23cc0 ac23d00 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 354] pop stmt BinaryOperator (bfdde048) ac23cf0 ac23cb0 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 354] pop stmt IntegerLiteral (bfdde048) ac23c88 ac23ca8 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 354] pop stmt CaseStmt (bfdde048) ac23ca0 ac23dec ac24dc0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 363] SwitchCase reached ac23ca0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 369] switchCase ended
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 354] pop stmt IntegerLiteral (bfdde048) ac23c40 ac23c6c 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 354] pop stmt DeclRefExpr (bfdde048) ac23c24 ac23c68 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 354] pop stmt BinaryOperator (bfdde048) ac23c58 ac23c78 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 354] pop stmt DefaultStmt (bfdde048) ac23c70 ac23de8 ac24e50
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 363] SwitchCase reached ac23c70
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 369] switchCase ended
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 354] pop stmt CompoundStmt (bfdde048) ac23dd8 ac23c14 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 354] pop stmt DeclRefExpr (bfdde048) ac23be0 ac23c00 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 354] pop stmt ImplicitCastExpr (bfdde048) ac23bf8 ac23c10 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 377] set new switch body
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 397] done
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 400] free memory
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt CompoundStmt, start transform
(CompoundStmt 0xac23df8
  (DeclStmt 0xac23178
    0xac230c0 "int ____localvar____2 =
      (IntegerLiteral 0xac230f0 'int' 1)"
    0xac23120 "int ____localvar____3 =
      (IntegerLiteral 0xac23150 'int' 2)")
  (LabelStmt 0xac24950 '____label____5'
    (CompoundStmt 0xac24ac0
      (DeclStmt 0xac249a0
        0xac24960 "auto int ____localvar____4 =
          (ImplicitCastExpr 0xac231e0 'int' <LValueToRValue>
            (BinaryOperator 0xac231c8 'int' lvalue '='
              (DeclRefExpr 0xac23188 'int' lvalue Var 0xac230c0 '____localvar____2' 'int')
              (ImplicitCastExpr 0xac231b8 'int' <LValueToRValue>
                (DeclRefExpr 0xac231a0 'int' lvalue Var 0xac23120 '____localvar____3' 'int'))))")
      (IfStmt 0xac249b0
        <<<NULL>>>
        (BinaryOperator 0xac24a88 '_Bool' '=='
          (ImplicitCastExpr 0xac24a78 'int' <LValueToRValue>
            (DeclRefExpr 0xac24a60 'int' lvalue Var 0xac24960 '____localvar____4' 'int'))
          (IntegerLiteral 0xac23b80 'int' 1))
        (GotoStmt 0xac24aa0 '____label____7':0xac24a10)
        (GotoStmt 0xac24ab0 '____label____6':0xac249d0))
      (CompoundStmt 0xac23bc8
        (CallExpr 0xac23b38 'int'
          (ImplicitCastExpr 0xac23b28 'int (*)(const char *restrict, ...)' <FunctionToPointerDecay>
            (DeclRefExpr 0xac23acc 'int (const char *restrict, ...)' lvalue Function 0xac1b2e0 'printf' 'int (const char *restrict, ...)'))
          (ImplicitCastExpr 0xac23b60 'const char *' <ArrayToPointerDecay>
            (StringLiteral 0xac23a90 'const char [4]' lvalue "%d\n"))
          (ImplicitCastExpr 0xac23b70 'int' <LValueToRValue>
            (DeclRefExpr 0xac23ab4 'int' lvalue Var 0xac230c0 '____localvar____2' 'int')))
        (LabelStmt 0xac24a50 '____label____7'
          (NullStmt 0xac23bb8)))
      (LabelStmt 0xac24a00 '____label____6'
        (NullStmt 0xac249f0))))
  (LabelStmt 0xac24cd0 '____label____11'
    (CompoundStmt 0xac24e70
      (DeclStmt 0xac24d20
        0xac24ce0 "auto int ____localvar____6 =
          (ImplicitCastExpr 0xac23bf8 'int' <LValueToRValue>
            (DeclRefExpr 0xac23be0 'int' lvalue Var 0xac230c0 '____localvar____2' 'int'))")
      (IfStmt 0xac24d30
        <<<NULL>>>
        (BinaryOperator 0xac24df8 '_Bool' '=='
          (ImplicitCastExpr 0xac24de8 'int' <LValueToRValue>
            (DeclRefExpr 0xac24dd0 'int' lvalue Var 0xac24ce0 '____localvar____6' 'int'))
          (IntegerLiteral 0xac23c88 'int' 1))
        (GotoStmt 0xac24e10 '____label____13':0xac24d90)
        (GotoStmt 0xac24e60 '____label____14':0xac24e20))
      (CompoundStmt 0xac23dd8
        (LabelStmt 0xac24e50 '____label____14'
          (BinaryOperator 0xac23c58 'int' lvalue '='
            (DeclRefExpr 0xac23c24 'int' lvalue Var 0xac230c0 '____localvar____2' 'int')
            (IntegerLiteral 0xac23c40 'int' 1)))
        (LabelStmt 0xac24dc0 '____label____13'
          (BinaryOperator 0xac23cf0 'int' lvalue '='
            (DeclRefExpr 0xac23cc0 'int' lvalue Var 0xac23120 '____localvar____3' 'int')
            (IntegerLiteral 0xac23cd8 'int' 2)))
        (LabelStmt 0xac24b10 '____label____8'
          (CompoundStmt 0xac24c80
            (DeclStmt 0xac24b60
              0xac24b20 "auto int ____localvar____5 =
                (ImplicitCastExpr 0xac23d20 'int' <LValueToRValue>
                  (DeclRefExpr 0xac23d08 'int' lvalue Var 0xac23120 '____localvar____3' 'int'))")
            (IfStmt 0xac24b70
              <<<NULL>>>
              (BinaryOperator 0xac24c38 '_Bool' '=='
                (ImplicitCastExpr 0xac24c28 'int' <LValueToRValue>
                  (DeclRefExpr 0xac24c10 'int' lvalue Var 0xac24b20 '____localvar____5' 'int'))
                (IntegerLiteral 0xac23d50 'int' 2))
              (GotoStmt 0xac24c50 '____label____10':0xac24bd0)
              (GotoStmt 0xac24c60 '____label____9':0xac24b90))
            (CompoundStmt 0xac23d90
              (LabelStmt 0xac24c00 '____label____10'
                (GotoStmt 0xac24c70 '____label____9':0xac24b90)))
            (LabelStmt 0xac24bc0 '____label____9'
              (NullStmt 0xac24bb0))))
        (UnaryOperator 0xac23dc0 'int' postfix '++'
          (DeclRefExpr 0xac23da4 'int' lvalue Var 0xac23120 '____localvar____3' 'int')))
      (LabelStmt 0xac24d80 '____label____12'
        (NullStmt 0xac24d70)))))
{
    int ____localvar____2 = 1, ____localvar____3 = 2;
  ____label____5:
    {
        int ____localvar____4 = ____localvar____2 = ____localvar____3;
        if (____localvar____4 == 1)
            goto ____label____7;
        else
            goto ____label____6;
        {
            printf("%d\n", ____localvar____2);
          ____label____7:
            ;
        }
      ____label____6:
        ;
    }
  ____label____11:
    {
        int ____localvar____6 = ____localvar____2;
        if (____localvar____6 == 1)
            goto ____label____13;
        else
            goto ____label____14;
        {
          ____label____14:
            ____localvar____2 = 1;
          ____label____13:
            ____localvar____3 = 2;
          ____label____8:
            {
                int ____localvar____5 = ____localvar____3;
                if (____localvar____5 == 2)
                    goto ____label____10;
                else
                    goto ____label____9;
                {
                  ____label____10:
                    goto ____label____9;
                }
              ____label____9:
                ;
            }
            ____localvar____3++;
        }
      ____label____12:
        ;
    }
}
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 30] enter FuncDecl
[DEBUG][alg/FlattenCFG/VarRenamer.cpp - line 17] decl: Function
[DEBUG][alg/FlattenCFG/VarRenamer.cpp - line 17] decl: Var
[DEBUG][alg/FlattenCFG/VarRenamer.cpp - line 26]  ---- name = x | type = int | desugared type = int | const = 0 | extern = 0 | POD = 1
1[DEBUG][alg/FlattenCFG/VarRenamer.cpp - line 17] decl: Var
[DEBUG][alg/FlattenCFG/VarRenamer.cpp - line 26]  ---- name = y | type = int | desugared type = int | const = 0 | extern = 0 | POD = 1
____localvar____7 * 2[DEBUG][alg/FlattenCFG/VarRenamer.cpp - line 17] decl: Var
[DEBUG][alg/FlattenCFG/VarRenamer.cpp - line 26]  ---- name = next | type = int | desugared type = int | const = 0 | extern = 0 | POD = 1
0[DEBUG][alg/FlattenCFG/VarRenamer.cpp - line 17] decl: Var
[DEBUG][alg/FlattenCFG/VarRenamer.cpp - line 26]  ---- name = next | type = int | desugared type = int | const = 0 | extern = 0 | POD = 1
____localvar____7 * ____localvar____8[DEBUG][alg/FlattenCFG/VarRenamer.cpp - line 17] decl: Label
[DEBUG][alg/FlattenCFG/VarRenamer.cpp - line 17] decl: Label
[DEBUG][alg/FlattenCFG/VarRenamer.cpp - line 17] decl: Label
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt CompoundStmt ac24670 abb37e0 abb37e0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt CallExpr ac23f08 abb3780 abb3780
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt ImplicitCastExpr ac23ef8 abeaff8 abeaff8
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt DeclRefExpr ac23ec4 abb3938 abb3938
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt DeclRefExpr, start transform
(DeclRefExpr 0xac23ec4 'void (void)' lvalue Function 0xac23050 'assign_cond' 'void (void)')
assign_cond[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt ImplicitCastExpr, start transform
(ImplicitCastExpr 0xac23ef8 'void (*)(void)' <FunctionToPointerDecay>
  (DeclRefExpr 0xac23ec4 'void (void)' lvalue Function 0xac23050 'assign_cond' 'void (void)'))
assign_cond[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt CallExpr, start transform
(CallExpr 0xac23f08 'void'
  (ImplicitCastExpr 0xac23ef8 'void (*)(void)' <FunctionToPointerDecay>
    (DeclRefExpr 0xac23ec4 'void (void)' lvalue Function 0xac23050 'assign_cond' 'void (void)')))
assign_cond()[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt DeclStmt ac24038 abdad70 abdad70
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt IntegerLiteral ac23f70 abe1bd8 abe1bd8
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt IntegerLiteral, start transform
(IntegerLiteral 0xac23f70 'int' 1)
1[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt BinaryOperator ac24010 ababd30 ababd30
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt ImplicitCastExpr ac24000 abffe68 abffe68
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt DeclRefExpr ac23fd0 abf8010 abf8010
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt DeclRefExpr, start transform
(DeclRefExpr 0xac23fd0 'int' lvalue Var 0xac23f40 '____localvar____7' 'int')
____localvar____7[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt ImplicitCastExpr, start transform
(ImplicitCastExpr 0xac24000 'int' <LValueToRValue>
  (DeclRefExpr 0xac23fd0 'int' lvalue Var 0xac23f40 '____localvar____7' 'int'))
____localvar____7[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt IntegerLiteral ac23fe8 abf8040 abf8040
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt IntegerLiteral, start transform
(IntegerLiteral 0xac23fe8 'int' 2)
2[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt BinaryOperator, start transform
(BinaryOperator 0xac24010 'int' '*'
  (ImplicitCastExpr 0xac24000 'int' <LValueToRValue>
    (DeclRefExpr 0xac23fd0 'int' lvalue Var 0xac23f40 '____localvar____7' 'int'))
  (IntegerLiteral 0xac23fe8 'int' 2))
____localvar____7 * 2[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt DeclStmt, start transform
(DeclStmt 0xac24038
  0xac23f40 "int ____localvar____7 =
    (IntegerLiteral 0xac23f70 'int' 1)"
  0xac23fa0 "int ____localvar____8 =
    (BinaryOperator 0xac24010 'int' '*'
      (ImplicitCastExpr 0xac24000 'int' <LValueToRValue>
        (DeclRefExpr 0xac23fd0 'int' lvalue Var 0xac23f40 '____localvar____7' 'int'))
      (IntegerLiteral 0xac23fe8 'int' 2))")
int ____localvar____7 = 1, ____localvar____8 = ____localvar____7 * 2;
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt DeclStmt ac240a8 abdadb0 abdadb0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt IntegerLiteral ac24090 ababa40 ababa40
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt IntegerLiteral, start transform
(IntegerLiteral 0xac24090 'int' 0)
0[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt DeclStmt, start transform
(DeclStmt 0xac240a8
  0xac24060 "int ____localvar____9 =
    (IntegerLiteral 0xac24090 'int' 0)")
int ____localvar____9 = 0;
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt SwitchStmt ac24190 ababa98 ababa98
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt DeclStmt ac241b0 abf80b8 abf80b8
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt BinaryOperator ac24150 abf80e8 abf80e8
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt ImplicitCastExpr ac24130 abf8118 abf8118
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt DeclRefExpr ac24100 abf8148 abf8148
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt DeclRefExpr, start transform
(DeclRefExpr 0xac24100 'int' lvalue Var 0xac23f40 '____localvar____7' 'int')
____localvar____7[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt ImplicitCastExpr, start transform
(ImplicitCastExpr 0xac24130 'int' <LValueToRValue>
  (DeclRefExpr 0xac24100 'int' lvalue Var 0xac23f40 '____localvar____7' 'int'))
____localvar____7[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt ImplicitCastExpr ac24140 abab8b0 abab8b0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt DeclRefExpr ac24118 abab8e0 abab8e0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt DeclRefExpr, start transform
(DeclRefExpr 0xac24118 'int' lvalue Var 0xac23fa0 '____localvar____8' 'int')
____localvar____8[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt ImplicitCastExpr, start transform
(ImplicitCastExpr 0xac24140 'int' <LValueToRValue>
  (DeclRefExpr 0xac24118 'int' lvalue Var 0xac23fa0 '____localvar____8' 'int'))
____localvar____8[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt BinaryOperator, start transform
(BinaryOperator 0xac24150 'int' '*'
  (ImplicitCastExpr 0xac24130 'int' <LValueToRValue>
    (DeclRefExpr 0xac24100 'int' lvalue Var 0xac23f40 '____localvar____7' 'int'))
  (ImplicitCastExpr 0xac24140 'int' <LValueToRValue>
    (DeclRefExpr 0xac24118 'int' lvalue Var 0xac23fa0 '____localvar____8' 'int')))
____localvar____7 * ____localvar____8[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt DeclStmt, start transform
(DeclStmt 0xac241b0
  0xac240d0 "int ____localvar____10 =
    (BinaryOperator 0xac24150 'int' '*'
      (ImplicitCastExpr 0xac24130 'int' <LValueToRValue>
        (DeclRefExpr 0xac24100 'int' lvalue Var 0xac23f40 '____localvar____7' 'int'))
      (ImplicitCastExpr 0xac24140 'int' <LValueToRValue>
        (DeclRefExpr 0xac24118 'int' lvalue Var 0xac23fa0 '____localvar____8' 'int')))")
int ____localvar____10 = ____localvar____7 * ____localvar____8;
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt ImplicitCastExpr ac24180 abffed8 abffed8
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt DeclRefExpr ac24168 abae610 abae610
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt DeclRefExpr, start transform
(DeclRefExpr 0xac24168 'int' lvalue Var 0xac240d0 '____localvar____10' 'int')
____localvar____10[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt ImplicitCastExpr, start transform
(ImplicitCastExpr 0xac24180 'int' <LValueToRValue>
  (DeclRefExpr 0xac24168 'int' lvalue Var 0xac240d0 '____localvar____10' 'int'))
____localvar____10[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt CompoundStmt ac24610 abae658 abae658
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt ForStmt ac241d0 abae688 abae688
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt CompoundStmt ac241c0 abd95c0 abd95c0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt CompoundStmt, start transform
(CompoundStmt 0xac241c0)
{
}
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt ForStmt, start transform
(ForStmt 0xac241d0
  <<<NULL>>>
  <<<NULL>>>
  <<<NULL>>>
  <<<NULL>>>
  (CompoundStmt 0xac241c0))
for (;;) {
}
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 177] for to if trans
[DEBUG][./alg/Algorithm.h - line 57] info 180362580: ____label____15 0
[DEBUG][./alg/Algorithm.h - line 57] info 180362616: ____label____16 0
[DEBUG][./alg/Algorithm.h - line 57] info 180362652: ____label____17 0
[DEBUG][./alg/Algorithm.h - line 57] info 180362688: ____label____18 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 419] pop stmt CompoundStmt (bfdddf08) ac241c0 ac241e4 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt CaseStmt ac24210 abd95c0 abd95c0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt IntegerLiteral ac241f8 abd9630 abd9630
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt IntegerLiteral, start transform
(IntegerLiteral 0xac241f8 'int' 0)
0[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt LabelStmt ac242a0 abd9640 abd9640
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt BinaryOperator ac24260 abd9650 abd9650
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt DeclRefExpr ac24230 abab9a0 abab9a0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt DeclRefExpr, start transform
(DeclRefExpr 0xac24230 'int' lvalue Var 0xac240d0 '____localvar____10' 'int')
____localvar____10[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt IntegerLiteral ac24248 abab9d0 abab9d0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt IntegerLiteral, start transform
(IntegerLiteral 0xac24248 'int' 2)
2[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt BinaryOperator, start transform
(BinaryOperator 0xac24260 'int' lvalue '='
  (DeclRefExpr 0xac24230 'int' lvalue Var 0xac240d0 '____localvar____10' 'int')
  (IntegerLiteral 0xac24248 'int' 2))
____localvar____10 = 2[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt LabelStmt, start transform
(LabelStmt 0xac242a0 'LBL_IN_CASE'
  (BinaryOperator 0xac24260 'int' lvalue '='
    (DeclRefExpr 0xac24230 'int' lvalue Var 0xac240d0 '____localvar____10' 'int')
    (IntegerLiteral 0xac24248 'int' 2)))
LBL_IN_CASE:
____localvar____10 = 2;
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt CaseStmt, start transform
(CaseStmt 0xac24210
  (IntegerLiteral 0xac241f8 'int' 0)
  <<<NULL>>>
  (LabelStmt 0xac242a0 'LBL_IN_CASE'
    (BinaryOperator 0xac24260 'int' lvalue '='
      (DeclRefExpr 0xac24230 'int' lvalue Var 0xac240d0 '____localvar____10' 'int')
      (IntegerLiteral 0xac24248 'int' 2))))
case 0:
LBL_IN_CASE:
____localvar____10 = 2;
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt LabelStmt ac24330 ababa00 ababa00
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt CaseStmt ac242e0 abfffd8 abfffd8
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt IntegerLiteral ac242b0 ac00008 ac00008
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt IntegerLiteral, start transform
(IntegerLiteral 0xac242b0 'int' 2)
2[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt IntegerLiteral ac242c8 ac00038 ac00038
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt IntegerLiteral, start transform
(IntegerLiteral 0xac242c8 'int' 3)
3[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt BreakStmt ac24300 ac00068 ac00068
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt BreakStmt, start transform
(BreakStmt 0xac24300)
break;
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt CaseStmt, start transform
(CaseStmt 0xac242e0
  (IntegerLiteral 0xac242b0 'int' 2)
  (IntegerLiteral 0xac242c8 'int' 3)
  (BreakStmt 0xac24300))
case 2 ... 3:
break;
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt LabelStmt, start transform
(LabelStmt 0xac24330 'LBL_BEFORE_CASE'
  (CaseStmt 0xac242e0
    (IntegerLiteral 0xac242b0 'int' 2)
    (IntegerLiteral 0xac242c8 'int' 3)
    (BreakStmt 0xac24300)))
LBL_BEFORE_CASE:
case 2 ... 3:
break;
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt IfStmt ac24430 ababa10 ababa10
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt BinaryOperator ac24380 ac00098 ac00098
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt ImplicitCastExpr ac24370 abe1688 abe1688
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt DeclRefExpr ac24340 abe16b8 abe16b8
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt DeclRefExpr, start transform
(DeclRefExpr 0xac24340 'int' lvalue Var 0xac240d0 '____localvar____10' 'int')
____localvar____10[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt ImplicitCastExpr, start transform
(ImplicitCastExpr 0xac24370 'int' <LValueToRValue>
  (DeclRefExpr 0xac24340 'int' lvalue Var 0xac240d0 '____localvar____10' 'int'))
____localvar____10[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt IntegerLiteral ac24358 abe16e8 abe16e8
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt IntegerLiteral, start transform
(IntegerLiteral 0xac24358 'int' 3)
3[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt BinaryOperator, start transform
(BinaryOperator 0xac24380 '_Bool' '=='
  (ImplicitCastExpr 0xac24370 'int' <LValueToRValue>
    (DeclRefExpr 0xac24340 'int' lvalue Var 0xac240d0 '____localvar____10' 'int'))
  (IntegerLiteral 0xac24358 'int' 3))
____localvar____10 == 3[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt CompoundStmt ac24418 abe1718 abe1718
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt ForStmt ac243f0 abe1748 abe1748
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt CompoundStmt ac243d8 abeb140 abeb140
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt CaseStmt ac243b0 abeb170 abeb170
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt IntegerLiteral ac24398 abeb1a0 abeb1a0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt IntegerLiteral, start transform
(IntegerLiteral 0xac24398 'int' 6)
6[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt BreakStmt ac243d0 abeb1d0 abeb1d0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt BreakStmt, start transform
(BreakStmt 0xac243d0)
break;
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt CaseStmt, start transform
(CaseStmt 0xac243b0
  (IntegerLiteral 0xac24398 'int' 6)
  <<<NULL>>>
  (BreakStmt 0xac243d0))
case 6:
break;
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt CompoundStmt, start transform
(CompoundStmt 0xac243d8
  (CaseStmt 0xac243b0
    (IntegerLiteral 0xac24398 'int' 6)
    <<<NULL>>>
    (BreakStmt 0xac243d0)))
{
  case 6:
    break;
}
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt ForStmt, start transform
(ForStmt 0xac243f0
  <<<NULL>>>
  <<<NULL>>>
  <<<NULL>>>
  <<<NULL>>>
  (CompoundStmt 0xac243d8
    (CaseStmt 0xac243b0
      (IntegerLiteral 0xac24398 'int' 6)
      <<<NULL>>>
      (BreakStmt 0xac243d0))))
for (;;) {
  case 6:
    break;
}
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 177] for to if trans
[DEBUG][./alg/Algorithm.h - line 57] info 180362724: ____label____19 0
[DEBUG][./alg/Algorithm.h - line 57] info 180362760: ____label____20 0
[DEBUG][./alg/Algorithm.h - line 57] info 180362796: ____label____21 0
[DEBUG][./alg/Algorithm.h - line 57] info 180362832: ____label____22 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 419] pop stmt BreakStmt (bfddde68) ac243d0 ac243c0 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 419] pop stmt IntegerLiteral (bfddde68) ac24398 ac243b8 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 419] pop stmt CompoundStmt (bfddde68) ac243d8 ac24404 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt CompoundStmt, start transform
(CompoundStmt 0xac24418
  (LabelStmt 0xac25060 '____label____19'
    (CompoundStmt 0xac251c0
      (NullStmt 0xac251b0)
      (LabelStmt 0xac250a0 '____label____20'
        (IfStmt 0xac25190
          <<<NULL>>>
          (CXXBoolLiteralExpr 0xac25168 '_Bool' true)
          (CompoundStmt 0xac25178
            (CompoundStmt 0xac243d8
              (CaseStmt 0xac243b0
                (IntegerLiteral 0xac24398 'int' 6)
                <<<NULL>>>
                (GotoStmt 0xac25130 '____label____22':0xac250f0)))
            (LabelStmt 0xac250e0 '____label____21'
              (CompoundStmt 0xac25150
                (GotoStmt 0xac25140 '____label____20':0xac25070))))
          <<<NULL>>>))
      (LabelStmt 0xac25120 '____label____22'
        (NullStmt 0xac25110)))))
{
  ____label____19:
    {
        ;
      ____label____20:
        if (true) {
            {
              case 6:
                goto ____label____22;
            }
          ____label____21:
            {
                goto ____label____20;
            }
        }
      ____label____22:
        ;
    }
}
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt IfStmt, start transform
(IfStmt 0xac24430
  <<<NULL>>>
  (BinaryOperator 0xac24380 '_Bool' '=='
    (ImplicitCastExpr 0xac24370 'int' <LValueToRValue>
      (DeclRefExpr 0xac24340 'int' lvalue Var 0xac240d0 '____localvar____10' 'int'))
    (IntegerLiteral 0xac24358 'int' 3))
  (CompoundStmt 0xac24418
    (LabelStmt 0xac25060 '____label____19'
      (CompoundStmt 0xac251c0
        (NullStmt 0xac251b0)
        (LabelStmt 0xac250a0 '____label____20'
          (IfStmt 0xac25190
            <<<NULL>>>
            (CXXBoolLiteralExpr 0xac25168 '_Bool' true)
            (CompoundStmt 0xac25178
              (CompoundStmt 0xac243d8
                (CaseStmt 0xac243b0
                  (IntegerLiteral 0xac24398 'int' 6)
                  <<<NULL>>>
                  (GotoStmt 0xac25130 '____label____22':0xac250f0)))
              (LabelStmt 0xac250e0 '____label____21'
                (CompoundStmt 0xac25150
                  (GotoStmt 0xac25140 '____label____20':0xac25070))))
            <<<NULL>>>))
        (LabelStmt 0xac25120 '____label____22'
          (NullStmt 0xac25110)))))
  <<<NULL>>>)
if (____localvar____10 == 3) {
  ____label____19:
    {
        ;
      ____label____20:
        if (true) {
            {
              case 6:
                goto ____label____22;
            }
          ____label____21:
            {
                goto ____label____20;
            }
        }
      ____label____22:
        ;
    }
}
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt CaseStmt ac24468 abeb140 abeb140
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt IntegerLiteral ac24450 abeb1a0 abeb1a0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt IntegerLiteral, start transform
(IntegerLiteral 0xac24450 'int' 4)
4[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt BinaryOperator ac244f8 abeb1d0 abeb1d0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt DeclRefExpr ac24488 abeb200 abeb200
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt DeclRefExpr, start transform
(DeclRefExpr 0xac24488 'int' lvalue Var 0xac23fa0 '____localvar____8' 'int')
____localvar____8[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt BinaryOperator ac244e0 abf3198 abf3198
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt ImplicitCastExpr ac244d0 abdae38 abdae38
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt DeclRefExpr ac244a0 abdae68 abdae68
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt DeclRefExpr, start transform
(DeclRefExpr 0xac244a0 'int' lvalue Var 0xac23fa0 '____localvar____8' 'int')
____localvar____8[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt ImplicitCastExpr, start transform
(ImplicitCastExpr 0xac244d0 'int' <LValueToRValue>
  (DeclRefExpr 0xac244a0 'int' lvalue Var 0xac23fa0 '____localvar____8' 'int'))
____localvar____8[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt IntegerLiteral ac244b8 abdae98 abdae98
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt IntegerLiteral, start transform
(IntegerLiteral 0xac244b8 'int' 2)
2[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt BinaryOperator, start transform
(BinaryOperator 0xac244e0 'int' '-'
  (ImplicitCastExpr 0xac244d0 'int' <LValueToRValue>
    (DeclRefExpr 0xac244a0 'int' lvalue Var 0xac23fa0 '____localvar____8' 'int'))
  (IntegerLiteral 0xac244b8 'int' 2))
____localvar____8 - 2[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt BinaryOperator, start transform
(BinaryOperator 0xac244f8 'int' lvalue '='
  (DeclRefExpr 0xac24488 'int' lvalue Var 0xac23fa0 '____localvar____8' 'int')
  (BinaryOperator 0xac244e0 'int' '-'
    (ImplicitCastExpr 0xac244d0 'int' <LValueToRValue>
      (DeclRefExpr 0xac244a0 'int' lvalue Var 0xac23fa0 '____localvar____8' 'int'))
    (IntegerLiteral 0xac244b8 'int' 2)))
____localvar____8 = ____localvar____8 - 2[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt CaseStmt, start transform
(CaseStmt 0xac24468
  (IntegerLiteral 0xac24450 'int' 4)
  <<<NULL>>>
  (BinaryOperator 0xac244f8 'int' lvalue '='
    (DeclRefExpr 0xac24488 'int' lvalue Var 0xac23fa0 '____localvar____8' 'int')
    (BinaryOperator 0xac244e0 'int' '-'
      (ImplicitCastExpr 0xac244d0 'int' <LValueToRValue>
        (DeclRefExpr 0xac244a0 'int' lvalue Var 0xac23fa0 '____localvar____8' 'int'))
      (IntegerLiteral 0xac244b8 'int' 2))))
case 4:
____localvar____8 = ____localvar____8 - 2;
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt BinaryOperator ac24540 abdaec8 abdaec8
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt DeclRefExpr ac24510 abdaed8 abdaed8
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt DeclRefExpr, start transform
(DeclRefExpr 0xac24510 'int' lvalue Var 0xac240d0 '____localvar____10' 'int')
____localvar____10[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt IntegerLiteral ac24528 abb14e0 abb14e0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt IntegerLiteral, start transform
(IntegerLiteral 0xac24528 'int' 3)
3[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt BinaryOperator, start transform
(BinaryOperator 0xac24540 'int' lvalue '='
  (DeclRefExpr 0xac24510 'int' lvalue Var 0xac240d0 '____localvar____10' 'int')
  (IntegerLiteral 0xac24528 'int' 3))
____localvar____10 = 3[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt BreakStmt ac24558 abb1510 abb1510
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt BreakStmt, start transform
(BreakStmt 0xac24558)
break;
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt CaseStmt ac24578 abb1540 abb1540
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt IntegerLiteral ac24560 abb1570 abb1570
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt IntegerLiteral, start transform
(IntegerLiteral 0xac24560 'int' 5)
5[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt NullStmt ac24598 abb1580 abb1580
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt NullStmt, start transform
(NullStmt 0xac24598)
;
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt CaseStmt, start transform
(CaseStmt 0xac24578
  (IntegerLiteral 0xac24560 'int' 5)
  <<<NULL>>>
  (NullStmt 0xac24598))
case 5:
;
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt DefaultStmt ac245b8 abfde68 abfde68
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt GotoStmt ac245a8 abfde98 abfde98
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt GotoStmt, start transform
(GotoStmt 0xac245a8 'LBL_BEFORE_CASE':0xac24310)
goto LBL_BEFORE_CASE;
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt DefaultStmt, start transform
(DefaultStmt 0xac245b8
  (GotoStmt 0xac245a8 'LBL_BEFORE_CASE':0xac24310))
default:
goto LBL_BEFORE_CASE;
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt LabelStmt ac24600 abfdec8 abfdec8
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt BreakStmt ac245d0 abfdef8 abfdef8
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt BreakStmt, start transform
(BreakStmt 0xac245d0)
break;
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt LabelStmt, start transform
(LabelStmt 0xac24600 'LBL_BEFORE_BREAK'
  (BreakStmt 0xac245d0))
LBL_BEFORE_BREAK:
break;
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt CompoundStmt, start transform
(CompoundStmt 0xac24610
  (LabelStmt 0xac24ec0 '____label____15'
    (CompoundStmt 0xac25010
      (NullStmt 0xac25000)
      (LabelStmt 0xac24f00 '____label____16'
        (IfStmt 0xac24fe0
          <<<NULL>>>
          (CXXBoolLiteralExpr 0xac24fb8 '_Bool' true)
          (CompoundStmt 0xac24fc8
            (CompoundStmt 0xac241c0)
            (LabelStmt 0xac24f40 '____label____17'
              (CompoundStmt 0xac24fa0
                (GotoStmt 0xac24f90 '____label____16':0xac24ed0))))
          <<<NULL>>>))
      (LabelStmt 0xac24f80 '____label____18'
        (NullStmt 0xac24f70))))
  (CaseStmt 0xac24210
    (IntegerLiteral 0xac241f8 'int' 0)
    <<<NULL>>>
    (LabelStmt 0xac242a0 'LBL_IN_CASE'
      (BinaryOperator 0xac24260 'int' lvalue '='
        (DeclRefExpr 0xac24230 'int' lvalue Var 0xac240d0 '____localvar____10' 'int')
        (IntegerLiteral 0xac24248 'int' 2))))
  (LabelStmt 0xac24330 'LBL_BEFORE_CASE'
    (CaseStmt 0xac242e0
      (IntegerLiteral 0xac242b0 'int' 2)
      (IntegerLiteral 0xac242c8 'int' 3)
      (BreakStmt 0xac24300)))
  (IfStmt 0xac24430
    <<<NULL>>>
    (BinaryOperator 0xac24380 '_Bool' '=='
      (ImplicitCastExpr 0xac24370 'int' <LValueToRValue>
        (DeclRefExpr 0xac24340 'int' lvalue Var 0xac240d0 '____localvar____10' 'int'))
      (IntegerLiteral 0xac24358 'int' 3))
    (CompoundStmt 0xac24418
      (LabelStmt 0xac25060 '____label____19'
        (CompoundStmt 0xac251c0
          (NullStmt 0xac251b0)
          (LabelStmt 0xac250a0 '____label____20'
            (IfStmt 0xac25190
              <<<NULL>>>
              (CXXBoolLiteralExpr 0xac25168 '_Bool' true)
              (CompoundStmt 0xac25178
                (CompoundStmt 0xac243d8
                  (CaseStmt 0xac243b0
                    (IntegerLiteral 0xac24398 'int' 6)
                    <<<NULL>>>
                    (GotoStmt 0xac25130 '____label____22':0xac250f0)))
                (LabelStmt 0xac250e0 '____label____21'
                  (CompoundStmt 0xac25150
                    (GotoStmt 0xac25140 '____label____20':0xac25070))))
              <<<NULL>>>))
          (LabelStmt 0xac25120 '____label____22'
            (NullStmt 0xac25110)))))
    <<<NULL>>>)
  (CaseStmt 0xac24468
    (IntegerLiteral 0xac24450 'int' 4)
    <<<NULL>>>
    (BinaryOperator 0xac244f8 'int' lvalue '='
      (DeclRefExpr 0xac24488 'int' lvalue Var 0xac23fa0 '____localvar____8' 'int')
      (BinaryOperator 0xac244e0 'int' '-'
        (ImplicitCastExpr 0xac244d0 'int' <LValueToRValue>
          (DeclRefExpr 0xac244a0 'int' lvalue Var 0xac23fa0 '____localvar____8' 'int'))
        (IntegerLiteral 0xac244b8 'int' 2))))
  (BinaryOperator 0xac24540 'int' lvalue '='
    (DeclRefExpr 0xac24510 'int' lvalue Var 0xac240d0 '____localvar____10' 'int')
    (IntegerLiteral 0xac24528 'int' 3))
  (BreakStmt 0xac24558)
  (CaseStmt 0xac24578
    (IntegerLiteral 0xac24560 'int' 5)
    <<<NULL>>>
    (NullStmt 0xac24598))
  (DefaultStmt 0xac245b8
    (GotoStmt 0xac245a8 'LBL_BEFORE_CASE':0xac24310))
  (LabelStmt 0xac24600 'LBL_BEFORE_BREAK'
    (BreakStmt 0xac245d0)))
{
  ____label____15:
    {
        ;
      ____label____16:
        if (true) {
            {
            }
          ____label____17:
            {
                goto ____label____16;
            }
        }
      ____label____18:
        ;
    }
  case 0:
  LBL_IN_CASE:
    ____localvar____10 = 2;
  LBL_BEFORE_CASE:
  case 2 ... 3:
    break;
    if (____localvar____10 == 3) {
      ____label____19:
        {
            ;
          ____label____20:
            if (true) {
                {
                  case 6:
                    goto ____label____22;
                }
              ____label____21:
                {
                    goto ____label____20;
                }
            }
          ____label____22:
            ;
        }
    }
  case 4:
    ____localvar____8 = ____localvar____8 - 2;
    ____localvar____10 = 3;
    break;
  case 5:
    ;
  default:
    goto LBL_BEFORE_CASE;
  LBL_BEFORE_BREAK:
    break;
}
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt SwitchStmt, start transform
(SwitchStmt 0xac24190
  (DeclStmt 0xac241b0
    0xac240d0 "int ____localvar____10 =
      (BinaryOperator 0xac24150 'int' '*'
        (ImplicitCastExpr 0xac24130 'int' <LValueToRValue>
          (DeclRefExpr 0xac24100 'int' lvalue Var 0xac23f40 '____localvar____7' 'int'))
        (ImplicitCastExpr 0xac24140 'int' <LValueToRValue>
          (DeclRefExpr 0xac24118 'int' lvalue Var 0xac23fa0 '____localvar____8' 'int')))")
  (ImplicitCastExpr 0xac24180 'int' <LValueToRValue>
    (DeclRefExpr 0xac24168 'int' lvalue Var 0xac240d0 '____localvar____10' 'int'))
  (CompoundStmt 0xac24610
    (LabelStmt 0xac24ec0 '____label____15'
      (CompoundStmt 0xac25010
        (NullStmt 0xac25000)
        (LabelStmt 0xac24f00 '____label____16'
          (IfStmt 0xac24fe0
            <<<NULL>>>
            (CXXBoolLiteralExpr 0xac24fb8 '_Bool' true)
            (CompoundStmt 0xac24fc8
              (CompoundStmt 0xac241c0)
              (LabelStmt 0xac24f40 '____label____17'
                (CompoundStmt 0xac24fa0
                  (GotoStmt 0xac24f90 '____label____16':0xac24ed0))))
            <<<NULL>>>))
        (LabelStmt 0xac24f80 '____label____18'
          (NullStmt 0xac24f70))))
    (CaseStmt 0xac24210
      (IntegerLiteral 0xac241f8 'int' 0)
      <<<NULL>>>
      (LabelStmt 0xac242a0 'LBL_IN_CASE'
        (BinaryOperator 0xac24260 'int' lvalue '='
          (DeclRefExpr 0xac24230 'int' lvalue Var 0xac240d0 '____localvar____10' 'int')
          (IntegerLiteral 0xac24248 'int' 2))))
    (LabelStmt 0xac24330 'LBL_BEFORE_CASE'
      (CaseStmt 0xac242e0
        (IntegerLiteral 0xac242b0 'int' 2)
        (IntegerLiteral 0xac242c8 'int' 3)
        (BreakStmt 0xac24300)))
    (IfStmt 0xac24430
      <<<NULL>>>
      (BinaryOperator 0xac24380 '_Bool' '=='
        (ImplicitCastExpr 0xac24370 'int' <LValueToRValue>
          (DeclRefExpr 0xac24340 'int' lvalue Var 0xac240d0 '____localvar____10' 'int'))
        (IntegerLiteral 0xac24358 'int' 3))
      (CompoundStmt 0xac24418
        (LabelStmt 0xac25060 '____label____19'
          (CompoundStmt 0xac251c0
            (NullStmt 0xac251b0)
            (LabelStmt 0xac250a0 '____label____20'
              (IfStmt 0xac25190
                <<<NULL>>>
                (CXXBoolLiteralExpr 0xac25168 '_Bool' true)
                (CompoundStmt 0xac25178
                  (CompoundStmt 0xac243d8
                    (CaseStmt 0xac243b0
                      (IntegerLiteral 0xac24398 'int' 6)
                      <<<NULL>>>
                      (GotoStmt 0xac25130 '____label____22':0xac250f0)))
                  (LabelStmt 0xac250e0 '____label____21'
                    (CompoundStmt 0xac25150
                      (GotoStmt 0xac25140 '____label____20':0xac25070))))
                <<<NULL>>>))
            (LabelStmt 0xac25120 '____label____22'
              (NullStmt 0xac25110)))))
      <<<NULL>>>)
    (CaseStmt 0xac24468
      (IntegerLiteral 0xac24450 'int' 4)
      <<<NULL>>>
      (BinaryOperator 0xac244f8 'int' lvalue '='
        (DeclRefExpr 0xac24488 'int' lvalue Var 0xac23fa0 '____localvar____8' 'int')
        (BinaryOperator 0xac244e0 'int' '-'
          (ImplicitCastExpr 0xac244d0 'int' <LValueToRValue>
            (DeclRefExpr 0xac244a0 'int' lvalue Var 0xac23fa0 '____localvar____8' 'int'))
          (IntegerLiteral 0xac244b8 'int' 2))))
    (BinaryOperator 0xac24540 'int' lvalue '='
      (DeclRefExpr 0xac24510 'int' lvalue Var 0xac240d0 '____localvar____10' 'int')
      (IntegerLiteral 0xac24528 'int' 3))
    (BreakStmt 0xac24558)
    (CaseStmt 0xac24578
      (IntegerLiteral 0xac24560 'int' 5)
      <<<NULL>>>
      (NullStmt 0xac24598))
    (DefaultStmt 0xac245b8
      (GotoStmt 0xac245a8 'LBL_BEFORE_CASE':0xac24310))
    (LabelStmt 0xac24600 'LBL_BEFORE_BREAK'
      (BreakStmt 0xac245d0))))
switch (____localvar____10) {
  ____label____15:
    {
        ;
      ____label____16:
        if (true) {
            {
            }
          ____label____17:
            {
                goto ____label____16;
            }
        }
      ____label____18:
        ;
    }
  case 0:
  LBL_IN_CASE:
    ____localvar____10 = 2;
  LBL_BEFORE_CASE:
  case 2 ... 3:
    break;
    if (____localvar____10 == 3) {
      ____label____19:
        {
            ;
          ____label____20:
            if (true) {
                {
                  case 6:
                    goto ____label____22;
                }
              ____label____21:
                {
                    goto ____label____20;
                }
            }
          ____label____22:
            ;
        }
    }
  case 4:
    ____localvar____8 = ____localvar____8 - 2;
    ____localvar____10 = 3;
    break;
  case 5:
    ;
  default:
    goto LBL_BEFORE_CASE;
  LBL_BEFORE_BREAK:
    break;
}
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 246] switch to if trans
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 251] LABEL_SWITCH
[DEBUG][./alg/Algorithm.h - line 57] info 180362868: ____label____23 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 264] get switch sub ptr
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 269] create if 
[DEBUG][./alg/Algorithm.h - line 57] info 180362904: ____label____24 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 279] iterator case/default
[DEBUG][./alg/Algorithm.h - line 57] info 180362940: ____label____25 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 292] record case: (abfde68) ac245b8 ac24640 ac252b0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 321] default stmt reached ac245b8
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 323] default stmt end
[DEBUG][./alg/Algorithm.h - line 57] info 180362976: ____label____26 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 292] record case: (abb1540) ac24578 ac2463c ac252f0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 295] case stmt reached ac24578
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 307] set else if
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 319] case stmt end
[DEBUG][./alg/Algorithm.h - line 57] info 180363012: ____label____27 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 292] record case: (abeb140) ac24468 ac24630 ac25380
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 295] case stmt reached ac24468
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 307] set else if
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 319] case stmt end
[DEBUG][./alg/Algorithm.h - line 57] info 180363048: ____label____28 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 292] record case: (abeb170) ac243b0 ac243e8 ac25430
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 295] case stmt reached ac243b0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 307] set else if
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 319] case stmt end
[DEBUG][./alg/Algorithm.h - line 57] info 180363084: ____label____29 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 292] record case: (abfffd8) ac242e0 ac24338 ac254e0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 295] case stmt reached ac242e0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 307] set else if
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 319] case stmt end
[DEBUG][./alg/Algorithm.h - line 57] info 180363120: ____label____30 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 292] record case: (abd95c0) ac24210 ac24624 ac255f0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 295] case stmt reached ac24210
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 307] set else if
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 319] case stmt end
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 329] add last else goto
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 340] transform break
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 354] pop stmt BreakStmt (bfdde048) ac245d0 ac24608 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 358] break reached
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 361] break end
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 354] pop stmt LabelStmt (bfdde048) ac24600 ac24644 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 354] pop stmt GotoStmt (bfdde048) ac245a8 ac245c0 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 354] pop stmt DefaultStmt (bfdde048) ac245b8 ac24640 ac252b0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 363] SwitchCase reached ac245b8
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 369] switchCase ended
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 354] pop stmt NullStmt (bfdde048) ac24598 ac24588 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 354] pop stmt IntegerLiteral (bfdde048) ac24560 ac24580 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 354] pop stmt CaseStmt (bfdde048) ac24578 ac2463c ac252f0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 363] SwitchCase reached ac24578
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 369] switchCase ended
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 354] pop stmt BreakStmt (bfdde048) ac24558 ac24638 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 358] break reached
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 361] break end
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 354] pop stmt IntegerLiteral (bfdde048) ac24528 ac24554 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 354] pop stmt DeclRefExpr (bfdde048) ac24510 ac24550 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 354] pop stmt BinaryOperator (bfdde048) ac24540 ac24634 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 354] pop stmt IntegerLiteral (bfdde048) ac244b8 ac244f4 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 354] pop stmt DeclRefExpr (bfdde048) ac244a0 ac244d8 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 354] pop stmt ImplicitCastExpr (bfdde048) ac244d0 ac244f0 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 354] pop stmt BinaryOperator (bfdde048) ac244e0 ac2450c 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 354] pop stmt DeclRefExpr (bfdde048) ac24488 ac24508 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 354] pop stmt BinaryOperator (bfdde048) ac244f8 ac24478 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 354] pop stmt IntegerLiteral (bfdde048) ac24450 ac24470 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 354] pop stmt CaseStmt (bfdde048) ac24468 ac24630 ac25380
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 363] SwitchCase reached ac24468
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 369] switchCase ended
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 354] pop stmt CaseStmt (bfdde048) ac243b0 ac243e8 ac25430
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 363] SwitchCase reached ac243b0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 369] switchCase ended
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 354] pop stmt ForStmt (bfdde048) ac243f0 ac24428 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 354] pop stmt CompoundStmt (bfdde048) ac24418 ac2443c 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 354] pop stmt IntegerLiteral (bfdde048) ac24358 ac24394 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 354] pop stmt DeclRefExpr (bfdde048) ac24340 ac24378 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 354] pop stmt ImplicitCastExpr (bfdde048) ac24370 ac24390 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 354] pop stmt BinaryOperator (bfdde048) ac24380 ac24438 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 354] pop stmt IfStmt (bfdde048) ac24430 ac2462c 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 354] pop stmt BreakStmt (bfdde048) ac24300 ac242f0 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 358] break reached
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 361] break end
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 354] pop stmt IntegerLiteral (bfdde048) ac242c8 ac242ec 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 354] pop stmt IntegerLiteral (bfdde048) ac242b0 ac242e8 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 354] pop stmt CaseStmt (bfdde048) ac242e0 ac24338 ac254e0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 363] SwitchCase reached ac242e0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 369] switchCase ended
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 354] pop stmt LabelStmt (bfdde048) ac24330 ac24628 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 354] pop stmt IntegerLiteral (bfdde048) ac24248 ac24274 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 354] pop stmt DeclRefExpr (bfdde048) ac24230 ac24270 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 354] pop stmt BinaryOperator (bfdde048) ac24260 ac242a8 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 354] pop stmt LabelStmt (bfdde048) ac242a0 ac24220 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 354] pop stmt IntegerLiteral (bfdde048) ac241f8 ac24218 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 354] pop stmt CaseStmt (bfdde048) ac24210 ac24624 ac255f0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 363] SwitchCase reached ac24210
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 369] switchCase ended
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 354] pop stmt ForStmt (bfdde048) ac241d0 ac24620 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 354] pop stmt CompoundStmt (bfdde048) ac24610 ac2419c 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 354] pop stmt DeclRefExpr (bfdde048) ac24168 ac24188 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 354] pop stmt ImplicitCastExpr (bfdde048) ac24180 ac24198 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 354] pop stmt DeclRefExpr (bfdde048) ac24118 ac24148 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 354] pop stmt ImplicitCastExpr (bfdde048) ac24140 ac24164 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 354] pop stmt DeclRefExpr (bfdde048) ac24100 ac24138 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 354] pop stmt ImplicitCastExpr (bfdde048) ac24130 ac24160 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 354] pop stmt BinaryOperator (bfdde048) ac24150 ac240f8 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 354] pop stmt DeclStmt (bfdde048) ac241b0 ac24194 0
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 377] set new switch body
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 397] done
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 400] free memory
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt ReturnStmt ac24660 abffed8 abffed8
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 39] push stmt IntegerLiteral ac24648 ababa70 ababa70
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt IntegerLiteral, start transform
(IntegerLiteral 0xac24648 'int' 0)
0[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt ReturnStmt, start transform
(ReturnStmt 0xac24660
  (IntegerLiteral 0xac24648 'int' 0))
return 0;
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 47] leaving Stmt CompoundStmt, start transform
(CompoundStmt 0xac24670
  (CallExpr 0xac23f08 'void'
    (ImplicitCastExpr 0xac23ef8 'void (*)(void)' <FunctionToPointerDecay>
      (DeclRefExpr 0xac23ec4 'void (void)' lvalue Function 0xac23050 'assign_cond' 'void (void)')))
  (DeclStmt 0xac24038
    0xac23f40 "int ____localvar____7 =
      (IntegerLiteral 0xac23f70 'int' 1)"
    0xac23fa0 "int ____localvar____8 =
      (BinaryOperator 0xac24010 'int' '*'
        (ImplicitCastExpr 0xac24000 'int' <LValueToRValue>
          (DeclRefExpr 0xac23fd0 'int' lvalue Var 0xac23f40 '____localvar____7' 'int'))
        (IntegerLiteral 0xac23fe8 'int' 2))")
  (DeclStmt 0xac240a8
    0xac24060 "int ____localvar____9 =
      (IntegerLiteral 0xac24090 'int' 0)")
  (LabelStmt 0xac25210 '____label____23'
    (CompoundStmt 0xac256b0
      (DeclStmt 0xac241b0
        0xac240d0 "int ____localvar____10 =
          (BinaryOperator 0xac24150 'int' '*'
            (ImplicitCastExpr 0xac24130 'int' <LValueToRValue>
              (DeclRefExpr 0xac24100 'int' lvalue Var 0xac23f40 '____localvar____7' 'int'))
            (ImplicitCastExpr 0xac24140 'int' <LValueToRValue>
              (DeclRefExpr 0xac24118 'int' lvalue Var 0xac23fa0 '____localvar____8' 'int')))")
      (IfStmt 0xac25220
        <<<NULL>>>
        (BinaryOperator 0xac25328 '_Bool' '=='
          (ImplicitCastExpr 0xac25318 'int' <LValueToRValue>
            (DeclRefExpr 0xac25300 'int' lvalue Var 0xac240d0 '____localvar____10' 'int'))
          (IntegerLiteral 0xac24560 'int' 5))
        (GotoStmt 0xac25340 '____label____26':0xac252c0)
        (IfStmt 0xac253e0
          <<<NULL>>>
          (BinaryOperator 0xac253b8 '_Bool' '=='
            (ImplicitCastExpr 0xac253a8 'int' <LValueToRValue>
              (DeclRefExpr 0xac25390 'int' lvalue Var 0xac240d0 '____localvar____10' 'int'))
            (IntegerLiteral 0xac24450 'int' 4))
          (GotoStmt 0xac253d0 '____label____27':0xac25350)
          (IfStmt 0xac25490
            <<<NULL>>>
            (BinaryOperator 0xac25468 '_Bool' '=='
              (ImplicitCastExpr 0xac25458 'int' <LValueToRValue>
                (DeclRefExpr 0xac25440 'int' lvalue Var 0xac240d0 '____localvar____10' 'int'))
              (IntegerLiteral 0xac24398 'int' 6))
            (GotoStmt 0xac25480 '____label____28':0xac25400)
            (IfStmt 0xac255a0
              <<<NULL>>>
              (BinaryOperator 0xac25578 'int' '+'
                (ImplicitCastExpr 0xac25558 'int' <IntegralCast>
                  (BinaryOperator 0xac25518 '_Bool' '<='
                    (IntegerLiteral 0xac242b0 'int' 2)
                    (ImplicitCastExpr 0xac25508 'int' <LValueToRValue>
                      (DeclRefExpr 0xac254f0 'int' lvalue Var 0xac240d0 '____localvar____10' 'int'))))
                (ImplicitCastExpr 0xac25568 'int' <IntegralCast>
                  (BinaryOperator 0xac25540 '_Bool' '<='
                    (ImplicitCastExpr 0xac25530 'int' <LValueToRValue>
                      (DeclRefExpr 0xac254f0 'int' lvalue Var 0xac240d0 '____localvar____10' 'int'))
                    (IntegerLiteral 0xac242c8 'int' 3))))
              (GotoStmt 0xac25590 '____label____29':0xac254b0)
              (IfStmt 0xac25650
                <<<NULL>>>
                (BinaryOperator 0xac25628 '_Bool' '=='
                  (ImplicitCastExpr 0xac25618 'int' <LValueToRValue>
                    (DeclRefExpr 0xac25600 'int' lvalue Var 0xac240d0 '____localvar____10' 'int'))
                  (IntegerLiteral 0xac241f8 'int' 0))
                (GotoStmt 0xac25640 '____label____30':0xac255c0)
                (GotoStmt 0xac25670 '____label____25':0xac25280))))))
      (CompoundStmt 0xac24610
        (LabelStmt 0xac24ec0 '____label____15'
          (CompoundStmt 0xac25010
            (NullStmt 0xac25000)
            (LabelStmt 0xac24f00 '____label____16'
              (IfStmt 0xac24fe0
                <<<NULL>>>
                (CXXBoolLiteralExpr 0xac24fb8 '_Bool' true)
                (CompoundStmt 0xac24fc8
                  (CompoundStmt 0xac241c0)
                  (LabelStmt 0xac24f40 '____label____17'
                    (CompoundStmt 0xac24fa0
                      (GotoStmt 0xac24f90 '____label____16':0xac24ed0))))
                <<<NULL>>>))
            (LabelStmt 0xac24f80 '____label____18'
              (NullStmt 0xac24f70))))
        (LabelStmt 0xac255f0 '____label____30'
          (LabelStmt 0xac242a0 'LBL_IN_CASE'
            (BinaryOperator 0xac24260 'int' lvalue '='
              (DeclRefExpr 0xac24230 'int' lvalue Var 0xac240d0 '____localvar____10' 'int')
              (IntegerLiteral 0xac24248 'int' 2))))
        (LabelStmt 0xac24330 'LBL_BEFORE_CASE'
          (LabelStmt 0xac254e0 '____label____29'
            (GotoStmt 0xac256a0 '____label____24':0xac25240)))
        (IfStmt 0xac24430
          <<<NULL>>>
          (BinaryOperator 0xac24380 '_Bool' '=='
            (ImplicitCastExpr 0xac24370 'int' <LValueToRValue>
              (DeclRefExpr 0xac24340 'int' lvalue Var 0xac240d0 '____localvar____10' 'int'))
            (IntegerLiteral 0xac24358 'int' 3))
          (CompoundStmt 0xac24418
            (LabelStmt 0xac25060 '____label____19'
              (CompoundStmt 0xac251c0
                (NullStmt 0xac251b0)
                (LabelStmt 0xac250a0 '____label____20'
                  (IfStmt 0xac25190
                    <<<NULL>>>
                    (CXXBoolLiteralExpr 0xac25168 '_Bool' true)
                    (CompoundStmt 0xac25178
                      (CompoundStmt 0xac243d8
                        (LabelStmt 0xac25430 '____label____28'
                          (GotoStmt 0xac25130 '____label____22':0xac250f0)))
                      (LabelStmt 0xac250e0 '____label____21'
                        (CompoundStmt 0xac25150
                          (GotoStmt 0xac25140 '____label____20':0xac25070))))
                    <<<NULL>>>))
                (LabelStmt 0xac25120 '____label____22'
                  (NullStmt 0xac25110)))))
          <<<NULL>>>)
        (LabelStmt 0xac25380 '____label____27'
          (BinaryOperator 0xac244f8 'int' lvalue '='
            (DeclRefExpr 0xac24488 'int' lvalue Var 0xac23fa0 '____localvar____8' 'int')
            (BinaryOperator 0xac244e0 'int' '-'
              (ImplicitCastExpr 0xac244d0 'int' <LValueToRValue>
                (DeclRefExpr 0xac244a0 'int' lvalue Var 0xac23fa0 '____localvar____8' 'int'))
              (IntegerLiteral 0xac244b8 'int' 2))))
        (BinaryOperator 0xac24540 'int' lvalue '='
          (DeclRefExpr 0xac24510 'int' lvalue Var 0xac240d0 '____localvar____10' 'int')
          (IntegerLiteral 0xac24528 'int' 3))
        (GotoStmt 0xac25690 '____label____24':0xac25240)
        (LabelStmt 0xac252f0 '____label____26'
          (NullStmt 0xac24598))
        (LabelStmt 0xac252b0 '____label____25'
          (GotoStmt 0xac245a8 'LBL_BEFORE_CASE':0xac24310))
        (LabelStmt 0xac24600 'LBL_BEFORE_BREAK'
          (GotoStmt 0xac25680 '____label____24':0xac25240)))
      (LabelStmt 0xac25270 '____label____24'
        (NullStmt 0xac25260))))
  (ReturnStmt 0xac24660
    (IntegerLiteral 0xac24648 'int' 0)))
{
    assign_cond();
    int ____localvar____7 = 1, ____localvar____8 = ____localvar____7 * 2;
    int ____localvar____9 = 0;
  ____label____23:
    {
        int ____localvar____10 = ____localvar____7 * ____localvar____8;
        if (____localvar____10 == 5)
            goto ____label____26;
        else if (____localvar____10 == 4)
            goto ____label____27;
        else if (____localvar____10 == 6)
            goto ____label____28;
        else if (2 <= ____localvar____10 + ____localvar____10 <= 3)
            goto ____label____29;
        else if (____localvar____10 == 0)
            goto ____label____30;
        else
            goto ____label____25;
        {
          ____label____15:
            {
                ;
              ____label____16:
                if (true) {
                    {
                    }
                  ____label____17:
                    {
                        goto ____label____16;
                    }
                }
              ____label____18:
                ;
            }
          ____label____30:
          LBL_IN_CASE:
            ____localvar____10 = 2;
          LBL_BEFORE_CASE:
          ____label____29:
            goto ____label____24;
            if (____localvar____10 == 3) {
              ____label____19:
                {
                    ;
                  ____label____20:
                    if (true) {
                        {
                          ____label____28:
                            goto ____label____22;
                        }
                      ____label____21:
                        {
                            goto ____label____20;
                        }
                    }
                  ____label____22:
                    ;
                }
            }
          ____label____27:
            ____localvar____8 = ____localvar____8 - 2;
            ____localvar____10 = 3;
            goto ____label____24;
          ____label____26:
            ;
          ____label____25:
            goto LBL_BEFORE_CASE;
          LBL_BEFORE_BREAK:
            goto ____label____24;
        }
      ____label____24:
        ;
    }
    return 0;
}
[DEBUG][alg/SimplePrinter.cpp - line 7] alg started.
void simple() {
    int ____localvar____0 = 1;
  ____label____0:
    {
        int ____localvar____1 = ____localvar____0;
        if (____localvar____1 == 2)
            goto ____label____3;
        else if (____localvar____1 == 1)
            goto ____label____4;
        else
            goto ____label____2;
        {
          ____label____4:
            goto ____label____1;
          ____label____3:
            {
                goto ____label____1;
            }
          ____label____2:
            goto ____label____1;
        }
      ____label____1:
        ;
    }
}

;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt CompoundStmt ( 180498456 -> p 0 )
(CompoundStmt 0xac23018
  (DeclStmt 0xac22e68
    0xac22e20 "int ____localvar____0 =
      (IntegerLiteral 0xac22e50 'int' 1)")
  (LabelStmt 0xac246d0 '____label____0'
    (CompoundStmt 0xac24900
      (DeclStmt 0xac22f30
        0xac22e90 "int ____localvar____1 =
          (ImplicitCastExpr 0xac22ed8 'int' <LValueToRValue>
            (DeclRefExpr 0xac22ec0 'int' lvalue Var 0xac22e20 '____localvar____0' 'int'))")
      (IfStmt 0xac246e0
        <<<NULL>>>
        (BinaryOperator 0xac247e8 '_Bool' '=='
          (ImplicitCastExpr 0xac247d8 'int' <LValueToRValue>
            (DeclRefExpr 0xac247c0 'int' lvalue Var 0xac22e90 '____localvar____1' 'int'))
          (IntegerLiteral 0xac22f80 'int' 2))
        (GotoStmt 0xac24800 '____label____3':0xac24780)
        (IfStmt 0xac248a0
          <<<NULL>>>
          (BinaryOperator 0xac24878 '_Bool' '=='
            (ImplicitCastExpr 0xac24868 'int' <LValueToRValue>
              (DeclRefExpr 0xac24850 'int' lvalue Var 0xac22e90 '____localvar____1' 'int'))
            (IntegerLiteral 0xac22f40 'int' 1))
          (GotoStmt 0xac24890 '____label____4':0xac24810)
          (GotoStmt 0xac248c0 '____label____2':0xac24740)))
      (CompoundStmt 0xac22ff8
        (LabelStmt 0xac24840 '____label____4'
          (GotoStmt 0xac248f0 '____label____1':0xac24700))
        (LabelStmt 0xac247b0 '____label____3'
          (CompoundStmt 0xac22fc0
            (GotoStmt 0xac248e0 '____label____1':0xac24700)))
        (LabelStmt 0xac24770 '____label____2'
          (GotoStmt 0xac248d0 '____label____1':0xac24700)))
      (LabelStmt 0xac24730 '____label____1'
        (NullStmt 0xac24720)))))
{
    int ____localvar____0 = 1;
  ____label____0:
    {
        int ____localvar____1 = ____localvar____0;
        if (____localvar____1 == 2)
            goto ____label____3;
        else if (____localvar____1 == 1)
            goto ____label____4;
        else
            goto ____label____2;
        {
          ____label____4:
            goto ____label____1;
          ____label____3:
            {
                goto ____label____1;
            }
          ____label____2:
            goto ____label____1;
        }
      ____label____1:
        ;
    }
}
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt DeclStmt ( 180498024 -> p 180498456 )
(DeclStmt 0xac22e68
  0xac22e20 "int ____localvar____0 =
    (IntegerLiteral 0xac22e50 'int' 1)")
int ____localvar____0 = 1;
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt IntegerLiteral ( 180498000 -> p 180498024 )
(IntegerLiteral 0xac22e50 'int' 1)
1;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt LabelStmt ( 180504272 -> p 180498456 )
(LabelStmt 0xac246d0 '____label____0'
  (CompoundStmt 0xac24900
    (DeclStmt 0xac22f30
      0xac22e90 "int ____localvar____1 =
        (ImplicitCastExpr 0xac22ed8 'int' <LValueToRValue>
          (DeclRefExpr 0xac22ec0 'int' lvalue Var 0xac22e20 '____localvar____0' 'int'))")
    (IfStmt 0xac246e0
      <<<NULL>>>
      (BinaryOperator 0xac247e8 '_Bool' '=='
        (ImplicitCastExpr 0xac247d8 'int' <LValueToRValue>
          (DeclRefExpr 0xac247c0 'int' lvalue Var 0xac22e90 '____localvar____1' 'int'))
        (IntegerLiteral 0xac22f80 'int' 2))
      (GotoStmt 0xac24800 '____label____3':0xac24780)
      (IfStmt 0xac248a0
        <<<NULL>>>
        (BinaryOperator 0xac24878 '_Bool' '=='
          (ImplicitCastExpr 0xac24868 'int' <LValueToRValue>
            (DeclRefExpr 0xac24850 'int' lvalue Var 0xac22e90 '____localvar____1' 'int'))
          (IntegerLiteral 0xac22f40 'int' 1))
        (GotoStmt 0xac24890 '____label____4':0xac24810)
        (GotoStmt 0xac248c0 '____label____2':0xac24740)))
    (CompoundStmt 0xac22ff8
      (LabelStmt 0xac24840 '____label____4'
        (GotoStmt 0xac248f0 '____label____1':0xac24700))
      (LabelStmt 0xac247b0 '____label____3'
        (CompoundStmt 0xac22fc0
          (GotoStmt 0xac248e0 '____label____1':0xac24700)))
      (LabelStmt 0xac24770 '____label____2'
        (GotoStmt 0xac248d0 '____label____1':0xac24700)))
    (LabelStmt 0xac24730 '____label____1'
      (NullStmt 0xac24720))))
____label____0:
{
    int ____localvar____1 = ____localvar____0;
    if (____localvar____1 == 2)
        goto ____label____3;
    else if (____localvar____1 == 1)
        goto ____label____4;
    else
        goto ____label____2;
    {
      ____label____4:
        goto ____label____1;
      ____label____3:
        {
            goto ____label____1;
        }
      ____label____2:
        goto ____label____1;
    }
  ____label____1:
    ;
}
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt CompoundStmt ( 180504832 -> p 180504272 )
(CompoundStmt 0xac24900
  (DeclStmt 0xac22f30
    0xac22e90 "int ____localvar____1 =
      (ImplicitCastExpr 0xac22ed8 'int' <LValueToRValue>
        (DeclRefExpr 0xac22ec0 'int' lvalue Var 0xac22e20 '____localvar____0' 'int'))")
  (IfStmt 0xac246e0
    <<<NULL>>>
    (BinaryOperator 0xac247e8 '_Bool' '=='
      (ImplicitCastExpr 0xac247d8 'int' <LValueToRValue>
        (DeclRefExpr 0xac247c0 'int' lvalue Var 0xac22e90 '____localvar____1' 'int'))
      (IntegerLiteral 0xac22f80 'int' 2))
    (GotoStmt 0xac24800 '____label____3':0xac24780)
    (IfStmt 0xac248a0
      <<<NULL>>>
      (BinaryOperator 0xac24878 '_Bool' '=='
        (ImplicitCastExpr 0xac24868 'int' <LValueToRValue>
          (DeclRefExpr 0xac24850 'int' lvalue Var 0xac22e90 '____localvar____1' 'int'))
        (IntegerLiteral 0xac22f40 'int' 1))
      (GotoStmt 0xac24890 '____label____4':0xac24810)
      (GotoStmt 0xac248c0 '____label____2':0xac24740)))
  (CompoundStmt 0xac22ff8
    (LabelStmt 0xac24840 '____label____4'
      (GotoStmt 0xac248f0 '____label____1':0xac24700))
    (LabelStmt 0xac247b0 '____label____3'
      (CompoundStmt 0xac22fc0
        (GotoStmt 0xac248e0 '____label____1':0xac24700)))
    (LabelStmt 0xac24770 '____label____2'
      (GotoStmt 0xac248d0 '____label____1':0xac24700)))
  (LabelStmt 0xac24730 '____label____1'
    (NullStmt 0xac24720)))
{
    int ____localvar____1 = ____localvar____0;
    if (____localvar____1 == 2)
        goto ____label____3;
    else if (____localvar____1 == 1)
        goto ____label____4;
    else
        goto ____label____2;
    {
      ____label____4:
        goto ____label____1;
      ____label____3:
        {
            goto ____label____1;
        }
      ____label____2:
        goto ____label____1;
    }
  ____label____1:
    ;
}
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt DeclStmt ( 180498224 -> p 180504832 )
(DeclStmt 0xac22f30
  0xac22e90 "int ____localvar____1 =
    (ImplicitCastExpr 0xac22ed8 'int' <LValueToRValue>
      (DeclRefExpr 0xac22ec0 'int' lvalue Var 0xac22e20 '____localvar____0' 'int'))")
int ____localvar____1 = ____localvar____0;
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt ImplicitCastExpr ( 180498136 -> p 180498224 )
(ImplicitCastExpr 0xac22ed8 'int' <LValueToRValue>
  (DeclRefExpr 0xac22ec0 'int' lvalue Var 0xac22e20 '____localvar____0' 'int'))
____localvar____0;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt DeclRefExpr ( 180498112 -> p 180498136 )
(DeclRefExpr 0xac22ec0 'int' lvalue Var 0xac22e20 '____localvar____0' 'int')
____localvar____0;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt IfStmt ( 180504288 -> p 180504832 )
(IfStmt 0xac246e0
  <<<NULL>>>
  (BinaryOperator 0xac247e8 '_Bool' '=='
    (ImplicitCastExpr 0xac247d8 'int' <LValueToRValue>
      (DeclRefExpr 0xac247c0 'int' lvalue Var 0xac22e90 '____localvar____1' 'int'))
    (IntegerLiteral 0xac22f80 'int' 2))
  (GotoStmt 0xac24800 '____label____3':0xac24780)
  (IfStmt 0xac248a0
    <<<NULL>>>
    (BinaryOperator 0xac24878 '_Bool' '=='
      (ImplicitCastExpr 0xac24868 'int' <LValueToRValue>
        (DeclRefExpr 0xac24850 'int' lvalue Var 0xac22e90 '____localvar____1' 'int'))
      (IntegerLiteral 0xac22f40 'int' 1))
    (GotoStmt 0xac24890 '____label____4':0xac24810)
    (GotoStmt 0xac248c0 '____label____2':0xac24740)))
if (____localvar____1 == 2)
    goto ____label____3;
else if (____localvar____1 == 1)
    goto ____label____4;
else
    goto ____label____2;
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt BinaryOperator ( 180504552 -> p 180504288 )
(BinaryOperator 0xac247e8 '_Bool' '=='
  (ImplicitCastExpr 0xac247d8 'int' <LValueToRValue>
    (DeclRefExpr 0xac247c0 'int' lvalue Var 0xac22e90 '____localvar____1' 'int'))
  (IntegerLiteral 0xac22f80 'int' 2))
____localvar____1 == 2;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt ImplicitCastExpr ( 180504536 -> p 180504552 )
(ImplicitCastExpr 0xac247d8 'int' <LValueToRValue>
  (DeclRefExpr 0xac247c0 'int' lvalue Var 0xac22e90 '____localvar____1' 'int'))
____localvar____1;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt DeclRefExpr ( 180504512 -> p 180504536 )
(DeclRefExpr 0xac247c0 'int' lvalue Var 0xac22e90 '____localvar____1' 'int')
____localvar____1;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt IntegerLiteral ( 180498304 -> p 180504552 )
(IntegerLiteral 0xac22f80 'int' 2)
2;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt GotoStmt ( 180504576 -> p 180504288 )
(GotoStmt 0xac24800 '____label____3':0xac24780)
goto ____label____3;
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt IfStmt ( 180504736 -> p 180504288 )
(IfStmt 0xac248a0
  <<<NULL>>>
  (BinaryOperator 0xac24878 '_Bool' '=='
    (ImplicitCastExpr 0xac24868 'int' <LValueToRValue>
      (DeclRefExpr 0xac24850 'int' lvalue Var 0xac22e90 '____localvar____1' 'int'))
    (IntegerLiteral 0xac22f40 'int' 1))
  (GotoStmt 0xac24890 '____label____4':0xac24810)
  (GotoStmt 0xac248c0 '____label____2':0xac24740))
if (____localvar____1 == 1)
    goto ____label____4;
else
    goto ____label____2;
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt BinaryOperator ( 180504696 -> p 180504736 )
(BinaryOperator 0xac24878 '_Bool' '=='
  (ImplicitCastExpr 0xac24868 'int' <LValueToRValue>
    (DeclRefExpr 0xac24850 'int' lvalue Var 0xac22e90 '____localvar____1' 'int'))
  (IntegerLiteral 0xac22f40 'int' 1))
____localvar____1 == 1;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt ImplicitCastExpr ( 180504680 -> p 180504696 )
(ImplicitCastExpr 0xac24868 'int' <LValueToRValue>
  (DeclRefExpr 0xac24850 'int' lvalue Var 0xac22e90 '____localvar____1' 'int'))
____localvar____1;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt DeclRefExpr ( 180504656 -> p 180504680 )
(DeclRefExpr 0xac24850 'int' lvalue Var 0xac22e90 '____localvar____1' 'int')
____localvar____1;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt IntegerLiteral ( 180498240 -> p 180504696 )
(IntegerLiteral 0xac22f40 'int' 1)
1;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt GotoStmt ( 180504720 -> p 180504736 )
(GotoStmt 0xac24890 '____label____4':0xac24810)
goto ____label____4;
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt GotoStmt ( 180504768 -> p 180504736 )
(GotoStmt 0xac248c0 '____label____2':0xac24740)
goto ____label____2;
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt CompoundStmt ( 180498424 -> p 180504832 )
(CompoundStmt 0xac22ff8
  (LabelStmt 0xac24840 '____label____4'
    (GotoStmt 0xac248f0 '____label____1':0xac24700))
  (LabelStmt 0xac247b0 '____label____3'
    (CompoundStmt 0xac22fc0
      (GotoStmt 0xac248e0 '____label____1':0xac24700)))
  (LabelStmt 0xac24770 '____label____2'
    (GotoStmt 0xac248d0 '____label____1':0xac24700)))
{
  ____label____4:
    goto ____label____1;
  ____label____3:
    {
        goto ____label____1;
    }
  ____label____2:
    goto ____label____1;
}
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt LabelStmt ( 180504640 -> p 180498424 )
(LabelStmt 0xac24840 '____label____4'
  (GotoStmt 0xac248f0 '____label____1':0xac24700))
____label____4:
goto ____label____1;
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt GotoStmt ( 180504816 -> p 180504640 )
(GotoStmt 0xac248f0 '____label____1':0xac24700)
goto ____label____1;
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt LabelStmt ( 180504496 -> p 180498424 )
(LabelStmt 0xac247b0 '____label____3'
  (CompoundStmt 0xac22fc0
    (GotoStmt 0xac248e0 '____label____1':0xac24700)))
____label____3:
{
    goto ____label____1;
}
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt CompoundStmt ( 180498368 -> p 180504496 )
(CompoundStmt 0xac22fc0
  (GotoStmt 0xac248e0 '____label____1':0xac24700))
{
    goto ____label____1;
}
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt GotoStmt ( 180504800 -> p 180498368 )
(GotoStmt 0xac248e0 '____label____1':0xac24700)
goto ____label____1;
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt LabelStmt ( 180504432 -> p 180498424 )
(LabelStmt 0xac24770 '____label____2'
  (GotoStmt 0xac248d0 '____label____1':0xac24700))
____label____2:
goto ____label____1;
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt GotoStmt ( 180504784 -> p 180504432 )
(GotoStmt 0xac248d0 '____label____1':0xac24700)
goto ____label____1;
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt LabelStmt ( 180504368 -> p 180504832 )
(LabelStmt 0xac24730 '____label____1'
  (NullStmt 0xac24720))
____label____1:
;
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt NullStmt ( 180504352 -> p 180504368 )
(NullStmt 0xac24720)
;
;
[0;1;33m
 [B11 (ENTRY)]
[0m[0;35m   Succs [0m(1):[0;35m B10[0m
[0;1;33m
 [B1]
[0m  ____label____1:
[0;34m   Preds [0m(3):[0;34m B2 B3 B4[0m
[0;35m   Succs [0m(1):[0;35m B0[0m
[0;1;33m
 [B2]
[0m  ____label____2:
[0;32m   T: goto ____label____1;

[0m[0;34m   Preds [0m(1):[0;34m B5[0m
[0;35m   Succs [0m(1):[0;35m B1[0m
[0;1;33m
 [B3]
[0m  ____label____3:
[0;32m   T: goto ____label____1;

[0m[0;34m   Preds [0m(1):[0;34m B8[0m
[0;35m   Succs [0m(1):[0;35m B1[0m
[0;1;33m
 [B4]
[0m  ____label____4:
[0;32m   T: goto ____label____1;

[0m[0;34m   Preds [0m(1):[0;34m B6[0m
[0;35m   Succs [0m(1):[0;35m B1[0m
[0;1;33m
 [B5]
[0m[0;32m   T: goto ____label____2;

[0m[0;34m   Preds [0m(1):[0;34m B7[0m
[0;35m   Succs [0m(1):[0;35m B2[0m
[0;1;33m
 [B6]
[0m[0;32m   T: goto ____label____4;

[0m[0;34m   Preds [0m(1):[0;34m B7[0m
[0;35m   Succs [0m(1):[0;35m B4[0m
[0;1;33m
 [B7]
[0m   1: ____localvar____1 == 1
[0;32m   T: if [B7.1]
[0m[0;34m   Preds [0m(1):[0;34m B9[0m
[0;35m   Succs [0m(2):[0;35m B6 B5[0m
[0;1;33m
 [B8]
[0m[0;32m   T: goto ____label____3;

[0m[0;34m   Preds [0m(1):[0;34m B9[0m
[0;35m   Succs [0m(1):[0;35m B3[0m
[0;1;33m
 [B9]
[0m  ____label____0:
   1: int ____localvar____1 = ____localvar____0;
   2: ____localvar____1 == 2
[0;32m   T: if [B9.2]
[0m[0;34m   Preds [0m(1):[0;34m B10[0m
[0;35m   Succs [0m(2):[0;35m B8 B7[0m
[0;1;33m
 [B10]
[0m   1: int ____localvar____0 = 1;
[0;34m   Preds [0m(1):[0;34m B11[0m
[0;35m   Succs [0m(1):[0;35m B9[0m
[0;1;33m
 [B0 (EXIT)]
[0m[0;34m   Preds [0m(1):[0;34m B1[0m

Writing '/tmp/llvm_R9wFmw/CFG.dot'...  done. 
void assign_cond() {
    int ____localvar____2 = 1, ____localvar____3 = 2;
  ____label____5:
    {
        int ____localvar____4 = ____localvar____2 = ____localvar____3;
        if (____localvar____4 == 1)
            goto ____label____7;
        else
            goto ____label____6;
        {
            printf("%d\n", ____localvar____2);
          ____label____7:
            ;
        }
      ____label____6:
        ;
    }
  ____label____11:
    {
        int ____localvar____6 = ____localvar____2;
        if (____localvar____6 == 1)
            goto ____label____13;
        else
            goto ____label____14;
        {
          ____label____14:
            ____localvar____2 = 1;
          ____label____13:
            ____localvar____3 = 2;
          ____label____8:
            {
                int ____localvar____5 = ____localvar____3;
                if (____localvar____5 == 2)
                    goto ____label____10;
                else
                    goto ____label____9;
                {
                  ____label____10:
                    goto ____label____9;
                }
              ____label____9:
                ;
            }
            ____localvar____3++;
        }
      ____label____12:
        ;
    }
}

;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt CompoundStmt ( 180502008 -> p 0 )
(CompoundStmt 0xac23df8
  (DeclStmt 0xac23178
    0xac230c0 "int ____localvar____2 =
      (IntegerLiteral 0xac230f0 'int' 1)"
    0xac23120 "int ____localvar____3 =
      (IntegerLiteral 0xac23150 'int' 2)")
  (LabelStmt 0xac24950 '____label____5'
    (CompoundStmt 0xac24ac0
      (DeclStmt 0xac249a0
        0xac24960 "auto int ____localvar____4 =
          (ImplicitCastExpr 0xac231e0 'int' <LValueToRValue>
            (BinaryOperator 0xac231c8 'int' lvalue '='
              (DeclRefExpr 0xac23188 'int' lvalue Var 0xac230c0 '____localvar____2' 'int')
              (ImplicitCastExpr 0xac231b8 'int' <LValueToRValue>
                (DeclRefExpr 0xac231a0 'int' lvalue Var 0xac23120 '____localvar____3' 'int'))))")
      (IfStmt 0xac249b0
        <<<NULL>>>
        (BinaryOperator 0xac24a88 '_Bool' '=='
          (ImplicitCastExpr 0xac24a78 'int' <LValueToRValue>
            (DeclRefExpr 0xac24a60 'int' lvalue Var 0xac24960 '____localvar____4' 'int'))
          (IntegerLiteral 0xac23b80 'int' 1))
        (GotoStmt 0xac24aa0 '____label____7':0xac24a10)
        (GotoStmt 0xac24ab0 '____label____6':0xac249d0))
      (CompoundStmt 0xac23bc8
        (CallExpr 0xac23b38 'int'
          (ImplicitCastExpr 0xac23b28 'int (*)(const char *restrict, ...)' <FunctionToPointerDecay>
            (DeclRefExpr 0xac23acc 'int (const char *restrict, ...)' lvalue Function 0xac1b2e0 'printf' 'int (const char *restrict, ...)'))
          (ImplicitCastExpr 0xac23b60 'const char *' <ArrayToPointerDecay>
            (StringLiteral 0xac23a90 'const char [4]' lvalue "%d\n"))
          (ImplicitCastExpr 0xac23b70 'int' <LValueToRValue>
            (DeclRefExpr 0xac23ab4 'int' lvalue Var 0xac230c0 '____localvar____2' 'int')))
        (LabelStmt 0xac24a50 '____label____7'
          (NullStmt 0xac23bb8)))
      (LabelStmt 0xac24a00 '____label____6'
        (NullStmt 0xac249f0))))
  (LabelStmt 0xac24cd0 '____label____11'
    (CompoundStmt 0xac24e70
      (DeclStmt 0xac24d20
        0xac24ce0 "auto int ____localvar____6 =
          (ImplicitCastExpr 0xac23bf8 'int' <LValueToRValue>
            (DeclRefExpr 0xac23be0 'int' lvalue Var 0xac230c0 '____localvar____2' 'int'))")
      (IfStmt 0xac24d30
        <<<NULL>>>
        (BinaryOperator 0xac24df8 '_Bool' '=='
          (ImplicitCastExpr 0xac24de8 'int' <LValueToRValue>
            (DeclRefExpr 0xac24dd0 'int' lvalue Var 0xac24ce0 '____localvar____6' 'int'))
          (IntegerLiteral 0xac23c88 'int' 1))
        (GotoStmt 0xac24e10 '____label____13':0xac24d90)
        (GotoStmt 0xac24e60 '____label____14':0xac24e20))
      (CompoundStmt 0xac23dd8
        (LabelStmt 0xac24e50 '____label____14'
          (BinaryOperator 0xac23c58 'int' lvalue '='
            (DeclRefExpr 0xac23c24 'int' lvalue Var 0xac230c0 '____localvar____2' 'int')
            (IntegerLiteral 0xac23c40 'int' 1)))
        (LabelStmt 0xac24dc0 '____label____13'
          (BinaryOperator 0xac23cf0 'int' lvalue '='
            (DeclRefExpr 0xac23cc0 'int' lvalue Var 0xac23120 '____localvar____3' 'int')
            (IntegerLiteral 0xac23cd8 'int' 2)))
        (LabelStmt 0xac24b10 '____label____8'
          (CompoundStmt 0xac24c80
            (DeclStmt 0xac24b60
              0xac24b20 "auto int ____localvar____5 =
                (ImplicitCastExpr 0xac23d20 'int' <LValueToRValue>
                  (DeclRefExpr 0xac23d08 'int' lvalue Var 0xac23120 '____localvar____3' 'int'))")
            (IfStmt 0xac24b70
              <<<NULL>>>
              (BinaryOperator 0xac24c38 '_Bool' '=='
                (ImplicitCastExpr 0xac24c28 'int' <LValueToRValue>
                  (DeclRefExpr 0xac24c10 'int' lvalue Var 0xac24b20 '____localvar____5' 'int'))
                (IntegerLiteral 0xac23d50 'int' 2))
              (GotoStmt 0xac24c50 '____label____10':0xac24bd0)
              (GotoStmt 0xac24c60 '____label____9':0xac24b90))
            (CompoundStmt 0xac23d90
              (LabelStmt 0xac24c00 '____label____10'
                (GotoStmt 0xac24c70 '____label____9':0xac24b90)))
            (LabelStmt 0xac24bc0 '____label____9'
              (NullStmt 0xac24bb0))))
        (UnaryOperator 0xac23dc0 'int' postfix '++'
          (DeclRefExpr 0xac23da4 'int' lvalue Var 0xac23120 '____localvar____3' 'int')))
      (LabelStmt 0xac24d80 '____label____12'
        (NullStmt 0xac24d70)))))
{
    int ____localvar____2 = 1, ____localvar____3 = 2;
  ____label____5:
    {
        int ____localvar____4 = ____localvar____2 = ____localvar____3;
        if (____localvar____4 == 1)
            goto ____label____7;
        else
            goto ____label____6;
        {
            printf("%d\n", ____localvar____2);
          ____label____7:
            ;
        }
      ____label____6:
        ;
    }
  ____label____11:
    {
        int ____localvar____6 = ____localvar____2;
        if (____localvar____6 == 1)
            goto ____label____13;
        else
            goto ____label____14;
        {
          ____label____14:
            ____localvar____2 = 1;
          ____label____13:
            ____localvar____3 = 2;
          ____label____8:
            {
                int ____localvar____5 = ____localvar____3;
                if (____localvar____5 == 2)
                    goto ____label____10;
                else
                    goto ____label____9;
                {
                  ____label____10:
                    goto ____label____9;
                }
              ____label____9:
                ;
            }
            ____localvar____3++;
        }
      ____label____12:
        ;
    }
}
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt DeclStmt ( 180498808 -> p 180502008 )
(DeclStmt 0xac23178
  0xac230c0 "int ____localvar____2 =
    (IntegerLiteral 0xac230f0 'int' 1)"
  0xac23120 "int ____localvar____3 =
    (IntegerLiteral 0xac23150 'int' 2)")
int ____localvar____2 = 1, ____localvar____3 = 2;
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt IntegerLiteral ( 180498672 -> p 180498808 )
(IntegerLiteral 0xac230f0 'int' 1)
1;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt IntegerLiteral ( 180498768 -> p 180498808 )
(IntegerLiteral 0xac23150 'int' 2)
2;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt LabelStmt ( 180504912 -> p 180502008 )
(LabelStmt 0xac24950 '____label____5'
  (CompoundStmt 0xac24ac0
    (DeclStmt 0xac249a0
      0xac24960 "auto int ____localvar____4 =
        (ImplicitCastExpr 0xac231e0 'int' <LValueToRValue>
          (BinaryOperator 0xac231c8 'int' lvalue '='
            (DeclRefExpr 0xac23188 'int' lvalue Var 0xac230c0 '____localvar____2' 'int')
            (ImplicitCastExpr 0xac231b8 'int' <LValueToRValue>
              (DeclRefExpr 0xac231a0 'int' lvalue Var 0xac23120 '____localvar____3' 'int'))))")
    (IfStmt 0xac249b0
      <<<NULL>>>
      (BinaryOperator 0xac24a88 '_Bool' '=='
        (ImplicitCastExpr 0xac24a78 'int' <LValueToRValue>
          (DeclRefExpr 0xac24a60 'int' lvalue Var 0xac24960 '____localvar____4' 'int'))
        (IntegerLiteral 0xac23b80 'int' 1))
      (GotoStmt 0xac24aa0 '____label____7':0xac24a10)
      (GotoStmt 0xac24ab0 '____label____6':0xac249d0))
    (CompoundStmt 0xac23bc8
      (CallExpr 0xac23b38 'int'
        (ImplicitCastExpr 0xac23b28 'int (*)(const char *restrict, ...)' <FunctionToPointerDecay>
          (DeclRefExpr 0xac23acc 'int (const char *restrict, ...)' lvalue Function 0xac1b2e0 'printf' 'int (const char *restrict, ...)'))
        (ImplicitCastExpr 0xac23b60 'const char *' <ArrayToPointerDecay>
          (StringLiteral 0xac23a90 'const char [4]' lvalue "%d\n"))
        (ImplicitCastExpr 0xac23b70 'int' <LValueToRValue>
          (DeclRefExpr 0xac23ab4 'int' lvalue Var 0xac230c0 '____localvar____2' 'int')))
      (LabelStmt 0xac24a50 '____label____7'
        (NullStmt 0xac23bb8)))
    (LabelStmt 0xac24a00 '____label____6'
      (NullStmt 0xac249f0))))
____label____5:
{
    int ____localvar____4 = ____localvar____2 = ____localvar____3;
    if (____localvar____4 == 1)
        goto ____label____7;
    else
        goto ____label____6;
    {
        printf("%d\n", ____localvar____2);
      ____label____7:
        ;
    }
  ____label____6:
    ;
}
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt CompoundStmt ( 180505280 -> p 180504912 )
(CompoundStmt 0xac24ac0
  (DeclStmt 0xac249a0
    0xac24960 "auto int ____localvar____4 =
      (ImplicitCastExpr 0xac231e0 'int' <LValueToRValue>
        (BinaryOperator 0xac231c8 'int' lvalue '='
          (DeclRefExpr 0xac23188 'int' lvalue Var 0xac230c0 '____localvar____2' 'int')
          (ImplicitCastExpr 0xac231b8 'int' <LValueToRValue>
            (DeclRefExpr 0xac231a0 'int' lvalue Var 0xac23120 '____localvar____3' 'int'))))")
  (IfStmt 0xac249b0
    <<<NULL>>>
    (BinaryOperator 0xac24a88 '_Bool' '=='
      (ImplicitCastExpr 0xac24a78 'int' <LValueToRValue>
        (DeclRefExpr 0xac24a60 'int' lvalue Var 0xac24960 '____localvar____4' 'int'))
      (IntegerLiteral 0xac23b80 'int' 1))
    (GotoStmt 0xac24aa0 '____label____7':0xac24a10)
    (GotoStmt 0xac24ab0 '____label____6':0xac249d0))
  (CompoundStmt 0xac23bc8
    (CallExpr 0xac23b38 'int'
      (ImplicitCastExpr 0xac23b28 'int (*)(const char *restrict, ...)' <FunctionToPointerDecay>
        (DeclRefExpr 0xac23acc 'int (const char *restrict, ...)' lvalue Function 0xac1b2e0 'printf' 'int (const char *restrict, ...)'))
      (ImplicitCastExpr 0xac23b60 'const char *' <ArrayToPointerDecay>
        (StringLiteral 0xac23a90 'const char [4]' lvalue "%d\n"))
      (ImplicitCastExpr 0xac23b70 'int' <LValueToRValue>
        (DeclRefExpr 0xac23ab4 'int' lvalue Var 0xac230c0 '____localvar____2' 'int')))
    (LabelStmt 0xac24a50 '____label____7'
      (NullStmt 0xac23bb8)))
  (LabelStmt 0xac24a00 '____label____6'
    (NullStmt 0xac249f0)))
{
    int ____localvar____4 = ____localvar____2 = ____localvar____3;
    if (____localvar____4 == 1)
        goto ____label____7;
    else
        goto ____label____6;
    {
        printf("%d\n", ____localvar____2);
      ____label____7:
        ;
    }
  ____label____6:
    ;
}
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt DeclStmt ( 180504992 -> p 180505280 )
(DeclStmt 0xac249a0
  0xac24960 "auto int ____localvar____4 =
    (ImplicitCastExpr 0xac231e0 'int' <LValueToRValue>
      (BinaryOperator 0xac231c8 'int' lvalue '='
        (DeclRefExpr 0xac23188 'int' lvalue Var 0xac230c0 '____localvar____2' 'int')
        (ImplicitCastExpr 0xac231b8 'int' <LValueToRValue>
          (DeclRefExpr 0xac231a0 'int' lvalue Var 0xac23120 '____localvar____3' 'int'))))")
int ____localvar____4 = ____localvar____2 = ____localvar____3;
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt ImplicitCastExpr ( 180498912 -> p 180504992 )
(ImplicitCastExpr 0xac231e0 'int' <LValueToRValue>
  (BinaryOperator 0xac231c8 'int' lvalue '='
    (DeclRefExpr 0xac23188 'int' lvalue Var 0xac230c0 '____localvar____2' 'int')
    (ImplicitCastExpr 0xac231b8 'int' <LValueToRValue>
      (DeclRefExpr 0xac231a0 'int' lvalue Var 0xac23120 '____localvar____3' 'int'))))
____localvar____2 = ____localvar____3;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt BinaryOperator ( 180498888 -> p 180498912 )
(BinaryOperator 0xac231c8 'int' lvalue '='
  (DeclRefExpr 0xac23188 'int' lvalue Var 0xac230c0 '____localvar____2' 'int')
  (ImplicitCastExpr 0xac231b8 'int' <LValueToRValue>
    (DeclRefExpr 0xac231a0 'int' lvalue Var 0xac23120 '____localvar____3' 'int')))
____localvar____2 = ____localvar____3;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt DeclRefExpr ( 180498824 -> p 180498888 )
(DeclRefExpr 0xac23188 'int' lvalue Var 0xac230c0 '____localvar____2' 'int')
____localvar____2;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt ImplicitCastExpr ( 180498872 -> p 180498888 )
(ImplicitCastExpr 0xac231b8 'int' <LValueToRValue>
  (DeclRefExpr 0xac231a0 'int' lvalue Var 0xac23120 '____localvar____3' 'int'))
____localvar____3;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt DeclRefExpr ( 180498848 -> p 180498872 )
(DeclRefExpr 0xac231a0 'int' lvalue Var 0xac23120 '____localvar____3' 'int')
____localvar____3;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt IfStmt ( 180505008 -> p 180505280 )
(IfStmt 0xac249b0
  <<<NULL>>>
  (BinaryOperator 0xac24a88 '_Bool' '=='
    (ImplicitCastExpr 0xac24a78 'int' <LValueToRValue>
      (DeclRefExpr 0xac24a60 'int' lvalue Var 0xac24960 '____localvar____4' 'int'))
    (IntegerLiteral 0xac23b80 'int' 1))
  (GotoStmt 0xac24aa0 '____label____7':0xac24a10)
  (GotoStmt 0xac24ab0 '____label____6':0xac249d0))
if (____localvar____4 == 1)
    goto ____label____7;
else
    goto ____label____6;
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt BinaryOperator ( 180505224 -> p 180505008 )
(BinaryOperator 0xac24a88 '_Bool' '=='
  (ImplicitCastExpr 0xac24a78 'int' <LValueToRValue>
    (DeclRefExpr 0xac24a60 'int' lvalue Var 0xac24960 '____localvar____4' 'int'))
  (IntegerLiteral 0xac23b80 'int' 1))
____localvar____4 == 1;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt ImplicitCastExpr ( 180505208 -> p 180505224 )
(ImplicitCastExpr 0xac24a78 'int' <LValueToRValue>
  (DeclRefExpr 0xac24a60 'int' lvalue Var 0xac24960 '____localvar____4' 'int'))
____localvar____4;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt DeclRefExpr ( 180505184 -> p 180505208 )
(DeclRefExpr 0xac24a60 'int' lvalue Var 0xac24960 '____localvar____4' 'int')
____localvar____4;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt IntegerLiteral ( 180501376 -> p 180505224 )
(IntegerLiteral 0xac23b80 'int' 1)
1;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt GotoStmt ( 180505248 -> p 180505008 )
(GotoStmt 0xac24aa0 '____label____7':0xac24a10)
goto ____label____7;
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt GotoStmt ( 180505264 -> p 180505008 )
(GotoStmt 0xac24ab0 '____label____6':0xac249d0)
goto ____label____6;
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt CompoundStmt ( 180501448 -> p 180505280 )
(CompoundStmt 0xac23bc8
  (CallExpr 0xac23b38 'int'
    (ImplicitCastExpr 0xac23b28 'int (*)(const char *restrict, ...)' <FunctionToPointerDecay>
      (DeclRefExpr 0xac23acc 'int (const char *restrict, ...)' lvalue Function 0xac1b2e0 'printf' 'int (const char *restrict, ...)'))
    (ImplicitCastExpr 0xac23b60 'const char *' <ArrayToPointerDecay>
      (StringLiteral 0xac23a90 'const char [4]' lvalue "%d\n"))
    (ImplicitCastExpr 0xac23b70 'int' <LValueToRValue>
      (DeclRefExpr 0xac23ab4 'int' lvalue Var 0xac230c0 '____localvar____2' 'int')))
  (LabelStmt 0xac24a50 '____label____7'
    (NullStmt 0xac23bb8)))
{
    printf("%d\n", ____localvar____2);
  ____label____7:
    ;
}
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt CallExpr ( 180501304 -> p 180501448 )
(CallExpr 0xac23b38 'int'
  (ImplicitCastExpr 0xac23b28 'int (*)(const char *restrict, ...)' <FunctionToPointerDecay>
    (DeclRefExpr 0xac23acc 'int (const char *restrict, ...)' lvalue Function 0xac1b2e0 'printf' 'int (const char *restrict, ...)'))
  (ImplicitCastExpr 0xac23b60 'const char *' <ArrayToPointerDecay>
    (StringLiteral 0xac23a90 'const char [4]' lvalue "%d\n"))
  (ImplicitCastExpr 0xac23b70 'int' <LValueToRValue>
    (DeclRefExpr 0xac23ab4 'int' lvalue Var 0xac230c0 '____localvar____2' 'int')))
printf("%d\n", ____localvar____2);
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt ImplicitCastExpr ( 180501288 -> p 180501304 )
(ImplicitCastExpr 0xac23b28 'int (*)(const char *restrict, ...)' <FunctionToPointerDecay>
  (DeclRefExpr 0xac23acc 'int (const char *restrict, ...)' lvalue Function 0xac1b2e0 'printf' 'int (const char *restrict, ...)'))
printf;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt DeclRefExpr ( 180501196 -> p 180501288 )
(DeclRefExpr 0xac23acc 'int (const char *restrict, ...)' lvalue Function 0xac1b2e0 'printf' 'int (const char *restrict, ...)')
printf;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt ImplicitCastExpr ( 180501344 -> p 180501304 )
(ImplicitCastExpr 0xac23b60 'const char *' <ArrayToPointerDecay>
  (StringLiteral 0xac23a90 'const char [4]' lvalue "%d\n"))
"%d\n";
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt StringLiteral ( 180501136 -> p 180501344 )
(StringLiteral 0xac23a90 'const char [4]' lvalue "%d\n")
"%d\n";
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt ImplicitCastExpr ( 180501360 -> p 180501304 )
(ImplicitCastExpr 0xac23b70 'int' <LValueToRValue>
  (DeclRefExpr 0xac23ab4 'int' lvalue Var 0xac230c0 '____localvar____2' 'int'))
____localvar____2;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt DeclRefExpr ( 180501172 -> p 180501360 )
(DeclRefExpr 0xac23ab4 'int' lvalue Var 0xac230c0 '____localvar____2' 'int')
____localvar____2;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt LabelStmt ( 180505168 -> p 180501448 )
(LabelStmt 0xac24a50 '____label____7'
  (NullStmt 0xac23bb8))
____label____7:
;
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt NullStmt ( 180501432 -> p 180505168 )
(NullStmt 0xac23bb8)
;
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt LabelStmt ( 180505088 -> p 180505280 )
(LabelStmt 0xac24a00 '____label____6'
  (NullStmt 0xac249f0))
____label____6:
;
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt NullStmt ( 180505072 -> p 180505088 )
(NullStmt 0xac249f0)
;
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt LabelStmt ( 180505808 -> p 180502008 )
(LabelStmt 0xac24cd0 '____label____11'
  (CompoundStmt 0xac24e70
    (DeclStmt 0xac24d20
      0xac24ce0 "auto int ____localvar____6 =
        (ImplicitCastExpr 0xac23bf8 'int' <LValueToRValue>
          (DeclRefExpr 0xac23be0 'int' lvalue Var 0xac230c0 '____localvar____2' 'int'))")
    (IfStmt 0xac24d30
      <<<NULL>>>
      (BinaryOperator 0xac24df8 '_Bool' '=='
        (ImplicitCastExpr 0xac24de8 'int' <LValueToRValue>
          (DeclRefExpr 0xac24dd0 'int' lvalue Var 0xac24ce0 '____localvar____6' 'int'))
        (IntegerLiteral 0xac23c88 'int' 1))
      (GotoStmt 0xac24e10 '____label____13':0xac24d90)
      (GotoStmt 0xac24e60 '____label____14':0xac24e20))
    (CompoundStmt 0xac23dd8
      (LabelStmt 0xac24e50 '____label____14'
        (BinaryOperator 0xac23c58 'int' lvalue '='
          (DeclRefExpr 0xac23c24 'int' lvalue Var 0xac230c0 '____localvar____2' 'int')
          (IntegerLiteral 0xac23c40 'int' 1)))
      (LabelStmt 0xac24dc0 '____label____13'
        (BinaryOperator 0xac23cf0 'int' lvalue '='
          (DeclRefExpr 0xac23cc0 'int' lvalue Var 0xac23120 '____localvar____3' 'int')
          (IntegerLiteral 0xac23cd8 'int' 2)))
      (LabelStmt 0xac24b10 '____label____8'
        (CompoundStmt 0xac24c80
          (DeclStmt 0xac24b60
            0xac24b20 "auto int ____localvar____5 =
              (ImplicitCastExpr 0xac23d20 'int' <LValueToRValue>
                (DeclRefExpr 0xac23d08 'int' lvalue Var 0xac23120 '____localvar____3' 'int'))")
          (IfStmt 0xac24b70
            <<<NULL>>>
            (BinaryOperator 0xac24c38 '_Bool' '=='
              (ImplicitCastExpr 0xac24c28 'int' <LValueToRValue>
                (DeclRefExpr 0xac24c10 'int' lvalue Var 0xac24b20 '____localvar____5' 'int'))
              (IntegerLiteral 0xac23d50 'int' 2))
            (GotoStmt 0xac24c50 '____label____10':0xac24bd0)
            (GotoStmt 0xac24c60 '____label____9':0xac24b90))
          (CompoundStmt 0xac23d90
            (LabelStmt 0xac24c00 '____label____10'
              (GotoStmt 0xac24c70 '____label____9':0xac24b90)))
          (LabelStmt 0xac24bc0 '____label____9'
            (NullStmt 0xac24bb0))))
      (UnaryOperator 0xac23dc0 'int' postfix '++'
        (DeclRefExpr 0xac23da4 'int' lvalue Var 0xac23120 '____localvar____3' 'int')))
    (LabelStmt 0xac24d80 '____label____12'
      (NullStmt 0xac24d70))))
____label____11:
{
    int ____localvar____6 = ____localvar____2;
    if (____localvar____6 == 1)
        goto ____label____13;
    else
        goto ____label____14;
    {
      ____label____14:
        ____localvar____2 = 1;
      ____label____13:
        ____localvar____3 = 2;
      ____label____8:
        {
            int ____localvar____5 = ____localvar____3;
            if (____localvar____5 == 2)
                goto ____label____10;
            else
                goto ____label____9;
            {
              ____label____10:
                goto ____label____9;
            }
          ____label____9:
            ;
        }
        ____localvar____3++;
    }
  ____label____12:
    ;
}
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt CompoundStmt ( 180506224 -> p 180505808 )
(CompoundStmt 0xac24e70
  (DeclStmt 0xac24d20
    0xac24ce0 "auto int ____localvar____6 =
      (ImplicitCastExpr 0xac23bf8 'int' <LValueToRValue>
        (DeclRefExpr 0xac23be0 'int' lvalue Var 0xac230c0 '____localvar____2' 'int'))")
  (IfStmt 0xac24d30
    <<<NULL>>>
    (BinaryOperator 0xac24df8 '_Bool' '=='
      (ImplicitCastExpr 0xac24de8 'int' <LValueToRValue>
        (DeclRefExpr 0xac24dd0 'int' lvalue Var 0xac24ce0 '____localvar____6' 'int'))
      (IntegerLiteral 0xac23c88 'int' 1))
    (GotoStmt 0xac24e10 '____label____13':0xac24d90)
    (GotoStmt 0xac24e60 '____label____14':0xac24e20))
  (CompoundStmt 0xac23dd8
    (LabelStmt 0xac24e50 '____label____14'
      (BinaryOperator 0xac23c58 'int' lvalue '='
        (DeclRefExpr 0xac23c24 'int' lvalue Var 0xac230c0 '____localvar____2' 'int')
        (IntegerLiteral 0xac23c40 'int' 1)))
    (LabelStmt 0xac24dc0 '____label____13'
      (BinaryOperator 0xac23cf0 'int' lvalue '='
        (DeclRefExpr 0xac23cc0 'int' lvalue Var 0xac23120 '____localvar____3' 'int')
        (IntegerLiteral 0xac23cd8 'int' 2)))
    (LabelStmt 0xac24b10 '____label____8'
      (CompoundStmt 0xac24c80
        (DeclStmt 0xac24b60
          0xac24b20 "auto int ____localvar____5 =
            (ImplicitCastExpr 0xac23d20 'int' <LValueToRValue>
              (DeclRefExpr 0xac23d08 'int' lvalue Var 0xac23120 '____localvar____3' 'int'))")
        (IfStmt 0xac24b70
          <<<NULL>>>
          (BinaryOperator 0xac24c38 '_Bool' '=='
            (ImplicitCastExpr 0xac24c28 'int' <LValueToRValue>
              (DeclRefExpr 0xac24c10 'int' lvalue Var 0xac24b20 '____localvar____5' 'int'))
            (IntegerLiteral 0xac23d50 'int' 2))
          (GotoStmt 0xac24c50 '____label____10':0xac24bd0)
          (GotoStmt 0xac24c60 '____label____9':0xac24b90))
        (CompoundStmt 0xac23d90
          (LabelStmt 0xac24c00 '____label____10'
            (GotoStmt 0xac24c70 '____label____9':0xac24b90)))
        (LabelStmt 0xac24bc0 '____label____9'
          (NullStmt 0xac24bb0))))
    (UnaryOperator 0xac23dc0 'int' postfix '++'
      (DeclRefExpr 0xac23da4 'int' lvalue Var 0xac23120 '____localvar____3' 'int')))
  (LabelStmt 0xac24d80 '____label____12'
    (NullStmt 0xac24d70)))
{
    int ____localvar____6 = ____localvar____2;
    if (____localvar____6 == 1)
        goto ____label____13;
    else
        goto ____label____14;
    {
      ____label____14:
        ____localvar____2 = 1;
      ____label____13:
        ____localvar____3 = 2;
      ____label____8:
        {
            int ____localvar____5 = ____localvar____3;
            if (____localvar____5 == 2)
                goto ____label____10;
            else
                goto ____label____9;
            {
              ____label____10:
                goto ____label____9;
            }
          ____label____9:
            ;
        }
        ____localvar____3++;
    }
  ____label____12:
    ;
}
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt DeclStmt ( 180505888 -> p 180506224 )
(DeclStmt 0xac24d20
  0xac24ce0 "auto int ____localvar____6 =
    (ImplicitCastExpr 0xac23bf8 'int' <LValueToRValue>
      (DeclRefExpr 0xac23be0 'int' lvalue Var 0xac230c0 '____localvar____2' 'int'))")
int ____localvar____6 = ____localvar____2;
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt ImplicitCastExpr ( 180501496 -> p 180505888 )
(ImplicitCastExpr 0xac23bf8 'int' <LValueToRValue>
  (DeclRefExpr 0xac23be0 'int' lvalue Var 0xac230c0 '____localvar____2' 'int'))
____localvar____2;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt DeclRefExpr ( 180501472 -> p 180501496 )
(DeclRefExpr 0xac23be0 'int' lvalue Var 0xac230c0 '____localvar____2' 'int')
____localvar____2;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt IfStmt ( 180505904 -> p 180506224 )
(IfStmt 0xac24d30
  <<<NULL>>>
  (BinaryOperator 0xac24df8 '_Bool' '=='
    (ImplicitCastExpr 0xac24de8 'int' <LValueToRValue>
      (DeclRefExpr 0xac24dd0 'int' lvalue Var 0xac24ce0 '____localvar____6' 'int'))
    (IntegerLiteral 0xac23c88 'int' 1))
  (GotoStmt 0xac24e10 '____label____13':0xac24d90)
  (GotoStmt 0xac24e60 '____label____14':0xac24e20))
if (____localvar____6 == 1)
    goto ____label____13;
else
    goto ____label____14;
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt BinaryOperator ( 180506104 -> p 180505904 )
(BinaryOperator 0xac24df8 '_Bool' '=='
  (ImplicitCastExpr 0xac24de8 'int' <LValueToRValue>
    (DeclRefExpr 0xac24dd0 'int' lvalue Var 0xac24ce0 '____localvar____6' 'int'))
  (IntegerLiteral 0xac23c88 'int' 1))
____localvar____6 == 1;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt ImplicitCastExpr ( 180506088 -> p 180506104 )
(ImplicitCastExpr 0xac24de8 'int' <LValueToRValue>
  (DeclRefExpr 0xac24dd0 'int' lvalue Var 0xac24ce0 '____localvar____6' 'int'))
____localvar____6;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt DeclRefExpr ( 180506064 -> p 180506088 )
(DeclRefExpr 0xac24dd0 'int' lvalue Var 0xac24ce0 '____localvar____6' 'int')
____localvar____6;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt IntegerLiteral ( 180501640 -> p 180506104 )
(IntegerLiteral 0xac23c88 'int' 1)
1;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt GotoStmt ( 180506128 -> p 180505904 )
(GotoStmt 0xac24e10 '____label____13':0xac24d90)
goto ____label____13;
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt GotoStmt ( 180506208 -> p 180505904 )
(GotoStmt 0xac24e60 '____label____14':0xac24e20)
goto ____label____14;
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt CompoundStmt ( 180501976 -> p 180506224 )
(CompoundStmt 0xac23dd8
  (LabelStmt 0xac24e50 '____label____14'
    (BinaryOperator 0xac23c58 'int' lvalue '='
      (DeclRefExpr 0xac23c24 'int' lvalue Var 0xac230c0 '____localvar____2' 'int')
      (IntegerLiteral 0xac23c40 'int' 1)))
  (LabelStmt 0xac24dc0 '____label____13'
    (BinaryOperator 0xac23cf0 'int' lvalue '='
      (DeclRefExpr 0xac23cc0 'int' lvalue Var 0xac23120 '____localvar____3' 'int')
      (IntegerLiteral 0xac23cd8 'int' 2)))
  (LabelStmt 0xac24b10 '____label____8'
    (CompoundStmt 0xac24c80
      (DeclStmt 0xac24b60
        0xac24b20 "auto int ____localvar____5 =
          (ImplicitCastExpr 0xac23d20 'int' <LValueToRValue>
            (DeclRefExpr 0xac23d08 'int' lvalue Var 0xac23120 '____localvar____3' 'int'))")
      (IfStmt 0xac24b70
        <<<NULL>>>
        (BinaryOperator 0xac24c38 '_Bool' '=='
          (ImplicitCastExpr 0xac24c28 'int' <LValueToRValue>
            (DeclRefExpr 0xac24c10 'int' lvalue Var 0xac24b20 '____localvar____5' 'int'))
          (IntegerLiteral 0xac23d50 'int' 2))
        (GotoStmt 0xac24c50 '____label____10':0xac24bd0)
        (GotoStmt 0xac24c60 '____label____9':0xac24b90))
      (CompoundStmt 0xac23d90
        (LabelStmt 0xac24c00 '____label____10'
          (GotoStmt 0xac24c70 '____label____9':0xac24b90)))
      (LabelStmt 0xac24bc0 '____label____9'
        (NullStmt 0xac24bb0))))
  (UnaryOperator 0xac23dc0 'int' postfix '++'
    (DeclRefExpr 0xac23da4 'int' lvalue Var 0xac23120 '____localvar____3' 'int')))
{
  ____label____14:
    ____localvar____2 = 1;
  ____label____13:
    ____localvar____3 = 2;
  ____label____8:
    {
        int ____localvar____5 = ____localvar____3;
        if (____localvar____5 == 2)
            goto ____label____10;
        else
            goto ____label____9;
        {
          ____label____10:
            goto ____label____9;
        }
      ____label____9:
        ;
    }
    ____localvar____3++;
}
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt LabelStmt ( 180506192 -> p 180501976 )
(LabelStmt 0xac24e50 '____label____14'
  (BinaryOperator 0xac23c58 'int' lvalue '='
    (DeclRefExpr 0xac23c24 'int' lvalue Var 0xac230c0 '____localvar____2' 'int')
    (IntegerLiteral 0xac23c40 'int' 1)))
____label____14:
____localvar____2 = 1;
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt BinaryOperator ( 180501592 -> p 180506192 )
(BinaryOperator 0xac23c58 'int' lvalue '='
  (DeclRefExpr 0xac23c24 'int' lvalue Var 0xac230c0 '____localvar____2' 'int')
  (IntegerLiteral 0xac23c40 'int' 1))
____localvar____2 = 1;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt DeclRefExpr ( 180501540 -> p 180501592 )
(DeclRefExpr 0xac23c24 'int' lvalue Var 0xac230c0 '____localvar____2' 'int')
____localvar____2;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt IntegerLiteral ( 180501568 -> p 180501592 )
(IntegerLiteral 0xac23c40 'int' 1)
1;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt LabelStmt ( 180506048 -> p 180501976 )
(LabelStmt 0xac24dc0 '____label____13'
  (BinaryOperator 0xac23cf0 'int' lvalue '='
    (DeclRefExpr 0xac23cc0 'int' lvalue Var 0xac23120 '____localvar____3' 'int')
    (IntegerLiteral 0xac23cd8 'int' 2)))
____label____13:
____localvar____3 = 2;
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt BinaryOperator ( 180501744 -> p 180506048 )
(BinaryOperator 0xac23cf0 'int' lvalue '='
  (DeclRefExpr 0xac23cc0 'int' lvalue Var 0xac23120 '____localvar____3' 'int')
  (IntegerLiteral 0xac23cd8 'int' 2))
____localvar____3 = 2;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt DeclRefExpr ( 180501696 -> p 180501744 )
(DeclRefExpr 0xac23cc0 'int' lvalue Var 0xac23120 '____localvar____3' 'int')
____localvar____3;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt IntegerLiteral ( 180501720 -> p 180501744 )
(IntegerLiteral 0xac23cd8 'int' 2)
2;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt LabelStmt ( 180505360 -> p 180501976 )
(LabelStmt 0xac24b10 '____label____8'
  (CompoundStmt 0xac24c80
    (DeclStmt 0xac24b60
      0xac24b20 "auto int ____localvar____5 =
        (ImplicitCastExpr 0xac23d20 'int' <LValueToRValue>
          (DeclRefExpr 0xac23d08 'int' lvalue Var 0xac23120 '____localvar____3' 'int'))")
    (IfStmt 0xac24b70
      <<<NULL>>>
      (BinaryOperator 0xac24c38 '_Bool' '=='
        (ImplicitCastExpr 0xac24c28 'int' <LValueToRValue>
          (DeclRefExpr 0xac24c10 'int' lvalue Var 0xac24b20 '____localvar____5' 'int'))
        (IntegerLiteral 0xac23d50 'int' 2))
      (GotoStmt 0xac24c50 '____label____10':0xac24bd0)
      (GotoStmt 0xac24c60 '____label____9':0xac24b90))
    (CompoundStmt 0xac23d90
      (LabelStmt 0xac24c00 '____label____10'
        (GotoStmt 0xac24c70 '____label____9':0xac24b90)))
    (LabelStmt 0xac24bc0 '____label____9'
      (NullStmt 0xac24bb0))))
____label____8:
{
    int ____localvar____5 = ____localvar____3;
    if (____localvar____5 == 2)
        goto ____label____10;
    else
        goto ____label____9;
    {
      ____label____10:
        goto ____label____9;
    }
  ____label____9:
    ;
}
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt CompoundStmt ( 180505728 -> p 180505360 )
(CompoundStmt 0xac24c80
  (DeclStmt 0xac24b60
    0xac24b20 "auto int ____localvar____5 =
      (ImplicitCastExpr 0xac23d20 'int' <LValueToRValue>
        (DeclRefExpr 0xac23d08 'int' lvalue Var 0xac23120 '____localvar____3' 'int'))")
  (IfStmt 0xac24b70
    <<<NULL>>>
    (BinaryOperator 0xac24c38 '_Bool' '=='
      (ImplicitCastExpr 0xac24c28 'int' <LValueToRValue>
        (DeclRefExpr 0xac24c10 'int' lvalue Var 0xac24b20 '____localvar____5' 'int'))
      (IntegerLiteral 0xac23d50 'int' 2))
    (GotoStmt 0xac24c50 '____label____10':0xac24bd0)
    (GotoStmt 0xac24c60 '____label____9':0xac24b90))
  (CompoundStmt 0xac23d90
    (LabelStmt 0xac24c00 '____label____10'
      (GotoStmt 0xac24c70 '____label____9':0xac24b90)))
  (LabelStmt 0xac24bc0 '____label____9'
    (NullStmt 0xac24bb0)))
{
    int ____localvar____5 = ____localvar____3;
    if (____localvar____5 == 2)
        goto ____label____10;
    else
        goto ____label____9;
    {
      ____label____10:
        goto ____label____9;
    }
  ____label____9:
    ;
}
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt DeclStmt ( 180505440 -> p 180505728 )
(DeclStmt 0xac24b60
  0xac24b20 "auto int ____localvar____5 =
    (ImplicitCastExpr 0xac23d20 'int' <LValueToRValue>
      (DeclRefExpr 0xac23d08 'int' lvalue Var 0xac23120 '____localvar____3' 'int'))")
int ____localvar____5 = ____localvar____3;
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt ImplicitCastExpr ( 180501792 -> p 180505440 )
(ImplicitCastExpr 0xac23d20 'int' <LValueToRValue>
  (DeclRefExpr 0xac23d08 'int' lvalue Var 0xac23120 '____localvar____3' 'int'))
____localvar____3;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt DeclRefExpr ( 180501768 -> p 180501792 )
(DeclRefExpr 0xac23d08 'int' lvalue Var 0xac23120 '____localvar____3' 'int')
____localvar____3;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt IfStmt ( 180505456 -> p 180505728 )
(IfStmt 0xac24b70
  <<<NULL>>>
  (BinaryOperator 0xac24c38 '_Bool' '=='
    (ImplicitCastExpr 0xac24c28 'int' <LValueToRValue>
      (DeclRefExpr 0xac24c10 'int' lvalue Var 0xac24b20 '____localvar____5' 'int'))
    (IntegerLiteral 0xac23d50 'int' 2))
  (GotoStmt 0xac24c50 '____label____10':0xac24bd0)
  (GotoStmt 0xac24c60 '____label____9':0xac24b90))
if (____localvar____5 == 2)
    goto ____label____10;
else
    goto ____label____9;
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt BinaryOperator ( 180505656 -> p 180505456 )
(BinaryOperator 0xac24c38 '_Bool' '=='
  (ImplicitCastExpr 0xac24c28 'int' <LValueToRValue>
    (DeclRefExpr 0xac24c10 'int' lvalue Var 0xac24b20 '____localvar____5' 'int'))
  (IntegerLiteral 0xac23d50 'int' 2))
____localvar____5 == 2;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt ImplicitCastExpr ( 180505640 -> p 180505656 )
(ImplicitCastExpr 0xac24c28 'int' <LValueToRValue>
  (DeclRefExpr 0xac24c10 'int' lvalue Var 0xac24b20 '____localvar____5' 'int'))
____localvar____5;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt DeclRefExpr ( 180505616 -> p 180505640 )
(DeclRefExpr 0xac24c10 'int' lvalue Var 0xac24b20 '____localvar____5' 'int')
____localvar____5;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt IntegerLiteral ( 180501840 -> p 180505656 )
(IntegerLiteral 0xac23d50 'int' 2)
2;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt GotoStmt ( 180505680 -> p 180505456 )
(GotoStmt 0xac24c50 '____label____10':0xac24bd0)
goto ____label____10;
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt GotoStmt ( 180505696 -> p 180505456 )
(GotoStmt 0xac24c60 '____label____9':0xac24b90)
goto ____label____9;
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt CompoundStmt ( 180501904 -> p 180505728 )
(CompoundStmt 0xac23d90
  (LabelStmt 0xac24c00 '____label____10'
    (GotoStmt 0xac24c70 '____label____9':0xac24b90)))
{
  ____label____10:
    goto ____label____9;
}
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt LabelStmt ( 180505600 -> p 180501904 )
(LabelStmt 0xac24c00 '____label____10'
  (GotoStmt 0xac24c70 '____label____9':0xac24b90))
____label____10:
goto ____label____9;
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt GotoStmt ( 180505712 -> p 180505600 )
(GotoStmt 0xac24c70 '____label____9':0xac24b90)
goto ____label____9;
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt LabelStmt ( 180505536 -> p 180505728 )
(LabelStmt 0xac24bc0 '____label____9'
  (NullStmt 0xac24bb0))
____label____9:
;
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt NullStmt ( 180505520 -> p 180505536 )
(NullStmt 0xac24bb0)
;
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt UnaryOperator ( 180501952 -> p 180501976 )
(UnaryOperator 0xac23dc0 'int' postfix '++'
  (DeclRefExpr 0xac23da4 'int' lvalue Var 0xac23120 '____localvar____3' 'int'))
____localvar____3++;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt DeclRefExpr ( 180501924 -> p 180501952 )
(DeclRefExpr 0xac23da4 'int' lvalue Var 0xac23120 '____localvar____3' 'int')
____localvar____3;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt LabelStmt ( 180505984 -> p 180506224 )
(LabelStmt 0xac24d80 '____label____12'
  (NullStmt 0xac24d70))
____label____12:
;
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt NullStmt ( 180505968 -> p 180505984 )
(NullStmt 0xac24d70)
;
;
[0;1;33m
 [B19 (ENTRY)]
[0m[0;35m   Succs [0m(1):[0;35m B18[0m
[0;1;33m
 [B1]
[0m  ____label____12:
[0;34m   Preds [0m(1):[0;34m B2[0m
[0;35m   Succs [0m(1):[0;35m B0[0m
[0;1;33m
 [B2]
[0m  ____label____9:
   1: ____localvar____3++
[0;34m   Preds [0m(2):[0;34m B3 B4[0m
[0;35m   Succs [0m(1):[0;35m B1[0m
[0;1;33m
 [B3]
[0m  ____label____10:
[0;32m   T: goto ____label____9;

[0m[0;34m   Preds [0m(1):[0;34m B5[0m
[0;35m   Succs [0m(1):[0;35m B2[0m
[0;1;33m
 [B4]
[0m[0;32m   T: goto ____label____9;

[0m[0;34m   Preds [0m(1):[0;34m B6[0m
[0;35m   Succs [0m(1):[0;35m B2[0m
[0;1;33m
 [B5]
[0m[0;32m   T: goto ____label____10;

[0m[0;34m   Preds [0m(1):[0;34m B6[0m
[0;35m   Succs [0m(1):[0;35m B3[0m
[0;1;33m
 [B6]
[0m  ____label____8:
   1: int ____localvar____5 = ____localvar____3;
   2: ____localvar____5 == 2
[0;32m   T: if [B6.2]
[0m[0;34m   Preds [0m(1):[0;34m B7[0m
[0;35m   Succs [0m(2):[0;35m B5 B4[0m
[0;1;33m
 [B7]
[0m  ____label____13:
   1: ____localvar____3 = 2
[0;34m   Preds [0m(2):[0;34m B8 B10[0m
[0;35m   Succs [0m(1):[0;35m B6[0m
[0;1;33m
 [B8]
[0m  ____label____14:
   1: ____localvar____2 = 1
[0;34m   Preds [0m(1):[0;34m B9[0m
[0;35m   Succs [0m(1):[0;35m B7[0m
[0;1;33m
 [B9]
[0m[0;32m   T: goto ____label____14;

[0m[0;34m   Preds [0m(1):[0;34m B11[0m
[0;35m   Succs [0m(1):[0;35m B8[0m
[0;1;33m
 [B10]
[0m[0;32m   T: goto ____label____13;

[0m[0;34m   Preds [0m(1):[0;34m B11[0m
[0;35m   Succs [0m(1):[0;35m B7[0m
[0;1;33m
 [B11]
[0m  ____label____11:
   1: int ____localvar____6 = ____localvar____2;
   2: ____localvar____6 == 1
[0;32m   T: if [B11.2]
[0m[0;34m   Preds [0m(1):[0;34m B12[0m
[0;35m   Succs [0m(2):[0;35m B10 B9[0m
[0;1;33m
 [B12]
[0m  ____label____6:
[0;34m   Preds [0m(2):[0;34m B13 B15[0m
[0;35m   Succs [0m(1):[0;35m B11[0m
[0;1;33m
 [B13]
[0m  ____label____7:
[0;34m   Preds [0m(2):[0;34m B14 B16[0m
[0;35m   Succs [0m(1):[0;35m B12[0m
[0;1;33m
 [B14]
[0m   1: printf("%d\n", ____localvar____2)
[0;35m   Succs [0m(1):[0;35m B13[0m
[0;1;33m
 [B15]
[0m[0;32m   T: goto ____label____6;

[0m[0;34m   Preds [0m(1):[0;34m B17[0m
[0;35m   Succs [0m(1):[0;35m B12[0m
[0;1;33m
 [B16]
[0m[0;32m   T: goto ____label____7;

[0m[0;34m   Preds [0m(1):[0;34m B17[0m
[0;35m   Succs [0m(1):[0;35m B13[0m
[0;1;33m
 [B17]
[0m  ____label____5:
   1: int ____localvar____4 = ____localvar____2 = ____localvar____3;
   2: ____localvar____4 == 1
[0;32m   T: if [B17.2]
[0m[0;34m   Preds [0m(1):[0;34m B18[0m
[0;35m   Succs [0m(2):[0;35m B16 B15[0m
[0;1;33m
 [B18]
[0m   1: int ____localvar____2 = 1;
   2: int ____localvar____3 = 2;
[0;34m   Preds [0m(1):[0;34m B19[0m
[0;35m   Succs [0m(1):[0;35m B17[0m
[0;1;33m
 [B0 (EXIT)]
[0m[0;34m   Preds [0m(1):[0;34m B1[0m

Writing '/tmp/llvm_7ZIkPP/CFG.dot'...  done. 
int main() {
    assign_cond();
    int ____localvar____7 = 1, ____localvar____8 = ____localvar____7 * 2;
    int ____localvar____9 = 0;
  ____label____23:
    {
        int ____localvar____10 = ____localvar____7 * ____localvar____8;
        if (____localvar____10 == 5)
            goto ____label____26;
        else if (____localvar____10 == 4)
            goto ____label____27;
        else if (____localvar____10 == 6)
            goto ____label____28;
        else if (2 <= ____localvar____10 + ____localvar____10 <= 3)
            goto ____label____29;
        else if (____localvar____10 == 0)
            goto ____label____30;
        else
            goto ____label____25;
        {
          ____label____15:
            {
                ;
              ____label____16:
                if (true) {
                    {
                    }
                  ____label____17:
                    {
                        goto ____label____16;
                    }
                }
              ____label____18:
                ;
            }
          ____label____30:
          LBL_IN_CASE:
            ____localvar____10 = 2;
          LBL_BEFORE_CASE:
          ____label____29:
            goto ____label____24;
            if (____localvar____10 == 3) {
              ____label____19:
                {
                    ;
                  ____label____20:
                    if (true) {
                        {
                          ____label____28:
                            goto ____label____22;
                        }
                      ____label____21:
                        {
                            goto ____label____20;
                        }
                    }
                  ____label____22:
                    ;
                }
            }
          ____label____27:
            ____localvar____8 = ____localvar____8 - 2;
            ____localvar____10 = 3;
            goto ____label____24;
          ____label____26:
            ;
          ____label____25:
            goto LBL_BEFORE_CASE;
          LBL_BEFORE_BREAK:
            goto ____label____24;
        }
      ____label____24:
        ;
    }
    return 0;
}

;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt CompoundStmt ( 180504176 -> p 0 )
(CompoundStmt 0xac24670
  (CallExpr 0xac23f08 'void'
    (ImplicitCastExpr 0xac23ef8 'void (*)(void)' <FunctionToPointerDecay>
      (DeclRefExpr 0xac23ec4 'void (void)' lvalue Function 0xac23050 'assign_cond' 'void (void)')))
  (DeclStmt 0xac24038
    0xac23f40 "int ____localvar____7 =
      (IntegerLiteral 0xac23f70 'int' 1)"
    0xac23fa0 "int ____localvar____8 =
      (BinaryOperator 0xac24010 'int' '*'
        (ImplicitCastExpr 0xac24000 'int' <LValueToRValue>
          (DeclRefExpr 0xac23fd0 'int' lvalue Var 0xac23f40 '____localvar____7' 'int'))
        (IntegerLiteral 0xac23fe8 'int' 2))")
  (DeclStmt 0xac240a8
    0xac24060 "int ____localvar____9 =
      (IntegerLiteral 0xac24090 'int' 0)")
  (LabelStmt 0xac25210 '____label____23'
    (CompoundStmt 0xac256b0
      (DeclStmt 0xac241b0
        0xac240d0 "int ____localvar____10 =
          (BinaryOperator 0xac24150 'int' '*'
            (ImplicitCastExpr 0xac24130 'int' <LValueToRValue>
              (DeclRefExpr 0xac24100 'int' lvalue Var 0xac23f40 '____localvar____7' 'int'))
            (ImplicitCastExpr 0xac24140 'int' <LValueToRValue>
              (DeclRefExpr 0xac24118 'int' lvalue Var 0xac23fa0 '____localvar____8' 'int')))")
      (IfStmt 0xac25220
        <<<NULL>>>
        (BinaryOperator 0xac25328 '_Bool' '=='
          (ImplicitCastExpr 0xac25318 'int' <LValueToRValue>
            (DeclRefExpr 0xac25300 'int' lvalue Var 0xac240d0 '____localvar____10' 'int'))
          (IntegerLiteral 0xac24560 'int' 5))
        (GotoStmt 0xac25340 '____label____26':0xac252c0)
        (IfStmt 0xac253e0
          <<<NULL>>>
          (BinaryOperator 0xac253b8 '_Bool' '=='
            (ImplicitCastExpr 0xac253a8 'int' <LValueToRValue>
              (DeclRefExpr 0xac25390 'int' lvalue Var 0xac240d0 '____localvar____10' 'int'))
            (IntegerLiteral 0xac24450 'int' 4))
          (GotoStmt 0xac253d0 '____label____27':0xac25350)
          (IfStmt 0xac25490
            <<<NULL>>>
            (BinaryOperator 0xac25468 '_Bool' '=='
              (ImplicitCastExpr 0xac25458 'int' <LValueToRValue>
                (DeclRefExpr 0xac25440 'int' lvalue Var 0xac240d0 '____localvar____10' 'int'))
              (IntegerLiteral 0xac24398 'int' 6))
            (GotoStmt 0xac25480 '____label____28':0xac25400)
            (IfStmt 0xac255a0
              <<<NULL>>>
              (BinaryOperator 0xac25578 'int' '+'
                (ImplicitCastExpr 0xac25558 'int' <IntegralCast>
                  (BinaryOperator 0xac25518 '_Bool' '<='
                    (IntegerLiteral 0xac242b0 'int' 2)
                    (ImplicitCastExpr 0xac25508 'int' <LValueToRValue>
                      (DeclRefExpr 0xac254f0 'int' lvalue Var 0xac240d0 '____localvar____10' 'int'))))
                (ImplicitCastExpr 0xac25568 'int' <IntegralCast>
                  (BinaryOperator 0xac25540 '_Bool' '<='
                    (ImplicitCastExpr 0xac25530 'int' <LValueToRValue>
                      (DeclRefExpr 0xac254f0 'int' lvalue Var 0xac240d0 '____localvar____10' 'int'))
                    (IntegerLiteral 0xac242c8 'int' 3))))
              (GotoStmt 0xac25590 '____label____29':0xac254b0)
              (IfStmt 0xac25650
                <<<NULL>>>
                (BinaryOperator 0xac25628 '_Bool' '=='
                  (ImplicitCastExpr 0xac25618 'int' <LValueToRValue>
                    (DeclRefExpr 0xac25600 'int' lvalue Var 0xac240d0 '____localvar____10' 'int'))
                  (IntegerLiteral 0xac241f8 'int' 0))
                (GotoStmt 0xac25640 '____label____30':0xac255c0)
                (GotoStmt 0xac25670 '____label____25':0xac25280))))))
      (CompoundStmt 0xac24610
        (LabelStmt 0xac24ec0 '____label____15'
          (CompoundStmt 0xac25010
            (NullStmt 0xac25000)
            (LabelStmt 0xac24f00 '____label____16'
              (IfStmt 0xac24fe0
                <<<NULL>>>
                (CXXBoolLiteralExpr 0xac24fb8 '_Bool' true)
                (CompoundStmt 0xac24fc8
                  (CompoundStmt 0xac241c0)
                  (LabelStmt 0xac24f40 '____label____17'
                    (CompoundStmt 0xac24fa0
                      (GotoStmt 0xac24f90 '____label____16':0xac24ed0))))
                <<<NULL>>>))
            (LabelStmt 0xac24f80 '____label____18'
              (NullStmt 0xac24f70))))
        (LabelStmt 0xac255f0 '____label____30'
          (LabelStmt 0xac242a0 'LBL_IN_CASE'
            (BinaryOperator 0xac24260 'int' lvalue '='
              (DeclRefExpr 0xac24230 'int' lvalue Var 0xac240d0 '____localvar____10' 'int')
              (IntegerLiteral 0xac24248 'int' 2))))
        (LabelStmt 0xac24330 'LBL_BEFORE_CASE'
          (LabelStmt 0xac254e0 '____label____29'
            (GotoStmt 0xac256a0 '____label____24':0xac25240)))
        (IfStmt 0xac24430
          <<<NULL>>>
          (BinaryOperator 0xac24380 '_Bool' '=='
            (ImplicitCastExpr 0xac24370 'int' <LValueToRValue>
              (DeclRefExpr 0xac24340 'int' lvalue Var 0xac240d0 '____localvar____10' 'int'))
            (IntegerLiteral 0xac24358 'int' 3))
          (CompoundStmt 0xac24418
            (LabelStmt 0xac25060 '____label____19'
              (CompoundStmt 0xac251c0
                (NullStmt 0xac251b0)
                (LabelStmt 0xac250a0 '____label____20'
                  (IfStmt 0xac25190
                    <<<NULL>>>
                    (CXXBoolLiteralExpr 0xac25168 '_Bool' true)
                    (CompoundStmt 0xac25178
                      (CompoundStmt 0xac243d8
                        (LabelStmt 0xac25430 '____label____28'
                          (GotoStmt 0xac25130 '____label____22':0xac250f0)))
                      (LabelStmt 0xac250e0 '____label____21'
                        (CompoundStmt 0xac25150
                          (GotoStmt 0xac25140 '____label____20':0xac25070))))
                    <<<NULL>>>))
                (LabelStmt 0xac25120 '____label____22'
                  (NullStmt 0xac25110)))))
          <<<NULL>>>)
        (LabelStmt 0xac25380 '____label____27'
          (BinaryOperator 0xac244f8 'int' lvalue '='
            (DeclRefExpr 0xac24488 'int' lvalue Var 0xac23fa0 '____localvar____8' 'int')
            (BinaryOperator 0xac244e0 'int' '-'
              (ImplicitCastExpr 0xac244d0 'int' <LValueToRValue>
                (DeclRefExpr 0xac244a0 'int' lvalue Var 0xac23fa0 '____localvar____8' 'int'))
              (IntegerLiteral 0xac244b8 'int' 2))))
        (BinaryOperator 0xac24540 'int' lvalue '='
          (DeclRefExpr 0xac24510 'int' lvalue Var 0xac240d0 '____localvar____10' 'int')
          (IntegerLiteral 0xac24528 'int' 3))
        (GotoStmt 0xac25690 '____label____24':0xac25240)
        (LabelStmt 0xac252f0 '____label____26'
          (NullStmt 0xac24598))
        (LabelStmt 0xac252b0 '____label____25'
          (GotoStmt 0xac245a8 'LBL_BEFORE_CASE':0xac24310))
        (LabelStmt 0xac24600 'LBL_BEFORE_BREAK'
          (GotoStmt 0xac25680 '____label____24':0xac25240)))
      (LabelStmt 0xac25270 '____label____24'
        (NullStmt 0xac25260))))
  (ReturnStmt 0xac24660
    (IntegerLiteral 0xac24648 'int' 0)))
{
    assign_cond();
    int ____localvar____7 = 1, ____localvar____8 = ____localvar____7 * 2;
    int ____localvar____9 = 0;
  ____label____23:
    {
        int ____localvar____10 = ____localvar____7 * ____localvar____8;
        if (____localvar____10 == 5)
            goto ____label____26;
        else if (____localvar____10 == 4)
            goto ____label____27;
        else if (____localvar____10 == 6)
            goto ____label____28;
        else if (2 <= ____localvar____10 + ____localvar____10 <= 3)
            goto ____label____29;
        else if (____localvar____10 == 0)
            goto ____label____30;
        else
            goto ____label____25;
        {
          ____label____15:
            {
                ;
              ____label____16:
                if (true) {
                    {
                    }
                  ____label____17:
                    {
                        goto ____label____16;
                    }
                }
              ____label____18:
                ;
            }
          ____label____30:
          LBL_IN_CASE:
            ____localvar____10 = 2;
          LBL_BEFORE_CASE:
          ____label____29:
            goto ____label____24;
            if (____localvar____10 == 3) {
              ____label____19:
                {
                    ;
                  ____label____20:
                    if (true) {
                        {
                          ____label____28:
                            goto ____label____22;
                        }
                      ____label____21:
                        {
                            goto ____label____20;
                        }
                    }
                  ____label____22:
                    ;
                }
            }
          ____label____27:
            ____localvar____8 = ____localvar____8 - 2;
            ____localvar____10 = 3;
            goto ____label____24;
          ____label____26:
            ;
          ____label____25:
            goto LBL_BEFORE_CASE;
          LBL_BEFORE_BREAK:
            goto ____label____24;
        }
      ____label____24:
        ;
    }
    return 0;
}
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt CallExpr ( 180502280 -> p 180504176 )
(CallExpr 0xac23f08 'void'
  (ImplicitCastExpr 0xac23ef8 'void (*)(void)' <FunctionToPointerDecay>
    (DeclRefExpr 0xac23ec4 'void (void)' lvalue Function 0xac23050 'assign_cond' 'void (void)')))
assign_cond();
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt ImplicitCastExpr ( 180502264 -> p 180502280 )
(ImplicitCastExpr 0xac23ef8 'void (*)(void)' <FunctionToPointerDecay>
  (DeclRefExpr 0xac23ec4 'void (void)' lvalue Function 0xac23050 'assign_cond' 'void (void)'))
assign_cond;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt DeclRefExpr ( 180502212 -> p 180502264 )
(DeclRefExpr 0xac23ec4 'void (void)' lvalue Function 0xac23050 'assign_cond' 'void (void)')
assign_cond;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt DeclStmt ( 180502584 -> p 180504176 )
(DeclStmt 0xac24038
  0xac23f40 "int ____localvar____7 =
    (IntegerLiteral 0xac23f70 'int' 1)"
  0xac23fa0 "int ____localvar____8 =
    (BinaryOperator 0xac24010 'int' '*'
      (ImplicitCastExpr 0xac24000 'int' <LValueToRValue>
        (DeclRefExpr 0xac23fd0 'int' lvalue Var 0xac23f40 '____localvar____7' 'int'))
      (IntegerLiteral 0xac23fe8 'int' 2))")
int ____localvar____7 = 1, ____localvar____8 = ____localvar____7 * 2;
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt IntegerLiteral ( 180502384 -> p 180502584 )
(IntegerLiteral 0xac23f70 'int' 1)
1;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt BinaryOperator ( 180502544 -> p 180502584 )
(BinaryOperator 0xac24010 'int' '*'
  (ImplicitCastExpr 0xac24000 'int' <LValueToRValue>
    (DeclRefExpr 0xac23fd0 'int' lvalue Var 0xac23f40 '____localvar____7' 'int'))
  (IntegerLiteral 0xac23fe8 'int' 2))
____localvar____7 * 2;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt ImplicitCastExpr ( 180502528 -> p 180502544 )
(ImplicitCastExpr 0xac24000 'int' <LValueToRValue>
  (DeclRefExpr 0xac23fd0 'int' lvalue Var 0xac23f40 '____localvar____7' 'int'))
____localvar____7;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt DeclRefExpr ( 180502480 -> p 180502528 )
(DeclRefExpr 0xac23fd0 'int' lvalue Var 0xac23f40 '____localvar____7' 'int')
____localvar____7;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt IntegerLiteral ( 180502504 -> p 180502544 )
(IntegerLiteral 0xac23fe8 'int' 2)
2;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt DeclStmt ( 180502696 -> p 180504176 )
(DeclStmt 0xac240a8
  0xac24060 "int ____localvar____9 =
    (IntegerLiteral 0xac24090 'int' 0)")
int ____localvar____9 = 0;
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt IntegerLiteral ( 180502672 -> p 180502696 )
(IntegerLiteral 0xac24090 'int' 0)
0;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt LabelStmt ( 180507152 -> p 180504176 )
(LabelStmt 0xac25210 '____label____23'
  (CompoundStmt 0xac256b0
    (DeclStmt 0xac241b0
      0xac240d0 "int ____localvar____10 =
        (BinaryOperator 0xac24150 'int' '*'
          (ImplicitCastExpr 0xac24130 'int' <LValueToRValue>
            (DeclRefExpr 0xac24100 'int' lvalue Var 0xac23f40 '____localvar____7' 'int'))
          (ImplicitCastExpr 0xac24140 'int' <LValueToRValue>
            (DeclRefExpr 0xac24118 'int' lvalue Var 0xac23fa0 '____localvar____8' 'int')))")
    (IfStmt 0xac25220
      <<<NULL>>>
      (BinaryOperator 0xac25328 '_Bool' '=='
        (ImplicitCastExpr 0xac25318 'int' <LValueToRValue>
          (DeclRefExpr 0xac25300 'int' lvalue Var 0xac240d0 '____localvar____10' 'int'))
        (IntegerLiteral 0xac24560 'int' 5))
      (GotoStmt 0xac25340 '____label____26':0xac252c0)
      (IfStmt 0xac253e0
        <<<NULL>>>
        (BinaryOperator 0xac253b8 '_Bool' '=='
          (ImplicitCastExpr 0xac253a8 'int' <LValueToRValue>
            (DeclRefExpr 0xac25390 'int' lvalue Var 0xac240d0 '____localvar____10' 'int'))
          (IntegerLiteral 0xac24450 'int' 4))
        (GotoStmt 0xac253d0 '____label____27':0xac25350)
        (IfStmt 0xac25490
          <<<NULL>>>
          (BinaryOperator 0xac25468 '_Bool' '=='
            (ImplicitCastExpr 0xac25458 'int' <LValueToRValue>
              (DeclRefExpr 0xac25440 'int' lvalue Var 0xac240d0 '____localvar____10' 'int'))
            (IntegerLiteral 0xac24398 'int' 6))
          (GotoStmt 0xac25480 '____label____28':0xac25400)
          (IfStmt 0xac255a0
            <<<NULL>>>
            (BinaryOperator 0xac25578 'int' '+'
              (ImplicitCastExpr 0xac25558 'int' <IntegralCast>
                (BinaryOperator 0xac25518 '_Bool' '<='
                  (IntegerLiteral 0xac242b0 'int' 2)
                  (ImplicitCastExpr 0xac25508 'int' <LValueToRValue>
                    (DeclRefExpr 0xac254f0 'int' lvalue Var 0xac240d0 '____localvar____10' 'int'))))
              (ImplicitCastExpr 0xac25568 'int' <IntegralCast>
                (BinaryOperator 0xac25540 '_Bool' '<='
                  (ImplicitCastExpr 0xac25530 'int' <LValueToRValue>
                    (DeclRefExpr 0xac254f0 'int' lvalue Var 0xac240d0 '____localvar____10' 'int'))
                  (IntegerLiteral 0xac242c8 'int' 3))))
            (GotoStmt 0xac25590 '____label____29':0xac254b0)
            (IfStmt 0xac25650
              <<<NULL>>>
              (BinaryOperator 0xac25628 '_Bool' '=='
                (ImplicitCastExpr 0xac25618 'int' <LValueToRValue>
                  (DeclRefExpr 0xac25600 'int' lvalue Var 0xac240d0 '____localvar____10' 'int'))
                (IntegerLiteral 0xac241f8 'int' 0))
              (GotoStmt 0xac25640 '____label____30':0xac255c0)
              (GotoStmt 0xac25670 '____label____25':0xac25280))))))
    (CompoundStmt 0xac24610
      (LabelStmt 0xac24ec0 '____label____15'
        (CompoundStmt 0xac25010
          (NullStmt 0xac25000)
          (LabelStmt 0xac24f00 '____label____16'
            (IfStmt 0xac24fe0
              <<<NULL>>>
              (CXXBoolLiteralExpr 0xac24fb8 '_Bool' true)
              (CompoundStmt 0xac24fc8
                (CompoundStmt 0xac241c0)
                (LabelStmt 0xac24f40 '____label____17'
                  (CompoundStmt 0xac24fa0
                    (GotoStmt 0xac24f90 '____label____16':0xac24ed0))))
              <<<NULL>>>))
          (LabelStmt 0xac24f80 '____label____18'
            (NullStmt 0xac24f70))))
      (LabelStmt 0xac255f0 '____label____30'
        (LabelStmt 0xac242a0 'LBL_IN_CASE'
          (BinaryOperator 0xac24260 'int' lvalue '='
            (DeclRefExpr 0xac24230 'int' lvalue Var 0xac240d0 '____localvar____10' 'int')
            (IntegerLiteral 0xac24248 'int' 2))))
      (LabelStmt 0xac24330 'LBL_BEFORE_CASE'
        (LabelStmt 0xac254e0 '____label____29'
          (GotoStmt 0xac256a0 '____label____24':0xac25240)))
      (IfStmt 0xac24430
        <<<NULL>>>
        (BinaryOperator 0xac24380 '_Bool' '=='
          (ImplicitCastExpr 0xac24370 'int' <LValueToRValue>
            (DeclRefExpr 0xac24340 'int' lvalue Var 0xac240d0 '____localvar____10' 'int'))
          (IntegerLiteral 0xac24358 'int' 3))
        (CompoundStmt 0xac24418
          (LabelStmt 0xac25060 '____label____19'
            (CompoundStmt 0xac251c0
              (NullStmt 0xac251b0)
              (LabelStmt 0xac250a0 '____label____20'
                (IfStmt 0xac25190
                  <<<NULL>>>
                  (CXXBoolLiteralExpr 0xac25168 '_Bool' true)
                  (CompoundStmt 0xac25178
                    (CompoundStmt 0xac243d8
                      (LabelStmt 0xac25430 '____label____28'
                        (GotoStmt 0xac25130 '____label____22':0xac250f0)))
                    (LabelStmt 0xac250e0 '____label____21'
                      (CompoundStmt 0xac25150
                        (GotoStmt 0xac25140 '____label____20':0xac25070))))
                  <<<NULL>>>))
              (LabelStmt 0xac25120 '____label____22'
                (NullStmt 0xac25110)))))
        <<<NULL>>>)
      (LabelStmt 0xac25380 '____label____27'
        (BinaryOperator 0xac244f8 'int' lvalue '='
          (DeclRefExpr 0xac24488 'int' lvalue Var 0xac23fa0 '____localvar____8' 'int')
          (BinaryOperator 0xac244e0 'int' '-'
            (ImplicitCastExpr 0xac244d0 'int' <LValueToRValue>
              (DeclRefExpr 0xac244a0 'int' lvalue Var 0xac23fa0 '____localvar____8' 'int'))
            (IntegerLiteral 0xac244b8 'int' 2))))
      (BinaryOperator 0xac24540 'int' lvalue '='
        (DeclRefExpr 0xac24510 'int' lvalue Var 0xac240d0 '____localvar____10' 'int')
        (IntegerLiteral 0xac24528 'int' 3))
      (GotoStmt 0xac25690 '____label____24':0xac25240)
      (LabelStmt 0xac252f0 '____label____26'
        (NullStmt 0xac24598))
      (LabelStmt 0xac252b0 '____label____25'
        (GotoStmt 0xac245a8 'LBL_BEFORE_CASE':0xac24310))
      (LabelStmt 0xac24600 'LBL_BEFORE_BREAK'
        (GotoStmt 0xac25680 '____label____24':0xac25240)))
    (LabelStmt 0xac25270 '____label____24'
      (NullStmt 0xac25260))))
____label____23:
{
    int ____localvar____10 = ____localvar____7 * ____localvar____8;
    if (____localvar____10 == 5)
        goto ____label____26;
    else if (____localvar____10 == 4)
        goto ____label____27;
    else if (____localvar____10 == 6)
        goto ____label____28;
    else if (2 <= ____localvar____10 + ____localvar____10 <= 3)
        goto ____label____29;
    else if (____localvar____10 == 0)
        goto ____label____30;
    else
        goto ____label____25;
    {
      ____label____15:
        {
            ;
          ____label____16:
            if (true) {
                {
                }
              ____label____17:
                {
                    goto ____label____16;
                }
            }
          ____label____18:
            ;
        }
      ____label____30:
      LBL_IN_CASE:
        ____localvar____10 = 2;
      LBL_BEFORE_CASE:
      ____label____29:
        goto ____label____24;
        if (____localvar____10 == 3) {
          ____label____19:
            {
                ;
              ____label____20:
                if (true) {
                    {
                      ____label____28:
                        goto ____label____22;
                    }
                  ____label____21:
                    {
                        goto ____label____20;
                    }
                }
              ____label____22:
                ;
            }
        }
      ____label____27:
        ____localvar____8 = ____localvar____8 - 2;
        ____localvar____10 = 3;
        goto ____label____24;
      ____label____26:
        ;
      ____label____25:
        goto LBL_BEFORE_CASE;
      LBL_BEFORE_BREAK:
        goto ____label____24;
    }
  ____label____24:
    ;
}
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt CompoundStmt ( 180508336 -> p 180507152 )
(CompoundStmt 0xac256b0
  (DeclStmt 0xac241b0
    0xac240d0 "int ____localvar____10 =
      (BinaryOperator 0xac24150 'int' '*'
        (ImplicitCastExpr 0xac24130 'int' <LValueToRValue>
          (DeclRefExpr 0xac24100 'int' lvalue Var 0xac23f40 '____localvar____7' 'int'))
        (ImplicitCastExpr 0xac24140 'int' <LValueToRValue>
          (DeclRefExpr 0xac24118 'int' lvalue Var 0xac23fa0 '____localvar____8' 'int')))")
  (IfStmt 0xac25220
    <<<NULL>>>
    (BinaryOperator 0xac25328 '_Bool' '=='
      (ImplicitCastExpr 0xac25318 'int' <LValueToRValue>
        (DeclRefExpr 0xac25300 'int' lvalue Var 0xac240d0 '____localvar____10' 'int'))
      (IntegerLiteral 0xac24560 'int' 5))
    (GotoStmt 0xac25340 '____label____26':0xac252c0)
    (IfStmt 0xac253e0
      <<<NULL>>>
      (BinaryOperator 0xac253b8 '_Bool' '=='
        (ImplicitCastExpr 0xac253a8 'int' <LValueToRValue>
          (DeclRefExpr 0xac25390 'int' lvalue Var 0xac240d0 '____localvar____10' 'int'))
        (IntegerLiteral 0xac24450 'int' 4))
      (GotoStmt 0xac253d0 '____label____27':0xac25350)
      (IfStmt 0xac25490
        <<<NULL>>>
        (BinaryOperator 0xac25468 '_Bool' '=='
          (ImplicitCastExpr 0xac25458 'int' <LValueToRValue>
            (DeclRefExpr 0xac25440 'int' lvalue Var 0xac240d0 '____localvar____10' 'int'))
          (IntegerLiteral 0xac24398 'int' 6))
        (GotoStmt 0xac25480 '____label____28':0xac25400)
        (IfStmt 0xac255a0
          <<<NULL>>>
          (BinaryOperator 0xac25578 'int' '+'
            (ImplicitCastExpr 0xac25558 'int' <IntegralCast>
              (BinaryOperator 0xac25518 '_Bool' '<='
                (IntegerLiteral 0xac242b0 'int' 2)
                (ImplicitCastExpr 0xac25508 'int' <LValueToRValue>
                  (DeclRefExpr 0xac254f0 'int' lvalue Var 0xac240d0 '____localvar____10' 'int'))))
            (ImplicitCastExpr 0xac25568 'int' <IntegralCast>
              (BinaryOperator 0xac25540 '_Bool' '<='
                (ImplicitCastExpr 0xac25530 'int' <LValueToRValue>
                  (DeclRefExpr 0xac254f0 'int' lvalue Var 0xac240d0 '____localvar____10' 'int'))
                (IntegerLiteral 0xac242c8 'int' 3))))
          (GotoStmt 0xac25590 '____label____29':0xac254b0)
          (IfStmt 0xac25650
            <<<NULL>>>
            (BinaryOperator 0xac25628 '_Bool' '=='
              (ImplicitCastExpr 0xac25618 'int' <LValueToRValue>
                (DeclRefExpr 0xac25600 'int' lvalue Var 0xac240d0 '____localvar____10' 'int'))
              (IntegerLiteral 0xac241f8 'int' 0))
            (GotoStmt 0xac25640 '____label____30':0xac255c0)
            (GotoStmt 0xac25670 '____label____25':0xac25280))))))
  (CompoundStmt 0xac24610
    (LabelStmt 0xac24ec0 '____label____15'
      (CompoundStmt 0xac25010
        (NullStmt 0xac25000)
        (LabelStmt 0xac24f00 '____label____16'
          (IfStmt 0xac24fe0
            <<<NULL>>>
            (CXXBoolLiteralExpr 0xac24fb8 '_Bool' true)
            (CompoundStmt 0xac24fc8
              (CompoundStmt 0xac241c0)
              (LabelStmt 0xac24f40 '____label____17'
                (CompoundStmt 0xac24fa0
                  (GotoStmt 0xac24f90 '____label____16':0xac24ed0))))
            <<<NULL>>>))
        (LabelStmt 0xac24f80 '____label____18'
          (NullStmt 0xac24f70))))
    (LabelStmt 0xac255f0 '____label____30'
      (LabelStmt 0xac242a0 'LBL_IN_CASE'
        (BinaryOperator 0xac24260 'int' lvalue '='
          (DeclRefExpr 0xac24230 'int' lvalue Var 0xac240d0 '____localvar____10' 'int')
          (IntegerLiteral 0xac24248 'int' 2))))
    (LabelStmt 0xac24330 'LBL_BEFORE_CASE'
      (LabelStmt 0xac254e0 '____label____29'
        (GotoStmt 0xac256a0 '____label____24':0xac25240)))
    (IfStmt 0xac24430
      <<<NULL>>>
      (BinaryOperator 0xac24380 '_Bool' '=='
        (ImplicitCastExpr 0xac24370 'int' <LValueToRValue>
          (DeclRefExpr 0xac24340 'int' lvalue Var 0xac240d0 '____localvar____10' 'int'))
        (IntegerLiteral 0xac24358 'int' 3))
      (CompoundStmt 0xac24418
        (LabelStmt 0xac25060 '____label____19'
          (CompoundStmt 0xac251c0
            (NullStmt 0xac251b0)
            (LabelStmt 0xac250a0 '____label____20'
              (IfStmt 0xac25190
                <<<NULL>>>
                (CXXBoolLiteralExpr 0xac25168 '_Bool' true)
                (CompoundStmt 0xac25178
                  (CompoundStmt 0xac243d8
                    (LabelStmt 0xac25430 '____label____28'
                      (GotoStmt 0xac25130 '____label____22':0xac250f0)))
                  (LabelStmt 0xac250e0 '____label____21'
                    (CompoundStmt 0xac25150
                      (GotoStmt 0xac25140 '____label____20':0xac25070))))
                <<<NULL>>>))
            (LabelStmt 0xac25120 '____label____22'
              (NullStmt 0xac25110)))))
      <<<NULL>>>)
    (LabelStmt 0xac25380 '____label____27'
      (BinaryOperator 0xac244f8 'int' lvalue '='
        (DeclRefExpr 0xac24488 'int' lvalue Var 0xac23fa0 '____localvar____8' 'int')
        (BinaryOperator 0xac244e0 'int' '-'
          (ImplicitCastExpr 0xac244d0 'int' <LValueToRValue>
            (DeclRefExpr 0xac244a0 'int' lvalue Var 0xac23fa0 '____localvar____8' 'int'))
          (IntegerLiteral 0xac244b8 'int' 2))))
    (BinaryOperator 0xac24540 'int' lvalue '='
      (DeclRefExpr 0xac24510 'int' lvalue Var 0xac240d0 '____localvar____10' 'int')
      (IntegerLiteral 0xac24528 'int' 3))
    (GotoStmt 0xac25690 '____label____24':0xac25240)
    (LabelStmt 0xac252f0 '____label____26'
      (NullStmt 0xac24598))
    (LabelStmt 0xac252b0 '____label____25'
      (GotoStmt 0xac245a8 'LBL_BEFORE_CASE':0xac24310))
    (LabelStmt 0xac24600 'LBL_BEFORE_BREAK'
      (GotoStmt 0xac25680 '____label____24':0xac25240)))
  (LabelStmt 0xac25270 '____label____24'
    (NullStmt 0xac25260)))
{
    int ____localvar____10 = ____localvar____7 * ____localvar____8;
    if (____localvar____10 == 5)
        goto ____label____26;
    else if (____localvar____10 == 4)
        goto ____label____27;
    else if (____localvar____10 == 6)
        goto ____label____28;
    else if (2 <= ____localvar____10 + ____localvar____10 <= 3)
        goto ____label____29;
    else if (____localvar____10 == 0)
        goto ____label____30;
    else
        goto ____label____25;
    {
      ____label____15:
        {
            ;
          ____label____16:
            if (true) {
                {
                }
              ____label____17:
                {
                    goto ____label____16;
                }
            }
          ____label____18:
            ;
        }
      ____label____30:
      LBL_IN_CASE:
        ____localvar____10 = 2;
      LBL_BEFORE_CASE:
      ____label____29:
        goto ____label____24;
        if (____localvar____10 == 3) {
          ____label____19:
            {
                ;
              ____label____20:
                if (true) {
                    {
                      ____label____28:
                        goto ____label____22;
                    }
                  ____label____21:
                    {
                        goto ____label____20;
                    }
                }
              ____label____22:
                ;
            }
        }
      ____label____27:
        ____localvar____8 = ____localvar____8 - 2;
        ____localvar____10 = 3;
        goto ____label____24;
      ____label____26:
        ;
      ____label____25:
        goto LBL_BEFORE_CASE;
      LBL_BEFORE_BREAK:
        goto ____label____24;
    }
  ____label____24:
    ;
}
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt DeclStmt ( 180502960 -> p 180508336 )
(DeclStmt 0xac241b0
  0xac240d0 "int ____localvar____10 =
    (BinaryOperator 0xac24150 'int' '*'
      (ImplicitCastExpr 0xac24130 'int' <LValueToRValue>
        (DeclRefExpr 0xac24100 'int' lvalue Var 0xac23f40 '____localvar____7' 'int'))
      (ImplicitCastExpr 0xac24140 'int' <LValueToRValue>
        (DeclRefExpr 0xac24118 'int' lvalue Var 0xac23fa0 '____localvar____8' 'int')))")
int ____localvar____10 = ____localvar____7 * ____localvar____8;
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt BinaryOperator ( 180502864 -> p 180502960 )
(BinaryOperator 0xac24150 'int' '*'
  (ImplicitCastExpr 0xac24130 'int' <LValueToRValue>
    (DeclRefExpr 0xac24100 'int' lvalue Var 0xac23f40 '____localvar____7' 'int'))
  (ImplicitCastExpr 0xac24140 'int' <LValueToRValue>
    (DeclRefExpr 0xac24118 'int' lvalue Var 0xac23fa0 '____localvar____8' 'int')))
____localvar____7 * ____localvar____8;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt ImplicitCastExpr ( 180502832 -> p 180502864 )
(ImplicitCastExpr 0xac24130 'int' <LValueToRValue>
  (DeclRefExpr 0xac24100 'int' lvalue Var 0xac23f40 '____localvar____7' 'int'))
____localvar____7;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt DeclRefExpr ( 180502784 -> p 180502832 )
(DeclRefExpr 0xac24100 'int' lvalue Var 0xac23f40 '____localvar____7' 'int')
____localvar____7;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt ImplicitCastExpr ( 180502848 -> p 180502864 )
(ImplicitCastExpr 0xac24140 'int' <LValueToRValue>
  (DeclRefExpr 0xac24118 'int' lvalue Var 0xac23fa0 '____localvar____8' 'int'))
____localvar____8;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt DeclRefExpr ( 180502808 -> p 180502848 )
(DeclRefExpr 0xac24118 'int' lvalue Var 0xac23fa0 '____localvar____8' 'int')
____localvar____8;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt IfStmt ( 180507168 -> p 180508336 )
(IfStmt 0xac25220
  <<<NULL>>>
  (BinaryOperator 0xac25328 '_Bool' '=='
    (ImplicitCastExpr 0xac25318 'int' <LValueToRValue>
      (DeclRefExpr 0xac25300 'int' lvalue Var 0xac240d0 '____localvar____10' 'int'))
    (IntegerLiteral 0xac24560 'int' 5))
  (GotoStmt 0xac25340 '____label____26':0xac252c0)
  (IfStmt 0xac253e0
    <<<NULL>>>
    (BinaryOperator 0xac253b8 '_Bool' '=='
      (ImplicitCastExpr 0xac253a8 'int' <LValueToRValue>
        (DeclRefExpr 0xac25390 'int' lvalue Var 0xac240d0 '____localvar____10' 'int'))
      (IntegerLiteral 0xac24450 'int' 4))
    (GotoStmt 0xac253d0 '____label____27':0xac25350)
    (IfStmt 0xac25490
      <<<NULL>>>
      (BinaryOperator 0xac25468 '_Bool' '=='
        (ImplicitCastExpr 0xac25458 'int' <LValueToRValue>
          (DeclRefExpr 0xac25440 'int' lvalue Var 0xac240d0 '____localvar____10' 'int'))
        (IntegerLiteral 0xac24398 'int' 6))
      (GotoStmt 0xac25480 '____label____28':0xac25400)
      (IfStmt 0xac255a0
        <<<NULL>>>
        (BinaryOperator 0xac25578 'int' '+'
          (ImplicitCastExpr 0xac25558 'int' <IntegralCast>
            (BinaryOperator 0xac25518 '_Bool' '<='
              (IntegerLiteral 0xac242b0 'int' 2)
              (ImplicitCastExpr 0xac25508 'int' <LValueToRValue>
                (DeclRefExpr 0xac254f0 'int' lvalue Var 0xac240d0 '____localvar____10' 'int'))))
          (ImplicitCastExpr 0xac25568 'int' <IntegralCast>
            (BinaryOperator 0xac25540 '_Bool' '<='
              (ImplicitCastExpr 0xac25530 'int' <LValueToRValue>
                (DeclRefExpr 0xac254f0 'int' lvalue Var 0xac240d0 '____localvar____10' 'int'))
              (IntegerLiteral 0xac242c8 'int' 3))))
        (GotoStmt 0xac25590 '____label____29':0xac254b0)
        (IfStmt 0xac25650
          <<<NULL>>>
          (BinaryOperator 0xac25628 '_Bool' '=='
            (ImplicitCastExpr 0xac25618 'int' <LValueToRValue>
              (DeclRefExpr 0xac25600 'int' lvalue Var 0xac240d0 '____localvar____10' 'int'))
            (IntegerLiteral 0xac241f8 'int' 0))
          (GotoStmt 0xac25640 '____label____30':0xac255c0)
          (GotoStmt 0xac25670 '____label____25':0xac25280))))))
if (____localvar____10 == 5)
    goto ____label____26;
else if (____localvar____10 == 4)
    goto ____label____27;
else if (____localvar____10 == 6)
    goto ____label____28;
else if (2 <= ____localvar____10 + ____localvar____10 <= 3)
    goto ____label____29;
else if (____localvar____10 == 0)
    goto ____label____30;
else
    goto ____label____25;
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt BinaryOperator ( 180507432 -> p 180507168 )
(BinaryOperator 0xac25328 '_Bool' '=='
  (ImplicitCastExpr 0xac25318 'int' <LValueToRValue>
    (DeclRefExpr 0xac25300 'int' lvalue Var 0xac240d0 '____localvar____10' 'int'))
  (IntegerLiteral 0xac24560 'int' 5))
____localvar____10 == 5;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt ImplicitCastExpr ( 180507416 -> p 180507432 )
(ImplicitCastExpr 0xac25318 'int' <LValueToRValue>
  (DeclRefExpr 0xac25300 'int' lvalue Var 0xac240d0 '____localvar____10' 'int'))
____localvar____10;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt DeclRefExpr ( 180507392 -> p 180507416 )
(DeclRefExpr 0xac25300 'int' lvalue Var 0xac240d0 '____localvar____10' 'int')
____localvar____10;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt IntegerLiteral ( 180503904 -> p 180507432 )
(IntegerLiteral 0xac24560 'int' 5)
5;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt GotoStmt ( 180507456 -> p 180507168 )
(GotoStmt 0xac25340 '____label____26':0xac252c0)
goto ____label____26;
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt IfStmt ( 180507616 -> p 180507168 )
(IfStmt 0xac253e0
  <<<NULL>>>
  (BinaryOperator 0xac253b8 '_Bool' '=='
    (ImplicitCastExpr 0xac253a8 'int' <LValueToRValue>
      (DeclRefExpr 0xac25390 'int' lvalue Var 0xac240d0 '____localvar____10' 'int'))
    (IntegerLiteral 0xac24450 'int' 4))
  (GotoStmt 0xac253d0 '____label____27':0xac25350)
  (IfStmt 0xac25490
    <<<NULL>>>
    (BinaryOperator 0xac25468 '_Bool' '=='
      (ImplicitCastExpr 0xac25458 'int' <LValueToRValue>
        (DeclRefExpr 0xac25440 'int' lvalue Var 0xac240d0 '____localvar____10' 'int'))
      (IntegerLiteral 0xac24398 'int' 6))
    (GotoStmt 0xac25480 '____label____28':0xac25400)
    (IfStmt 0xac255a0
      <<<NULL>>>
      (BinaryOperator 0xac25578 'int' '+'
        (ImplicitCastExpr 0xac25558 'int' <IntegralCast>
          (BinaryOperator 0xac25518 '_Bool' '<='
            (IntegerLiteral 0xac242b0 'int' 2)
            (ImplicitCastExpr 0xac25508 'int' <LValueToRValue>
              (DeclRefExpr 0xac254f0 'int' lvalue Var 0xac240d0 '____localvar____10' 'int'))))
        (ImplicitCastExpr 0xac25568 'int' <IntegralCast>
          (BinaryOperator 0xac25540 '_Bool' '<='
            (ImplicitCastExpr 0xac25530 'int' <LValueToRValue>
              (DeclRefExpr 0xac254f0 'int' lvalue Var 0xac240d0 '____localvar____10' 'int'))
            (IntegerLiteral 0xac242c8 'int' 3))))
      (GotoStmt 0xac25590 '____label____29':0xac254b0)
      (IfStmt 0xac25650
        <<<NULL>>>
        (BinaryOperator 0xac25628 '_Bool' '=='
          (ImplicitCastExpr 0xac25618 'int' <LValueToRValue>
            (DeclRefExpr 0xac25600 'int' lvalue Var 0xac240d0 '____localvar____10' 'int'))
          (IntegerLiteral 0xac241f8 'int' 0))
        (GotoStmt 0xac25640 '____label____30':0xac255c0)
        (GotoStmt 0xac25670 '____label____25':0xac25280)))))
if (____localvar____10 == 4)
    goto ____label____27;
else if (____localvar____10 == 6)
    goto ____label____28;
else if (2 <= ____localvar____10 + ____localvar____10 <= 3)
    goto ____label____29;
else if (____localvar____10 == 0)
    goto ____label____30;
else
    goto ____label____25;
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt BinaryOperator ( 180507576 -> p 180507616 )
(BinaryOperator 0xac253b8 '_Bool' '=='
  (ImplicitCastExpr 0xac253a8 'int' <LValueToRValue>
    (DeclRefExpr 0xac25390 'int' lvalue Var 0xac240d0 '____localvar____10' 'int'))
  (IntegerLiteral 0xac24450 'int' 4))
____localvar____10 == 4;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt ImplicitCastExpr ( 180507560 -> p 180507576 )
(ImplicitCastExpr 0xac253a8 'int' <LValueToRValue>
  (DeclRefExpr 0xac25390 'int' lvalue Var 0xac240d0 '____localvar____10' 'int'))
____localvar____10;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt DeclRefExpr ( 180507536 -> p 180507560 )
(DeclRefExpr 0xac25390 'int' lvalue Var 0xac240d0 '____localvar____10' 'int')
____localvar____10;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt IntegerLiteral ( 180503632 -> p 180507576 )
(IntegerLiteral 0xac24450 'int' 4)
4;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt GotoStmt ( 180507600 -> p 180507616 )
(GotoStmt 0xac253d0 '____label____27':0xac25350)
goto ____label____27;
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt IfStmt ( 180507792 -> p 180507616 )
(IfStmt 0xac25490
  <<<NULL>>>
  (BinaryOperator 0xac25468 '_Bool' '=='
    (ImplicitCastExpr 0xac25458 'int' <LValueToRValue>
      (DeclRefExpr 0xac25440 'int' lvalue Var 0xac240d0 '____localvar____10' 'int'))
    (IntegerLiteral 0xac24398 'int' 6))
  (GotoStmt 0xac25480 '____label____28':0xac25400)
  (IfStmt 0xac255a0
    <<<NULL>>>
    (BinaryOperator 0xac25578 'int' '+'
      (ImplicitCastExpr 0xac25558 'int' <IntegralCast>
        (BinaryOperator 0xac25518 '_Bool' '<='
          (IntegerLiteral 0xac242b0 'int' 2)
          (ImplicitCastExpr 0xac25508 'int' <LValueToRValue>
            (DeclRefExpr 0xac254f0 'int' lvalue Var 0xac240d0 '____localvar____10' 'int'))))
      (ImplicitCastExpr 0xac25568 'int' <IntegralCast>
        (BinaryOperator 0xac25540 '_Bool' '<='
          (ImplicitCastExpr 0xac25530 'int' <LValueToRValue>
            (DeclRefExpr 0xac254f0 'int' lvalue Var 0xac240d0 '____localvar____10' 'int'))
          (IntegerLiteral 0xac242c8 'int' 3))))
    (GotoStmt 0xac25590 '____label____29':0xac254b0)
    (IfStmt 0xac25650
      <<<NULL>>>
      (BinaryOperator 0xac25628 '_Bool' '=='
        (ImplicitCastExpr 0xac25618 'int' <LValueToRValue>
          (DeclRefExpr 0xac25600 'int' lvalue Var 0xac240d0 '____localvar____10' 'int'))
        (IntegerLiteral 0xac241f8 'int' 0))
      (GotoStmt 0xac25640 '____label____30':0xac255c0)
      (GotoStmt 0xac25670 '____label____25':0xac25280))))
if (____localvar____10 == 6)
    goto ____label____28;
else if (2 <= ____localvar____10 + ____localvar____10 <= 3)
    goto ____label____29;
else if (____localvar____10 == 0)
    goto ____label____30;
else
    goto ____label____25;
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt BinaryOperator ( 180507752 -> p 180507792 )
(BinaryOperator 0xac25468 '_Bool' '=='
  (ImplicitCastExpr 0xac25458 'int' <LValueToRValue>
    (DeclRefExpr 0xac25440 'int' lvalue Var 0xac240d0 '____localvar____10' 'int'))
  (IntegerLiteral 0xac24398 'int' 6))
____localvar____10 == 6;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt ImplicitCastExpr ( 180507736 -> p 180507752 )
(ImplicitCastExpr 0xac25458 'int' <LValueToRValue>
  (DeclRefExpr 0xac25440 'int' lvalue Var 0xac240d0 '____localvar____10' 'int'))
____localvar____10;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt DeclRefExpr ( 180507712 -> p 180507736 )
(DeclRefExpr 0xac25440 'int' lvalue Var 0xac240d0 '____localvar____10' 'int')
____localvar____10;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt IntegerLiteral ( 180503448 -> p 180507752 )
(IntegerLiteral 0xac24398 'int' 6)
6;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt GotoStmt ( 180507776 -> p 180507792 )
(GotoStmt 0xac25480 '____label____28':0xac25400)
goto ____label____28;
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt IfStmt ( 180508064 -> p 180507792 )
(IfStmt 0xac255a0
  <<<NULL>>>
  (BinaryOperator 0xac25578 'int' '+'
    (ImplicitCastExpr 0xac25558 'int' <IntegralCast>
      (BinaryOperator 0xac25518 '_Bool' '<='
        (IntegerLiteral 0xac242b0 'int' 2)
        (ImplicitCastExpr 0xac25508 'int' <LValueToRValue>
          (DeclRefExpr 0xac254f0 'int' lvalue Var 0xac240d0 '____localvar____10' 'int'))))
    (ImplicitCastExpr 0xac25568 'int' <IntegralCast>
      (BinaryOperator 0xac25540 '_Bool' '<='
        (ImplicitCastExpr 0xac25530 'int' <LValueToRValue>
          (DeclRefExpr 0xac254f0 'int' lvalue Var 0xac240d0 '____localvar____10' 'int'))
        (IntegerLiteral 0xac242c8 'int' 3))))
  (GotoStmt 0xac25590 '____label____29':0xac254b0)
  (IfStmt 0xac25650
    <<<NULL>>>
    (BinaryOperator 0xac25628 '_Bool' '=='
      (ImplicitCastExpr 0xac25618 'int' <LValueToRValue>
        (DeclRefExpr 0xac25600 'int' lvalue Var 0xac240d0 '____localvar____10' 'int'))
      (IntegerLiteral 0xac241f8 'int' 0))
    (GotoStmt 0xac25640 '____label____30':0xac255c0)
    (GotoStmt 0xac25670 '____label____25':0xac25280)))
if (2 <= ____localvar____10 + ____localvar____10 <= 3)
    goto ____label____29;
else if (____localvar____10 == 0)
    goto ____label____30;
else
    goto ____label____25;
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt BinaryOperator ( 180508024 -> p 180508064 )
(BinaryOperator 0xac25578 'int' '+'
  (ImplicitCastExpr 0xac25558 'int' <IntegralCast>
    (BinaryOperator 0xac25518 '_Bool' '<='
      (IntegerLiteral 0xac242b0 'int' 2)
      (ImplicitCastExpr 0xac25508 'int' <LValueToRValue>
        (DeclRefExpr 0xac254f0 'int' lvalue Var 0xac240d0 '____localvar____10' 'int'))))
  (ImplicitCastExpr 0xac25568 'int' <IntegralCast>
    (BinaryOperator 0xac25540 '_Bool' '<='
      (ImplicitCastExpr 0xac25530 'int' <LValueToRValue>
        (DeclRefExpr 0xac254f0 'int' lvalue Var 0xac240d0 '____localvar____10' 'int'))
      (IntegerLiteral 0xac242c8 'int' 3))))
2 <= ____localvar____10 + ____localvar____10 <= 3;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt ImplicitCastExpr ( 180507992 -> p 180508024 )
(ImplicitCastExpr 0xac25558 'int' <IntegralCast>
  (BinaryOperator 0xac25518 '_Bool' '<='
    (IntegerLiteral 0xac242b0 'int' 2)
    (ImplicitCastExpr 0xac25508 'int' <LValueToRValue>
      (DeclRefExpr 0xac254f0 'int' lvalue Var 0xac240d0 '____localvar____10' 'int'))))
2 <= ____localvar____10;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt BinaryOperator ( 180507928 -> p 180507992 )
(BinaryOperator 0xac25518 '_Bool' '<='
  (IntegerLiteral 0xac242b0 'int' 2)
  (ImplicitCastExpr 0xac25508 'int' <LValueToRValue>
    (DeclRefExpr 0xac254f0 'int' lvalue Var 0xac240d0 '____localvar____10' 'int')))
2 <= ____localvar____10;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt IntegerLiteral ( 180503216 -> p 180507928 )
(IntegerLiteral 0xac242b0 'int' 2)
2;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt ImplicitCastExpr ( 180507912 -> p 180507928 )
(ImplicitCastExpr 0xac25508 'int' <LValueToRValue>
  (DeclRefExpr 0xac254f0 'int' lvalue Var 0xac240d0 '____localvar____10' 'int'))
____localvar____10;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt DeclRefExpr ( 180507888 -> p 180507952 )
(DeclRefExpr 0xac254f0 'int' lvalue Var 0xac240d0 '____localvar____10' 'int')
____localvar____10;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt ImplicitCastExpr ( 180508008 -> p 180508024 )
(ImplicitCastExpr 0xac25568 'int' <IntegralCast>
  (BinaryOperator 0xac25540 '_Bool' '<='
    (ImplicitCastExpr 0xac25530 'int' <LValueToRValue>
      (DeclRefExpr 0xac254f0 'int' lvalue Var 0xac240d0 '____localvar____10' 'int'))
    (IntegerLiteral 0xac242c8 'int' 3)))
____localvar____10 <= 3;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt BinaryOperator ( 180507968 -> p 180508008 )
(BinaryOperator 0xac25540 '_Bool' '<='
  (ImplicitCastExpr 0xac25530 'int' <LValueToRValue>
    (DeclRefExpr 0xac254f0 'int' lvalue Var 0xac240d0 '____localvar____10' 'int'))
  (IntegerLiteral 0xac242c8 'int' 3))
____localvar____10 <= 3;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt ImplicitCastExpr ( 180507952 -> p 180507968 )
(ImplicitCastExpr 0xac25530 'int' <LValueToRValue>
  (DeclRefExpr 0xac254f0 'int' lvalue Var 0xac240d0 '____localvar____10' 'int'))
____localvar____10;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt DeclRefExpr ( 180507888 -> p 180507952 )
(DeclRefExpr 0xac254f0 'int' lvalue Var 0xac240d0 '____localvar____10' 'int')
____localvar____10;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt IntegerLiteral ( 180503240 -> p 180507968 )
(IntegerLiteral 0xac242c8 'int' 3)
3;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt GotoStmt ( 180508048 -> p 180508064 )
(GotoStmt 0xac25590 '____label____29':0xac254b0)
goto ____label____29;
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt IfStmt ( 180508240 -> p 180508064 )
(IfStmt 0xac25650
  <<<NULL>>>
  (BinaryOperator 0xac25628 '_Bool' '=='
    (ImplicitCastExpr 0xac25618 'int' <LValueToRValue>
      (DeclRefExpr 0xac25600 'int' lvalue Var 0xac240d0 '____localvar____10' 'int'))
    (IntegerLiteral 0xac241f8 'int' 0))
  (GotoStmt 0xac25640 '____label____30':0xac255c0)
  (GotoStmt 0xac25670 '____label____25':0xac25280))
if (____localvar____10 == 0)
    goto ____label____30;
else
    goto ____label____25;
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt BinaryOperator ( 180508200 -> p 180508240 )
(BinaryOperator 0xac25628 '_Bool' '=='
  (ImplicitCastExpr 0xac25618 'int' <LValueToRValue>
    (DeclRefExpr 0xac25600 'int' lvalue Var 0xac240d0 '____localvar____10' 'int'))
  (IntegerLiteral 0xac241f8 'int' 0))
____localvar____10 == 0;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt ImplicitCastExpr ( 180508184 -> p 180508200 )
(ImplicitCastExpr 0xac25618 'int' <LValueToRValue>
  (DeclRefExpr 0xac25600 'int' lvalue Var 0xac240d0 '____localvar____10' 'int'))
____localvar____10;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt DeclRefExpr ( 180508160 -> p 180508184 )
(DeclRefExpr 0xac25600 'int' lvalue Var 0xac240d0 '____localvar____10' 'int')
____localvar____10;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt IntegerLiteral ( 180503032 -> p 180508200 )
(IntegerLiteral 0xac241f8 'int' 0)
0;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt GotoStmt ( 180508224 -> p 180508240 )
(GotoStmt 0xac25640 '____label____30':0xac255c0)
goto ____label____30;
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt GotoStmt ( 180508272 -> p 180508240 )
(GotoStmt 0xac25670 '____label____25':0xac25280)
goto ____label____25;
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt CompoundStmt ( 180504080 -> p 180508336 )
(CompoundStmt 0xac24610
  (LabelStmt 0xac24ec0 '____label____15'
    (CompoundStmt 0xac25010
      (NullStmt 0xac25000)
      (LabelStmt 0xac24f00 '____label____16'
        (IfStmt 0xac24fe0
          <<<NULL>>>
          (CXXBoolLiteralExpr 0xac24fb8 '_Bool' true)
          (CompoundStmt 0xac24fc8
            (CompoundStmt 0xac241c0)
            (LabelStmt 0xac24f40 '____label____17'
              (CompoundStmt 0xac24fa0
                (GotoStmt 0xac24f90 '____label____16':0xac24ed0))))
          <<<NULL>>>))
      (LabelStmt 0xac24f80 '____label____18'
        (NullStmt 0xac24f70))))
  (LabelStmt 0xac255f0 '____label____30'
    (LabelStmt 0xac242a0 'LBL_IN_CASE'
      (BinaryOperator 0xac24260 'int' lvalue '='
        (DeclRefExpr 0xac24230 'int' lvalue Var 0xac240d0 '____localvar____10' 'int')
        (IntegerLiteral 0xac24248 'int' 2))))
  (LabelStmt 0xac24330 'LBL_BEFORE_CASE'
    (LabelStmt 0xac254e0 '____label____29'
      (GotoStmt 0xac256a0 '____label____24':0xac25240)))
  (IfStmt 0xac24430
    <<<NULL>>>
    (BinaryOperator 0xac24380 '_Bool' '=='
      (ImplicitCastExpr 0xac24370 'int' <LValueToRValue>
        (DeclRefExpr 0xac24340 'int' lvalue Var 0xac240d0 '____localvar____10' 'int'))
      (IntegerLiteral 0xac24358 'int' 3))
    (CompoundStmt 0xac24418
      (LabelStmt 0xac25060 '____label____19'
        (CompoundStmt 0xac251c0
          (NullStmt 0xac251b0)
          (LabelStmt 0xac250a0 '____label____20'
            (IfStmt 0xac25190
              <<<NULL>>>
              (CXXBoolLiteralExpr 0xac25168 '_Bool' true)
              (CompoundStmt 0xac25178
                (CompoundStmt 0xac243d8
                  (LabelStmt 0xac25430 '____label____28'
                    (GotoStmt 0xac25130 '____label____22':0xac250f0)))
                (LabelStmt 0xac250e0 '____label____21'
                  (CompoundStmt 0xac25150
                    (GotoStmt 0xac25140 '____label____20':0xac25070))))
              <<<NULL>>>))
          (LabelStmt 0xac25120 '____label____22'
            (NullStmt 0xac25110)))))
    <<<NULL>>>)
  (LabelStmt 0xac25380 '____label____27'
    (BinaryOperator 0xac244f8 'int' lvalue '='
      (DeclRefExpr 0xac24488 'int' lvalue Var 0xac23fa0 '____localvar____8' 'int')
      (BinaryOperator 0xac244e0 'int' '-'
        (ImplicitCastExpr 0xac244d0 'int' <LValueToRValue>
          (DeclRefExpr 0xac244a0 'int' lvalue Var 0xac23fa0 '____localvar____8' 'int'))
        (IntegerLiteral 0xac244b8 'int' 2))))
  (BinaryOperator 0xac24540 'int' lvalue '='
    (DeclRefExpr 0xac24510 'int' lvalue Var 0xac240d0 '____localvar____10' 'int')
    (IntegerLiteral 0xac24528 'int' 3))
  (GotoStmt 0xac25690 '____label____24':0xac25240)
  (LabelStmt 0xac252f0 '____label____26'
    (NullStmt 0xac24598))
  (LabelStmt 0xac252b0 '____label____25'
    (GotoStmt 0xac245a8 'LBL_BEFORE_CASE':0xac24310))
  (LabelStmt 0xac24600 'LBL_BEFORE_BREAK'
    (GotoStmt 0xac25680 '____label____24':0xac25240)))
{
  ____label____15:
    {
        ;
      ____label____16:
        if (true) {
            {
            }
          ____label____17:
            {
                goto ____label____16;
            }
        }
      ____label____18:
        ;
    }
  ____label____30:
  LBL_IN_CASE:
    ____localvar____10 = 2;
  LBL_BEFORE_CASE:
  ____label____29:
    goto ____label____24;
    if (____localvar____10 == 3) {
      ____label____19:
        {
            ;
          ____label____20:
            if (true) {
                {
                  ____label____28:
                    goto ____label____22;
                }
              ____label____21:
                {
                    goto ____label____20;
                }
            }
          ____label____22:
            ;
        }
    }
  ____label____27:
    ____localvar____8 = ____localvar____8 - 2;
    ____localvar____10 = 3;
    goto ____label____24;
  ____label____26:
    ;
  ____label____25:
    goto LBL_BEFORE_CASE;
  LBL_BEFORE_BREAK:
    goto ____label____24;
}
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt LabelStmt ( 180506304 -> p 180504080 )
(LabelStmt 0xac24ec0 '____label____15'
  (CompoundStmt 0xac25010
    (NullStmt 0xac25000)
    (LabelStmt 0xac24f00 '____label____16'
      (IfStmt 0xac24fe0
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xac24fb8 '_Bool' true)
        (CompoundStmt 0xac24fc8
          (CompoundStmt 0xac241c0)
          (LabelStmt 0xac24f40 '____label____17'
            (CompoundStmt 0xac24fa0
              (GotoStmt 0xac24f90 '____label____16':0xac24ed0))))
        <<<NULL>>>))
    (LabelStmt 0xac24f80 '____label____18'
      (NullStmt 0xac24f70))))
____label____15:
{
    ;
  ____label____16:
    if (true) {
        {
        }
      ____label____17:
        {
            goto ____label____16;
        }
    }
  ____label____18:
    ;
}
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt CompoundStmt ( 180506640 -> p 180506304 )
(CompoundStmt 0xac25010
  (NullStmt 0xac25000)
  (LabelStmt 0xac24f00 '____label____16'
    (IfStmt 0xac24fe0
      <<<NULL>>>
      (CXXBoolLiteralExpr 0xac24fb8 '_Bool' true)
      (CompoundStmt 0xac24fc8
        (CompoundStmt 0xac241c0)
        (LabelStmt 0xac24f40 '____label____17'
          (CompoundStmt 0xac24fa0
            (GotoStmt 0xac24f90 '____label____16':0xac24ed0))))
      <<<NULL>>>))
  (LabelStmt 0xac24f80 '____label____18'
    (NullStmt 0xac24f70)))
{
    ;
  ____label____16:
    if (true) {
        {
        }
      ____label____17:
        {
            goto ____label____16;
        }
    }
  ____label____18:
    ;
}
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt NullStmt ( 180506624 -> p 180506640 )
(NullStmt 0xac25000)
;
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt LabelStmt ( 180506368 -> p 180506640 )
(LabelStmt 0xac24f00 '____label____16'
  (IfStmt 0xac24fe0
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xac24fb8 '_Bool' true)
    (CompoundStmt 0xac24fc8
      (CompoundStmt 0xac241c0)
      (LabelStmt 0xac24f40 '____label____17'
        (CompoundStmt 0xac24fa0
          (GotoStmt 0xac24f90 '____label____16':0xac24ed0))))
    <<<NULL>>>))
____label____16:
if (true) {
    {
    }
  ____label____17:
    {
        goto ____label____16;
    }
}
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt IfStmt ( 180506592 -> p 180506368 )
(IfStmt 0xac24fe0
  <<<NULL>>>
  (CXXBoolLiteralExpr 0xac24fb8 '_Bool' true)
  (CompoundStmt 0xac24fc8
    (CompoundStmt 0xac241c0)
    (LabelStmt 0xac24f40 '____label____17'
      (CompoundStmt 0xac24fa0
        (GotoStmt 0xac24f90 '____label____16':0xac24ed0))))
  <<<NULL>>>)
if (true) {
    {
    }
  ____label____17:
    {
        goto ____label____16;
    }
}
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt CXXBoolLiteralExpr ( 180506552 -> p 180506592 )
(CXXBoolLiteralExpr 0xac24fb8 '_Bool' true)
true;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt CompoundStmt ( 180506568 -> p 180506592 )
(CompoundStmt 0xac24fc8
  (CompoundStmt 0xac241c0)
  (LabelStmt 0xac24f40 '____label____17'
    (CompoundStmt 0xac24fa0
      (GotoStmt 0xac24f90 '____label____16':0xac24ed0))))
{
    {
    }
  ____label____17:
    {
        goto ____label____16;
    }
}
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt CompoundStmt ( 180502976 -> p 180506568 )
(CompoundStmt 0xac241c0)
{
}
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt LabelStmt ( 180506432 -> p 180506568 )
(LabelStmt 0xac24f40 '____label____17'
  (CompoundStmt 0xac24fa0
    (GotoStmt 0xac24f90 '____label____16':0xac24ed0)))
____label____17:
{
    goto ____label____16;
}
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt CompoundStmt ( 180506528 -> p 180506432 )
(CompoundStmt 0xac24fa0
  (GotoStmt 0xac24f90 '____label____16':0xac24ed0))
{
    goto ____label____16;
}
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt GotoStmt ( 180506512 -> p 180506528 )
(GotoStmt 0xac24f90 '____label____16':0xac24ed0)
goto ____label____16;
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt LabelStmt ( 180506496 -> p 180506640 )
(LabelStmt 0xac24f80 '____label____18'
  (NullStmt 0xac24f70))
____label____18:
;
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt NullStmt ( 180506480 -> p 180506496 )
(NullStmt 0xac24f70)
;
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt LabelStmt ( 180508144 -> p 180504080 )
(LabelStmt 0xac255f0 '____label____30'
  (LabelStmt 0xac242a0 'LBL_IN_CASE'
    (BinaryOperator 0xac24260 'int' lvalue '='
      (DeclRefExpr 0xac24230 'int' lvalue Var 0xac240d0 '____localvar____10' 'int')
      (IntegerLiteral 0xac24248 'int' 2))))
____label____30:
LBL_IN_CASE:
____localvar____10 = 2;
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt LabelStmt ( 180503200 -> p 180508144 )
(LabelStmt 0xac242a0 'LBL_IN_CASE'
  (BinaryOperator 0xac24260 'int' lvalue '='
    (DeclRefExpr 0xac24230 'int' lvalue Var 0xac240d0 '____localvar____10' 'int')
    (IntegerLiteral 0xac24248 'int' 2)))
LBL_IN_CASE:
____localvar____10 = 2;
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt BinaryOperator ( 180503136 -> p 180503200 )
(BinaryOperator 0xac24260 'int' lvalue '='
  (DeclRefExpr 0xac24230 'int' lvalue Var 0xac240d0 '____localvar____10' 'int')
  (IntegerLiteral 0xac24248 'int' 2))
____localvar____10 = 2;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt DeclRefExpr ( 180503088 -> p 180503136 )
(DeclRefExpr 0xac24230 'int' lvalue Var 0xac240d0 '____localvar____10' 'int')
____localvar____10;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt IntegerLiteral ( 180503112 -> p 180503136 )
(IntegerLiteral 0xac24248 'int' 2)
2;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt LabelStmt ( 180503344 -> p 180504080 )
(LabelStmt 0xac24330 'LBL_BEFORE_CASE'
  (LabelStmt 0xac254e0 '____label____29'
    (GotoStmt 0xac256a0 '____label____24':0xac25240)))
LBL_BEFORE_CASE:
____label____29:
goto ____label____24;
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt LabelStmt ( 180507872 -> p 180503344 )
(LabelStmt 0xac254e0 '____label____29'
  (GotoStmt 0xac256a0 '____label____24':0xac25240))
____label____29:
goto ____label____24;
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt GotoStmt ( 180508320 -> p 180507872 )
(GotoStmt 0xac256a0 '____label____24':0xac25240)
goto ____label____24;
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt IfStmt ( 180503600 -> p 180504080 )
(IfStmt 0xac24430
  <<<NULL>>>
  (BinaryOperator 0xac24380 '_Bool' '=='
    (ImplicitCastExpr 0xac24370 'int' <LValueToRValue>
      (DeclRefExpr 0xac24340 'int' lvalue Var 0xac240d0 '____localvar____10' 'int'))
    (IntegerLiteral 0xac24358 'int' 3))
  (CompoundStmt 0xac24418
    (LabelStmt 0xac25060 '____label____19'
      (CompoundStmt 0xac251c0
        (NullStmt 0xac251b0)
        (LabelStmt 0xac250a0 '____label____20'
          (IfStmt 0xac25190
            <<<NULL>>>
            (CXXBoolLiteralExpr 0xac25168 '_Bool' true)
            (CompoundStmt 0xac25178
              (CompoundStmt 0xac243d8
                (LabelStmt 0xac25430 '____label____28'
                  (GotoStmt 0xac25130 '____label____22':0xac250f0)))
              (LabelStmt 0xac250e0 '____label____21'
                (CompoundStmt 0xac25150
                  (GotoStmt 0xac25140 '____label____20':0xac25070))))
            <<<NULL>>>))
        (LabelStmt 0xac25120 '____label____22'
          (NullStmt 0xac25110)))))
  <<<NULL>>>)
if (____localvar____10 == 3) {
  ____label____19:
    {
        ;
      ____label____20:
        if (true) {
            {
              ____label____28:
                goto ____label____22;
            }
          ____label____21:
            {
                goto ____label____20;
            }
        }
      ____label____22:
        ;
    }
}
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt BinaryOperator ( 180503424 -> p 180503600 )
(BinaryOperator 0xac24380 '_Bool' '=='
  (ImplicitCastExpr 0xac24370 'int' <LValueToRValue>
    (DeclRefExpr 0xac24340 'int' lvalue Var 0xac240d0 '____localvar____10' 'int'))
  (IntegerLiteral 0xac24358 'int' 3))
____localvar____10 == 3;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt ImplicitCastExpr ( 180503408 -> p 180503424 )
(ImplicitCastExpr 0xac24370 'int' <LValueToRValue>
  (DeclRefExpr 0xac24340 'int' lvalue Var 0xac240d0 '____localvar____10' 'int'))
____localvar____10;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt DeclRefExpr ( 180503360 -> p 180503408 )
(DeclRefExpr 0xac24340 'int' lvalue Var 0xac240d0 '____localvar____10' 'int')
____localvar____10;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt IntegerLiteral ( 180503384 -> p 180503424 )
(IntegerLiteral 0xac24358 'int' 3)
3;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt CompoundStmt ( 180503576 -> p 180503600 )
(CompoundStmt 0xac24418
  (LabelStmt 0xac25060 '____label____19'
    (CompoundStmt 0xac251c0
      (NullStmt 0xac251b0)
      (LabelStmt 0xac250a0 '____label____20'
        (IfStmt 0xac25190
          <<<NULL>>>
          (CXXBoolLiteralExpr 0xac25168 '_Bool' true)
          (CompoundStmt 0xac25178
            (CompoundStmt 0xac243d8
              (LabelStmt 0xac25430 '____label____28'
                (GotoStmt 0xac25130 '____label____22':0xac250f0)))
            (LabelStmt 0xac250e0 '____label____21'
              (CompoundStmt 0xac25150
                (GotoStmt 0xac25140 '____label____20':0xac25070))))
          <<<NULL>>>))
      (LabelStmt 0xac25120 '____label____22'
        (NullStmt 0xac25110)))))
{
  ____label____19:
    {
        ;
      ____label____20:
        if (true) {
            {
              ____label____28:
                goto ____label____22;
            }
          ____label____21:
            {
                goto ____label____20;
            }
        }
      ____label____22:
        ;
    }
}
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt LabelStmt ( 180506720 -> p 180503576 )
(LabelStmt 0xac25060 '____label____19'
  (CompoundStmt 0xac251c0
    (NullStmt 0xac251b0)
    (LabelStmt 0xac250a0 '____label____20'
      (IfStmt 0xac25190
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xac25168 '_Bool' true)
        (CompoundStmt 0xac25178
          (CompoundStmt 0xac243d8
            (LabelStmt 0xac25430 '____label____28'
              (GotoStmt 0xac25130 '____label____22':0xac250f0)))
          (LabelStmt 0xac250e0 '____label____21'
            (CompoundStmt 0xac25150
              (GotoStmt 0xac25140 '____label____20':0xac25070))))
        <<<NULL>>>))
    (LabelStmt 0xac25120 '____label____22'
      (NullStmt 0xac25110))))
____label____19:
{
    ;
  ____label____20:
    if (true) {
        {
          ____label____28:
            goto ____label____22;
        }
      ____label____21:
        {
            goto ____label____20;
        }
    }
  ____label____22:
    ;
}
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt CompoundStmt ( 180507072 -> p 180506720 )
(CompoundStmt 0xac251c0
  (NullStmt 0xac251b0)
  (LabelStmt 0xac250a0 '____label____20'
    (IfStmt 0xac25190
      <<<NULL>>>
      (CXXBoolLiteralExpr 0xac25168 '_Bool' true)
      (CompoundStmt 0xac25178
        (CompoundStmt 0xac243d8
          (LabelStmt 0xac25430 '____label____28'
            (GotoStmt 0xac25130 '____label____22':0xac250f0)))
        (LabelStmt 0xac250e0 '____label____21'
          (CompoundStmt 0xac25150
            (GotoStmt 0xac25140 '____label____20':0xac25070))))
      <<<NULL>>>))
  (LabelStmt 0xac25120 '____label____22'
    (NullStmt 0xac25110)))
{
    ;
  ____label____20:
    if (true) {
        {
          ____label____28:
            goto ____label____22;
        }
      ____label____21:
        {
            goto ____label____20;
        }
    }
  ____label____22:
    ;
}
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt NullStmt ( 180507056 -> p 180507072 )
(NullStmt 0xac251b0)
;
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt LabelStmt ( 180506784 -> p 180507072 )
(LabelStmt 0xac250a0 '____label____20'
  (IfStmt 0xac25190
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xac25168 '_Bool' true)
    (CompoundStmt 0xac25178
      (CompoundStmt 0xac243d8
        (LabelStmt 0xac25430 '____label____28'
          (GotoStmt 0xac25130 '____label____22':0xac250f0)))
      (LabelStmt 0xac250e0 '____label____21'
        (CompoundStmt 0xac25150
          (GotoStmt 0xac25140 '____label____20':0xac25070))))
    <<<NULL>>>))
____label____20:
if (true) {
    {
      ____label____28:
        goto ____label____22;
    }
  ____label____21:
    {
        goto ____label____20;
    }
}
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt IfStmt ( 180507024 -> p 180506784 )
(IfStmt 0xac25190
  <<<NULL>>>
  (CXXBoolLiteralExpr 0xac25168 '_Bool' true)
  (CompoundStmt 0xac25178
    (CompoundStmt 0xac243d8
      (LabelStmt 0xac25430 '____label____28'
        (GotoStmt 0xac25130 '____label____22':0xac250f0)))
    (LabelStmt 0xac250e0 '____label____21'
      (CompoundStmt 0xac25150
        (GotoStmt 0xac25140 '____label____20':0xac25070))))
  <<<NULL>>>)
if (true) {
    {
      ____label____28:
        goto ____label____22;
    }
  ____label____21:
    {
        goto ____label____20;
    }
}
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt CXXBoolLiteralExpr ( 180506984 -> p 180507024 )
(CXXBoolLiteralExpr 0xac25168 '_Bool' true)
true;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt CompoundStmt ( 180507000 -> p 180507024 )
(CompoundStmt 0xac25178
  (CompoundStmt 0xac243d8
    (LabelStmt 0xac25430 '____label____28'
      (GotoStmt 0xac25130 '____label____22':0xac250f0)))
  (LabelStmt 0xac250e0 '____label____21'
    (CompoundStmt 0xac25150
      (GotoStmt 0xac25140 '____label____20':0xac25070))))
{
    {
      ____label____28:
        goto ____label____22;
    }
  ____label____21:
    {
        goto ____label____20;
    }
}
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt CompoundStmt ( 180503512 -> p 180507000 )
(CompoundStmt 0xac243d8
  (LabelStmt 0xac25430 '____label____28'
    (GotoStmt 0xac25130 '____label____22':0xac250f0)))
{
  ____label____28:
    goto ____label____22;
}
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt LabelStmt ( 180507696 -> p 180503512 )
(LabelStmt 0xac25430 '____label____28'
  (GotoStmt 0xac25130 '____label____22':0xac250f0))
____label____28:
goto ____label____22;
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt GotoStmt ( 180506928 -> p 180507696 )
(GotoStmt 0xac25130 '____label____22':0xac250f0)
goto ____label____22;
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt LabelStmt ( 180506848 -> p 180507000 )
(LabelStmt 0xac250e0 '____label____21'
  (CompoundStmt 0xac25150
    (GotoStmt 0xac25140 '____label____20':0xac25070)))
____label____21:
{
    goto ____label____20;
}
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt CompoundStmt ( 180506960 -> p 180506848 )
(CompoundStmt 0xac25150
  (GotoStmt 0xac25140 '____label____20':0xac25070))
{
    goto ____label____20;
}
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt GotoStmt ( 180506944 -> p 180506960 )
(GotoStmt 0xac25140 '____label____20':0xac25070)
goto ____label____20;
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt LabelStmt ( 180506912 -> p 180507072 )
(LabelStmt 0xac25120 '____label____22'
  (NullStmt 0xac25110))
____label____22:
;
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt NullStmt ( 180506896 -> p 180506912 )
(NullStmt 0xac25110)
;
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt LabelStmt ( 180507520 -> p 180504080 )
(LabelStmt 0xac25380 '____label____27'
  (BinaryOperator 0xac244f8 'int' lvalue '='
    (DeclRefExpr 0xac24488 'int' lvalue Var 0xac23fa0 '____localvar____8' 'int')
    (BinaryOperator 0xac244e0 'int' '-'
      (ImplicitCastExpr 0xac244d0 'int' <LValueToRValue>
        (DeclRefExpr 0xac244a0 'int' lvalue Var 0xac23fa0 '____localvar____8' 'int'))
      (IntegerLiteral 0xac244b8 'int' 2))))
____label____27:
____localvar____8 = ____localvar____8 - 2;
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt BinaryOperator ( 180503800 -> p 180507520 )
(BinaryOperator 0xac244f8 'int' lvalue '='
  (DeclRefExpr 0xac24488 'int' lvalue Var 0xac23fa0 '____localvar____8' 'int')
  (BinaryOperator 0xac244e0 'int' '-'
    (ImplicitCastExpr 0xac244d0 'int' <LValueToRValue>
      (DeclRefExpr 0xac244a0 'int' lvalue Var 0xac23fa0 '____localvar____8' 'int'))
    (IntegerLiteral 0xac244b8 'int' 2)))
____localvar____8 = ____localvar____8 - 2;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt DeclRefExpr ( 180503688 -> p 180503800 )
(DeclRefExpr 0xac24488 'int' lvalue Var 0xac23fa0 '____localvar____8' 'int')
____localvar____8;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt BinaryOperator ( 180503776 -> p 180503800 )
(BinaryOperator 0xac244e0 'int' '-'
  (ImplicitCastExpr 0xac244d0 'int' <LValueToRValue>
    (DeclRefExpr 0xac244a0 'int' lvalue Var 0xac23fa0 '____localvar____8' 'int'))
  (IntegerLiteral 0xac244b8 'int' 2))
____localvar____8 - 2;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt ImplicitCastExpr ( 180503760 -> p 180503776 )
(ImplicitCastExpr 0xac244d0 'int' <LValueToRValue>
  (DeclRefExpr 0xac244a0 'int' lvalue Var 0xac23fa0 '____localvar____8' 'int'))
____localvar____8;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt DeclRefExpr ( 180503712 -> p 180503760 )
(DeclRefExpr 0xac244a0 'int' lvalue Var 0xac23fa0 '____localvar____8' 'int')
____localvar____8;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt IntegerLiteral ( 180503736 -> p 180503776 )
(IntegerLiteral 0xac244b8 'int' 2)
2;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt BinaryOperator ( 180503872 -> p 180504080 )
(BinaryOperator 0xac24540 'int' lvalue '='
  (DeclRefExpr 0xac24510 'int' lvalue Var 0xac240d0 '____localvar____10' 'int')
  (IntegerLiteral 0xac24528 'int' 3))
____localvar____10 = 3;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt DeclRefExpr ( 180503824 -> p 180503872 )
(DeclRefExpr 0xac24510 'int' lvalue Var 0xac240d0 '____localvar____10' 'int')
____localvar____10;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt IntegerLiteral ( 180503848 -> p 180503872 )
(IntegerLiteral 0xac24528 'int' 3)
3;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt GotoStmt ( 180508304 -> p 180504080 )
(GotoStmt 0xac25690 '____label____24':0xac25240)
goto ____label____24;
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt LabelStmt ( 180507376 -> p 180504080 )
(LabelStmt 0xac252f0 '____label____26'
  (NullStmt 0xac24598))
____label____26:
;
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt NullStmt ( 180503960 -> p 180507376 )
(NullStmt 0xac24598)
;
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt LabelStmt ( 180507312 -> p 180504080 )
(LabelStmt 0xac252b0 '____label____25'
  (GotoStmt 0xac245a8 'LBL_BEFORE_CASE':0xac24310))
____label____25:
goto LBL_BEFORE_CASE;
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt GotoStmt ( 180503976 -> p 180507312 )
(GotoStmt 0xac245a8 'LBL_BEFORE_CASE':0xac24310)
goto LBL_BEFORE_CASE;
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt LabelStmt ( 180504064 -> p 180504080 )
(LabelStmt 0xac24600 'LBL_BEFORE_BREAK'
  (GotoStmt 0xac25680 '____label____24':0xac25240))
LBL_BEFORE_BREAK:
goto ____label____24;
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt GotoStmt ( 180508288 -> p 180504064 )
(GotoStmt 0xac25680 '____label____24':0xac25240)
goto ____label____24;
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt LabelStmt ( 180507248 -> p 180508336 )
(LabelStmt 0xac25270 '____label____24'
  (NullStmt 0xac25260))
____label____24:
;
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt NullStmt ( 180507232 -> p 180507248 )
(NullStmt 0xac25260)
;
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt ReturnStmt ( 180504160 -> p 180504176 )
(ReturnStmt 0xac24660
  (IntegerLiteral 0xac24648 'int' 0))
return 0;
;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 13] Stmt IntegerLiteral ( 180504136 -> p 180504160 )
(IntegerLiteral 0xac24648 'int' 0)
0;
[0;1;33m
 [B32 (ENTRY)]
[0m[0;35m   Succs [0m(1):[0;35m B31[0m
[0;1;33m
 [B1]
[0m  ____label____24:
   1: return 0;
[0;34m   Preds [0m(3):[0;34m B2 B5 B12[0m
[0;35m   Succs [0m(1):[0;35m B0[0m
[0;1;33m
 [B2]
[0m  LBL_BEFORE_BREAK:
[0;32m   T: goto ____label____24;

[0m[0;35m   Succs [0m(1):[0;35m B1[0m
[0;1;33m
 [B3]
[0m  ____label____25:
[0;32m   T: goto LBL_BEFORE_CASE;

[0m[0;34m   Preds [0m(2):[0;34m B4 B20[0m
[0;35m   Succs [0m(1):[0;35m B13[0m
[0;1;33m
 [B4]
[0m  ____label____26:
[0;34m   Preds [0m(1):[0;34m B29[0m
[0;35m   Succs [0m(1):[0;35m B3[0m
[0;1;33m
 [B5]
[0m  ____label____27:
   1: ____localvar____8 = ____localvar____8 - 2
   2: ____localvar____10 = 3
[0;32m   T: goto ____label____24;

[0m[0;34m   Preds [0m(3):[0;34m B6 B11 B27[0m
[0;35m   Succs [0m(1):[0;35m B1[0m
[0;1;33m
 [B6]
[0m  ____label____22:
[0;34m   Preds [0m(1):[0;34m B8[0m
[0;35m   Succs [0m(1):[0;35m B5[0m
[0;1;33m
 [B7]
[0m  ____label____21:
[0;32m   T: goto ____label____20;

[0m[0;35m   Succs [0m(1):[0;35m B9[0m
[0;1;33m
 [B8]
[0m  ____label____28:
[0;32m   T: goto ____label____22;

[0m[0;34m   Preds [0m(2):[0;34m B9 B25[0m
[0;35m   Succs [0m(1):[0;35m B6[0m
[0;1;33m
 [B9]
[0m  ____label____20:
   1: true
[0;32m   T: if [B9.1]
[0m[0;34m   Preds [0m(2):[0;34m B10 B7[0m
[0;35m   Succs [0m(2):[0;35m B8 NULL[0m
[0;1;33m
 [B10]
[0m  ____label____19:
[0;34m   Preds [0m(1):[0;34m B11[0m
[0;35m   Succs [0m(1):[0;35m B9[0m
[0;1;33m
 [B11]
[0m   1: ____localvar____10 == 3
[0;32m   T: if [B11.1]
[0m[0;35m   Succs [0m(2):[0;35m B10 B5[0m
[0;1;33m
 [B12]
[0m  ____label____29:
[0;32m   T: goto ____label____24;

[0m[0;34m   Preds [0m(2):[0;34m B13 B23[0m
[0;35m   Succs [0m(1):[0;35m B1[0m
[0;1;33m
 [B13]
[0m  LBL_BEFORE_CASE:
[0;34m   Preds [0m(2):[0;34m B14 B3[0m
[0;35m   Succs [0m(1):[0;35m B12[0m
[0;1;33m
 [B14]
[0m  LBL_IN_CASE:
   1: ____localvar____10 = 2
[0;34m   Preds [0m(1):[0;34m B15[0m
[0;35m   Succs [0m(1):[0;35m B13[0m
[0;1;33m
 [B15]
[0m  ____label____30:
[0;34m   Preds [0m(2):[0;34m B16 B21[0m
[0;35m   Succs [0m(1):[0;35m B14[0m
[0;1;33m
 [B16]
[0m  ____label____18:
[0;35m   Succs [0m(1):[0;35m B15[0m
[0;1;33m
 [B17]
[0m  ____label____17:
[0;32m   T: goto ____label____16;

[0m[0;34m   Preds [0m(1):[0;34m B18[0m
[0;35m   Succs [0m(1):[0;35m B18[0m
[0;1;33m
 [B18]
[0m  ____label____16:
   1: true
[0;32m   T: if [B18.1]
[0m[0;34m   Preds [0m(2):[0;34m B19 B17[0m
[0;35m   Succs [0m(2):[0;35m B17 NULL[0m
[0;1;33m
 [B19]
[0m  ____label____15:
[0;35m   Succs [0m(1):[0;35m B18[0m
[0;1;33m
 [B20]
[0m[0;32m   T: goto ____label____25;

[0m[0;34m   Preds [0m(1):[0;34m B22[0m
[0;35m   Succs [0m(1):[0;35m B3[0m
[0;1;33m
 [B21]
[0m[0;32m   T: goto ____label____30;

[0m[0;34m   Preds [0m(1):[0;34m B22[0m
[0;35m   Succs [0m(1):[0;35m B15[0m
[0;1;33m
 [B22]
[0m   1: ____localvar____10 == 0
[0;32m   T: if [B22.1]
[0m[0;34m   Preds [0m(1):[0;34m B24[0m
[0;35m   Succs [0m(2):[0;35m B21 B20[0m
[0;1;33m
 [B23]
[0m[0;32m   T: goto ____label____29;

[0m[0;34m   Preds [0m(1):[0;34m B24[0m
[0;35m   Succs [0m(1):[0;35m B12[0m
[0;1;33m
 [B24]
[0m   1: 2 <= ____localvar____10 + ____localvar____10 <= 3
[0;32m   T: if [B24.1]
[0m[0;34m   Preds [0m(1):[0;34m B26[0m
[0;35m   Succs [0m(2):[0;35m B23 B22[0m
[0;1;33m
 [B25]
[0m[0;32m   T: goto ____label____28;

[0m[0;34m   Preds [0m(1):[0;34m B26[0m
[0;35m   Succs [0m(1):[0;35m B8[0m
[0;1;33m
 [B26]
[0m   1: ____localvar____10 == 6
[0;32m   T: if [B26.1]
[0m[0;34m   Preds [0m(1):[0;34m B28[0m
[0;35m   Succs [0m(2):[0;35m B25 B24[0m
[0;1;33m
 [B27]
[0m[0;32m   T: goto ____label____27;

[0m[0;34m   Preds [0m(1):[0;34m B28[0m
[0;35m   Succs [0m(1):[0;35m B5[0m
[0;1;33m
 [B28]
[0m   1: ____localvar____10 == 4
[0;32m   T: if [B28.1]
[0m[0;34m   Preds [0m(1):[0;34m B30[0m
[0;35m   Succs [0m(2):[0;35m B27 B26[0m
[0;1;33m
 [B29]
[0m[0;32m   T: goto ____label____26;

[0m[0;34m   Preds [0m(1):[0;34m B30[0m
[0;35m   Succs [0m(1):[0;35m B4[0m
[0;1;33m
 [B30]
[0m  ____label____23:
   1: int ____localvar____10 = ____localvar____7 * ____localvar____8;
   2: ____localvar____10 == 5
[0;32m   T: if [B30.2]
[0m[0;34m   Preds [0m(1):[0;34m B31[0m
[0;35m   Succs [0m(2):[0;35m B29 B28[0m
[0;1;33m
 [B31]
[0m   1: assign_cond()
   2: int ____localvar____7 = 1;
   3: int ____localvar____8 = ____localvar____7 * 2;
   4: int ____localvar____9 = 0;
[0;34m   Preds [0m(1):[0;34m B32[0m
[0;35m   Succs [0m(1):[0;35m B30[0m
[0;1;33m
 [B0 (EXIT)]
[0m[0;34m   Preds [0m(1):[0;34m B1[0m

Writing '/tmp/llvm_RCyor9/CFG.dot'...  done. 
[DEBUG][alg/SimplePrinter.cpp - line 24] alg finished.
[DEBUG][ResourceManager.cpp - line 101] src _switch.cpp not changed.
[DEBUG][ResourceManager.cpp - line 139] Open desfile @_switch.cpp
done2
