done1
[DEBUG][res/OptionTable.cpp - line 8] argc = 2
[DEBUG][res/OptionTable.cpp - line 38] non-option argvs caught: [test/_array.cpp]
ignoring nonexistent directory "/usr/include/c++/4.6/i486-linux-gnu"
#include "..." search starts here:
#include <...> search starts here:
 /usr/local/lib/clang/3.3/include
 /usr/local/include
 /usr/include
 /usr/include/linux
 /usr/include/c++/4.6
 /usr/include/c++/4.6/i686-linux-gnu
 /usr/include/c++/4.6/backward
 /usr/include/i386-linux-gnu
End of search list.
[DEBUG][alg/InitParseConsumer.h - line 30] +decl, size = 1
[DEBUG][alg/InitParseConsumer.h - line 30] +decl, size = 2
[DEBUG][alg/InitParseConsumer.h - line 30] +decl, size = 3
[DEBUG][alg/InitParseConsumer.h - line 30] +decl, size = 4
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Typedef 98709d0 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl LinkageSpec 9870a00 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Namespace 98cd7f0 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Namespace 98cd920 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Namespace 98e12d0 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Namespace 98e1600 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Namespace 98f2c60 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Namespace 99004a0 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Namespace 9906a20 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Namespace 9906df0 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Namespace 990ded0 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Namespace 9911ce0 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Namespace 99176a0 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Namespace 991c210 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Namespace 992b5f0 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Namespace 9934190 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Namespace 9934210 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Namespace 99342c0 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Function 993e840 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Function 9947840 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Function 994ac50 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Function 9921040 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Function 99213d0 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Function 9921780 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl LinkageSpec 9958070 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl LinkageSpec 99607c0 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Namespace 9963810 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Namespace 99673e0 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Namespace 9971520 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Namespace 9974aa0 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Namespace 9981770 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Namespace 999b560 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Namespace 99a9590 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Namespace 99c7700 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Namespace 99dd6a0 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Typedef 99de470 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Typedef 99de4a0 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl LinkageSpec 99de4d0 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Namespace 99f0840 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Namespace 99f0900 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Namespace 99f3be0 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Namespace 99f3d30 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Namespace 99f3ec0 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Namespace 99f5e40 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Namespace 99fac60 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Function 99fc800 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Function 99fc9b0 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Function 99fcda0 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Enum 9a00810 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl LinkageSpec 9a00d50 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Namespace 9a01ba0 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Namespace 9a01d20 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Namespace 9a01ee0 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Function 9951c40 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Function 9951e00 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Function 9952150 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Namespace 99523d0 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl LinkageSpec 9a163b0 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Namespace 9a28100 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Namespace 9a28640 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Namespace 9a2f0a0 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Namespace 9a2f470 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Namespace 9a37460 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Namespace 9a53390 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Typedef 9a57bd0 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl CXXRecord 9a57c00 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Typedef 9a57dc0 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl CXXRecord 9a57df0 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl LinkageSpec 9a57f50 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl CXXRecord 9a585b0 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Typedef 9a58720 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl CXXRecord 9a58750 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Typedef 9a589b0 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl LinkageSpec 9a589f0 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl LinkageSpec 9a6c280 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl LinkageSpec 9a6d220 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Typedef 9a7baf0 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl CXXRecord 9a7bb20 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Typedef 9a7bcf0 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl CXXRecord 9a7bd30 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Typedef 9a7bf00 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl CXXRecord 9a7bf40 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Typedef 9a7c5e0 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl CXXRecord 9a7c620 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Typedef 9a7c7c0 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl CXXRecord 9a7c800 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Typedef 9a7cd00 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl CXXRecord 9a7cd40 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Typedef 9a7cee0 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Typedef 9a7cf30 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Typedef 9a7cf70 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl CXXRecord 9a7cfa0 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Typedef 9a7d560 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl CXXRecord 9a7d5a0 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Typedef 9a7d740 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Typedef 9a7d790 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl CXXRecord 9a7d7c0 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Typedef 9a7d990 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl CXXRecord 9a7d9d0 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Typedef 9a81ad0 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Typedef 9a81b60 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Enum 9a81b90 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Enum 9a81c80 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Enum 9a81fb0 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Enum 9a82160 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Enum 9a82280 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Enum 9a82400 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Enum 9a824f0 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Enum 9a825e0 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl CXXRecord 9a826d0 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Enum 9a82a00 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Enum 9a82af0 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl LinkageSpec 9a82be0 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl LinkageSpec 9a9a9b0 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Typedef 9acd880 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Typedef 9acd8b0 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Typedef 9acd8e0 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Typedef 9acd910 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Typedef 9acd940 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Typedef 9acd970 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Typedef 9acd9b0 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Function 9acdaa0 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Function 9acdcb0 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Function 9acde40 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Function 9ace050 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Function 9ace2b0 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Function 9ace4b0 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Function 9ace670 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Function 9ace7a0 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Function 9ace920 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Function 9aceae0 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Function 9acec60 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Function 9acedf0 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Function 9acffa0 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Function 9ad01d0 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Function 9ad0360 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Function 9ad0530 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Function 9ad06c0 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Function 9ad0850 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Function 9ad0a30 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Function 9ad0c00 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Function 9ad0e20 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Function 9ad0fb0 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Function 9ad11a0 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Function 9ad1330 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Function 9ad1510 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Function 9ad16f0 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Function 9ad1860 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Function 9ad1c10 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Function 9ad1ee0 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Function 9ad2100 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Function 9ad2320 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Function 9ad2530 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Function 9ad26d0 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Function 9ad2950 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Function 9ad2d50 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Function 9ad2f70 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Function 9ad3140 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Function 9ad3360 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Function 9ad35c0 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Function 9ad3870 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Function 9ad3b00 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Function 9ad3e30 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Function 9ad5120 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Function 9ad5400 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Function 9ad55b0 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Function 9ad57c0 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Function 9ad59b0 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Function 9ad5ba0 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Function 9ad5d70 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Function 9ad5f90 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Function 9ad6250 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Function 9ad6500 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Function 9ad67a0 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Function 9ad69c0 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Typedef 9ad6b20 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Namespace 9ad6b70 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Function 9ad6d60 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Function 9ad6e90 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Namespace 9ad7fa0 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Function 9af9c20 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Namespace 9b17c90 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl UsingDirective 9b67d20 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 48] enter FuncDecl
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 55] unknown FunctionDecl type: UsingDirective 9b67d20
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 75] enter ClassDecl
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 82] not class type Decl
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Function 9b67d70 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 48] enter FuncDecl
[DEBUG][alg/FlattenCFG/VarRenamer.cpp - line 9] START VarRenamer
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 50] enter decl 9b67d70 (Function)
[DEBUG][alg/FlattenCFG/VarRenamer.cpp - line 20] decl: Function
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b68370 (CompoundStmt) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b68218 (DeclStmt) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 50] enter decl 9b67e70 (Var)
[DEBUG][alg/FlattenCFG/VarRenamer.cpp - line 20] decl: Var
[DEBUG][alg/FlattenCFG/VarRenamer.cpp - line 30]  ---- name = a | type = int [3][3][2] | desugared type = int [3][3][2] | const = 0 | extern = 0 | POD = 1
{ { 1, 2, 3 }, {  }, { { 3 }, { 9, 8 } } }[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b67de8 (IntegerLiteral) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b67de8 (IntegerLiteral)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b67dd0 (IntegerLiteral) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b67dd0 (IntegerLiteral)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b68040 (InitListExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b67ee8 (InitListExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b67ea0 (IntegerLiteral) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b67ea0 (IntegerLiteral)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b67eb8 (IntegerLiteral) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b67eb8 (IntegerLiteral)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b67ed0 (IntegerLiteral) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b67ed0 (IntegerLiteral)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b67ee8 (InitListExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b67f18 (InitListExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b67f18 (InitListExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b67fe0 (InitListExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b67f58 (InitListExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b67f40 (IntegerLiteral) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b67f40 (IntegerLiteral)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b67f58 (InitListExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b67fb0 (InitListExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b67f80 (IntegerLiteral) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b67f80 (IntegerLiteral)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b67f98 (IntegerLiteral) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b67f98 (IntegerLiteral)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b67fb0 (InitListExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b67fe0 (InitListExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b68040 (InitListExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 52] exit decl 9b67e70 (Var)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b68218 (DeclStmt)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b68358 (BinaryOperator) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b68328 (ArraySubscriptExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b68318 (ImplicitCastExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b682e8 (ArraySubscriptExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b682d8 (ImplicitCastExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b68288 (ArraySubscriptExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b68278 (ImplicitCastExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b68228 (DeclRefExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b68228 (DeclRefExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b68278 (ImplicitCastExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b68240 (IntegerLiteral) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b68240 (IntegerLiteral)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b68288 (ArraySubscriptExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b682d8 (ImplicitCastExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b682a0 (IntegerLiteral) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b682a0 (IntegerLiteral)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b682e8 (ArraySubscriptExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b68318 (ImplicitCastExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b68300 (IntegerLiteral) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b68300 (IntegerLiteral)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b68328 (ArraySubscriptExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b68340 (IntegerLiteral) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b68340 (IntegerLiteral)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b68358 (BinaryOperator)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b68370 (CompoundStmt)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 52] exit decl 9b67d70 (Function)
[DEBUG][alg/FlattenCFG/VarRenamer.cpp - line 11] END VarRenamer
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 6] START StmtPretransformer
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 50] enter decl 9b67d70 (Function)
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 37] visitDecl 9b67d70(Function) Ctx 98706f4
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b68370 (CompoundStmt) | range 
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 62] push stmt CompoundStmt 9b68370 9869e10 9869e10
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b68218 (DeclStmt) | range 
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 62] push stmt DeclStmt 9b68218 99bd1a0 99bd1a0
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 50] enter decl 9b67e70 (Var)
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 37] visitDecl 9b67e70(Var) Ctx 9b67d94
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b67de8 (IntegerLiteral) | range 
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 62] push stmt IntegerLiteral 9b67de8 9991da0 9991da0
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b67de8 (IntegerLiteral)
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 70] leaving Stmt IntegerLiteral, start transform
IntegerLiteral 0x9b67de8 'int' 2
2[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b67dd0 (IntegerLiteral) | range 
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 62] push stmt IntegerLiteral 9b67dd0 9917510 9917510
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b67dd0 (IntegerLiteral)
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 70] leaving Stmt IntegerLiteral, start transform
IntegerLiteral 0x9b67dd0 'int' 3
3[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b68040 (InitListExpr) | range 
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 62] push stmt InitListExpr 9b68010 9999498 9999498
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b67ee8 (InitListExpr) | range 
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 62] push stmt InitListExpr 9b67ee8 998d388 998d388
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b67ea0 (IntegerLiteral) | range 
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 62] push stmt IntegerLiteral 9b67ea0 98ab418 98ab418
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b67ea0 (IntegerLiteral)
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 70] leaving Stmt IntegerLiteral, start transform
IntegerLiteral 0x9b67ea0 'int' 1
1[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b67eb8 (IntegerLiteral) | range 
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 62] push stmt IntegerLiteral 9b67eb8 9ae9b20 9ae9b20
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b67eb8 (IntegerLiteral)
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 70] leaving Stmt IntegerLiteral, start transform
IntegerLiteral 0x9b67eb8 'int' 2
2[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b67ed0 (IntegerLiteral) | range 
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 62] push stmt IntegerLiteral 9b67ed0 9905360 9905360
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b67ed0 (IntegerLiteral)
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 70] leaving Stmt IntegerLiteral, start transform
IntegerLiteral 0x9b67ed0 'int' 3
3[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b67ee8 (InitListExpr)
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 70] leaving Stmt InitListExpr, start transform
InitListExpr 0x9b67ee8 'int [3][2]'
|-IntegerLiteral 0x9b67ea0 'int' 1
|-IntegerLiteral 0x9b67eb8 'int' 2
`-IntegerLiteral 0x9b67ed0 'int' 3
{ 1, 2, 3 }[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b67f18 (InitListExpr) | range 
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 62] push stmt InitListExpr 9b67f18 9867328 9867328
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b67f18 (InitListExpr)
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 70] leaving Stmt InitListExpr, start transform
InitListExpr 0x9b67f18 'int [3][2]'
{  }[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b67fe0 (InitListExpr) | range 
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 62] push stmt InitListExpr 9b67fe0 9923bd8 9923bd8
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b67f58 (InitListExpr) | range 
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 62] push stmt InitListExpr 9b67f58 9af5588 9af5588
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b67f40 (IntegerLiteral) | range 
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 62] push stmt IntegerLiteral 9b67f40 99846b8 99846b8
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b67f40 (IntegerLiteral)
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 70] leaving Stmt IntegerLiteral, start transform
IntegerLiteral 0x9b67f40 'int' 3
3[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b67f58 (InitListExpr)
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 70] leaving Stmt InitListExpr, start transform
InitListExpr 0x9b67f58 'int [2]'
`-IntegerLiteral 0x9b67f40 'int' 3
{ 3 }[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b67fb0 (InitListExpr) | range 
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 62] push stmt InitListExpr 9b67fb0 9884640 9884640
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b67f80 (IntegerLiteral) | range 
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 62] push stmt IntegerLiteral 9b67f80 9aebf60 9aebf60
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b67f80 (IntegerLiteral)
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 70] leaving Stmt IntegerLiteral, start transform
IntegerLiteral 0x9b67f80 'int' 9
9[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b67f98 (IntegerLiteral) | range 
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 62] push stmt IntegerLiteral 9b67f98 9aec400 9aec400
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b67f98 (IntegerLiteral)
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 70] leaving Stmt IntegerLiteral, start transform
IntegerLiteral 0x9b67f98 'int' 8
8[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b67fb0 (InitListExpr)
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 70] leaving Stmt InitListExpr, start transform
InitListExpr 0x9b67fb0 'int [2]'
|-IntegerLiteral 0x9b67f80 'int' 9
`-IntegerLiteral 0x9b67f98 'int' 8
{ 9, 8 }[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b67fe0 (InitListExpr)
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 70] leaving Stmt InitListExpr, start transform
InitListExpr 0x9b67fe0 'int [3][2]'
|-InitListExpr 0x9b67f58 'int [2]'
| `-IntegerLiteral 0x9b67f40 'int' 3
`-InitListExpr 0x9b67fb0 'int [2]'
  |-IntegerLiteral 0x9b67f80 'int' 9
  `-IntegerLiteral 0x9b67f98 'int' 8
{ { 3 }, { 9, 8 } }[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b68040 (InitListExpr)
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 70] leaving Stmt InitListExpr, start transform
InitListExpr 0x9b68040 'int [3][3][2]'
|-InitListExpr 0x9b68068 'int [3][2]'
| |-InitListExpr 0x9b680a0 'int [2]'
| | |-IntegerLiteral 0x9b67ea0 'int' 1
| | `-IntegerLiteral 0x9b67eb8 'int' 2
| `-InitListExpr 0x9b680d0 'int [2]'
|   `-IntegerLiteral 0x9b67ed0 'int' 3
|-InitListExpr 0x9b68100 'int [3][2]'
`-InitListExpr 0x9b68130 'int [3][2]'
  |-InitListExpr 0x9b68168 'int [2]'
  | `-IntegerLiteral 0x9b67f40 'int' 3
  `-InitListExpr 0x9b68198 'int [2]'
    |-IntegerLiteral 0x9b67f80 'int' 9
    `-IntegerLiteral 0x9b67f98 'int' 8
{ { 1, 2, 3 }, {  }, { { 3 }, { 9, 8 } } }[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 52] exit decl 9b67e70 (Var)
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 45] exitDecl
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b68218 (DeclStmt)
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 70] leaving Stmt DeclStmt, start transform
DeclStmt 0x9b68218
`-VarDecl 0x9b67e70 ____localvar____0 'int [3][3][2]'
  `-InitListExpr 0x9b68040 'int [3][3][2]'
    |-InitListExpr 0x9b68068 'int [3][2]'
    | |-InitListExpr 0x9b680a0 'int [2]'
    | | |-IntegerLiteral 0x9b67ea0 'int' 1
    | | `-IntegerLiteral 0x9b67eb8 'int' 2
    | `-InitListExpr 0x9b680d0 'int [2]'
    |   `-IntegerLiteral 0x9b67ed0 'int' 3
    |-InitListExpr 0x9b68100 'int [3][2]'
    `-InitListExpr 0x9b68130 'int [3][2]'
      |-InitListExpr 0x9b68168 'int [2]'
      | `-IntegerLiteral 0x9b67f40 'int' 3
      `-InitListExpr 0x9b68198 'int [2]'
        |-IntegerLiteral 0x9b67f80 'int' 9
        `-IntegerLiteral 0x9b67f98 'int' 8
int ____localvar____0[3][3][2] = { { 1, 2, 3 }, {  }, { { 3 }, { 9, 8 } } };
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b68358 (BinaryOperator) | range 
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 62] push stmt BinaryOperator 9b68358 9ae9f60 9ae9f60
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b68328 (ArraySubscriptExpr) | range 
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 62] push stmt ArraySubscriptExpr 9b68328 9af3150 9af3150
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b68318 (ImplicitCastExpr) | range 
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 62] push stmt ImplicitCastExpr 9b68318 9889f60 9889f60
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b682e8 (ArraySubscriptExpr) | range 
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 62] push stmt ArraySubscriptExpr 9b682e8 98ab298 98ab298
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b682d8 (ImplicitCastExpr) | range 
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 62] push stmt ImplicitCastExpr 9b682d8 9867250 9867250
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b68288 (ArraySubscriptExpr) | range 
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 62] push stmt ArraySubscriptExpr 9b68288 9adfd18 9adfd18
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b68278 (ImplicitCastExpr) | range 
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 62] push stmt ImplicitCastExpr 9b68278 997aba8 997aba8
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b68228 (DeclRefExpr) | range 
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 62] push stmt DeclRefExpr 9b68228 989cee8 989cee8
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b68228 (DeclRefExpr)
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 70] leaving Stmt DeclRefExpr, start transform
DeclRefExpr 0x9b68228 'int [3][3][2]' lvalue Var 0x9b67e70 '____localvar____0' 'int [3][3][2]'
____localvar____0[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b68278 (ImplicitCastExpr)
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 70] leaving Stmt ImplicitCastExpr, start transform
ImplicitCastExpr 0x9b68278 'int (*)[3][2]' <ArrayToPointerDecay>
`-DeclRefExpr 0x9b68228 'int [3][3][2]' lvalue Var 0x9b67e70 '____localvar____0' 'int [3][3][2]'
____localvar____0[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b68240 (IntegerLiteral) | range 
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 62] push stmt IntegerLiteral 9b68240 9867428 9867428
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b68240 (IntegerLiteral)
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 70] leaving Stmt IntegerLiteral, start transform
IntegerLiteral 0x9b68240 'int' 0
0[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b68288 (ArraySubscriptExpr)
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 70] leaving Stmt ArraySubscriptExpr, start transform
ArraySubscriptExpr 0x9b68288 'int [3][2]' lvalue
|-ImplicitCastExpr 0x9b68278 'int (*)[3][2]' <ArrayToPointerDecay>
| `-DeclRefExpr 0x9b68228 'int [3][3][2]' lvalue Var 0x9b67e70 '____localvar____0' 'int [3][3][2]'
`-IntegerLiteral 0x9b68240 'int' 0
____localvar____0[0][DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b682d8 (ImplicitCastExpr)
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 70] leaving Stmt ImplicitCastExpr, start transform
ImplicitCastExpr 0x9b682d8 'int (*)[2]' <ArrayToPointerDecay>
`-ArraySubscriptExpr 0x9b68288 'int [3][2]' lvalue
  |-ImplicitCastExpr 0x9b68278 'int (*)[3][2]' <ArrayToPointerDecay>
  | `-DeclRefExpr 0x9b68228 'int [3][3][2]' lvalue Var 0x9b67e70 '____localvar____0' 'int [3][3][2]'
  `-IntegerLiteral 0x9b68240 'int' 0
____localvar____0[0][DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b682a0 (IntegerLiteral) | range 
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 62] push stmt IntegerLiteral 9b682a0 992db10 992db10
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b682a0 (IntegerLiteral)
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 70] leaving Stmt IntegerLiteral, start transform
IntegerLiteral 0x9b682a0 'int' 0
0[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b682e8 (ArraySubscriptExpr)
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 70] leaving Stmt ArraySubscriptExpr, start transform
ArraySubscriptExpr 0x9b682e8 'int [2]' lvalue
|-ImplicitCastExpr 0x9b682d8 'int (*)[2]' <ArrayToPointerDecay>
| `-ArraySubscriptExpr 0x9b68288 'int [3][2]' lvalue
|   |-ImplicitCastExpr 0x9b68278 'int (*)[3][2]' <ArrayToPointerDecay>
|   | `-DeclRefExpr 0x9b68228 'int [3][3][2]' lvalue Var 0x9b67e70 '____localvar____0' 'int [3][3][2]'
|   `-IntegerLiteral 0x9b68240 'int' 0
`-IntegerLiteral 0x9b682a0 'int' 0
____localvar____0[0][0][DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b68318 (ImplicitCastExpr)
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 70] leaving Stmt ImplicitCastExpr, start transform
ImplicitCastExpr 0x9b68318 'int *' <ArrayToPointerDecay>
`-ArraySubscriptExpr 0x9b682e8 'int [2]' lvalue
  |-ImplicitCastExpr 0x9b682d8 'int (*)[2]' <ArrayToPointerDecay>
  | `-ArraySubscriptExpr 0x9b68288 'int [3][2]' lvalue
  |   |-ImplicitCastExpr 0x9b68278 'int (*)[3][2]' <ArrayToPointerDecay>
  |   | `-DeclRefExpr 0x9b68228 'int [3][3][2]' lvalue Var 0x9b67e70 '____localvar____0' 'int [3][3][2]'
  |   `-IntegerLiteral 0x9b68240 'int' 0
  `-IntegerLiteral 0x9b682a0 'int' 0
____localvar____0[0][0][DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b68300 (IntegerLiteral) | range 
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 62] push stmt IntegerLiteral 9b68300 998eac8 998eac8
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b68300 (IntegerLiteral)
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 70] leaving Stmt IntegerLiteral, start transform
IntegerLiteral 0x9b68300 'int' 1
1[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b68328 (ArraySubscriptExpr)
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 70] leaving Stmt ArraySubscriptExpr, start transform
ArraySubscriptExpr 0x9b68328 'int' lvalue
|-ImplicitCastExpr 0x9b68318 'int *' <ArrayToPointerDecay>
| `-ArraySubscriptExpr 0x9b682e8 'int [2]' lvalue
|   |-ImplicitCastExpr 0x9b682d8 'int (*)[2]' <ArrayToPointerDecay>
|   | `-ArraySubscriptExpr 0x9b68288 'int [3][2]' lvalue
|   |   |-ImplicitCastExpr 0x9b68278 'int (*)[3][2]' <ArrayToPointerDecay>
|   |   | `-DeclRefExpr 0x9b68228 'int [3][3][2]' lvalue Var 0x9b67e70 '____localvar____0' 'int [3][3][2]'
|   |   `-IntegerLiteral 0x9b68240 'int' 0
|   `-IntegerLiteral 0x9b682a0 'int' 0
`-IntegerLiteral 0x9b68300 'int' 1
____localvar____0[0][0][1][DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b68340 (IntegerLiteral) | range 
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 62] push stmt IntegerLiteral 9b68340 9982ff0 9982ff0
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b68340 (IntegerLiteral)
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 70] leaving Stmt IntegerLiteral, start transform
IntegerLiteral 0x9b68340 'int' 0
0[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b68358 (BinaryOperator)
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 70] leaving Stmt BinaryOperator, start transform
BinaryOperator 0x9b68358 'int' lvalue '='
|-ArraySubscriptExpr 0x9b68328 'int' lvalue
| |-ImplicitCastExpr 0x9b68318 'int *' <ArrayToPointerDecay>
| | `-ArraySubscriptExpr 0x9b682e8 'int [2]' lvalue
| |   |-ImplicitCastExpr 0x9b682d8 'int (*)[2]' <ArrayToPointerDecay>
| |   | `-ArraySubscriptExpr 0x9b68288 'int [3][2]' lvalue
| |   |   |-ImplicitCastExpr 0x9b68278 'int (*)[3][2]' <ArrayToPointerDecay>
| |   |   | `-DeclRefExpr 0x9b68228 'int [3][3][2]' lvalue Var 0x9b67e70 '____localvar____0' 'int [3][3][2]'
| |   |   `-IntegerLiteral 0x9b68240 'int' 0
| |   `-IntegerLiteral 0x9b682a0 'int' 0
| `-IntegerLiteral 0x9b68300 'int' 1
`-IntegerLiteral 0x9b68340 'int' 0
____localvar____0[0][0][1] = 0[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b68370 (CompoundStmt)
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 70] leaving Stmt CompoundStmt, start transform
CompoundStmt 0x9b68370
|-DeclStmt 0x9b68218
| `-VarDecl 0x9b67e70 ____localvar____0 'int [3][3][2]'
|   `-InitListExpr 0x9b68040 'int [3][3][2]'
|     |-InitListExpr 0x9b68068 'int [3][2]'
|     | |-InitListExpr 0x9b680a0 'int [2]'
|     | | |-IntegerLiteral 0x9b67ea0 'int' 1
|     | | `-IntegerLiteral 0x9b67eb8 'int' 2
|     | `-InitListExpr 0x9b680d0 'int [2]'
|     |   `-IntegerLiteral 0x9b67ed0 'int' 3
|     |-InitListExpr 0x9b68100 'int [3][2]'
|     `-InitListExpr 0x9b68130 'int [3][2]'
|       |-InitListExpr 0x9b68168 'int [2]'
|       | `-IntegerLiteral 0x9b67f40 'int' 3
|       `-InitListExpr 0x9b68198 'int [2]'
|         |-IntegerLiteral 0x9b67f80 'int' 9
|         `-IntegerLiteral 0x9b67f98 'int' 8
`-BinaryOperator 0x9b68358 'int' lvalue '='
  |-ArraySubscriptExpr 0x9b68328 'int' lvalue
  | |-ImplicitCastExpr 0x9b68318 'int *' <ArrayToPointerDecay>
  | | `-ArraySubscriptExpr 0x9b682e8 'int [2]' lvalue
  | |   |-ImplicitCastExpr 0x9b682d8 'int (*)[2]' <ArrayToPointerDecay>
  | |   | `-ArraySubscriptExpr 0x9b68288 'int [3][2]' lvalue
  | |   |   |-ImplicitCastExpr 0x9b68278 'int (*)[3][2]' <ArrayToPointerDecay>
  | |   |   | `-DeclRefExpr 0x9b68228 'int [3][3][2]' lvalue Var 0x9b67e70 '____localvar____0' 'int [3][3][2]'
  | |   |   `-IntegerLiteral 0x9b68240 'int' 0
  | |   `-IntegerLiteral 0x9b682a0 'int' 0
  | `-IntegerLiteral 0x9b68300 'int' 1
  `-IntegerLiteral 0x9b68340 'int' 0
{
    int ____localvar____0[3][3][2] = { { 1, 2, 3 }, {  }, { { 3 }, { 9, 8 } } };
    ____localvar____0[0][0][1] = 0;
}
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 52] exit decl 9b67d70 (Function)
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 45] exitDecl
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 30] END StmtPretransformer
[DEBUG][alg/FlattenCFG/LocalDeclMover.cpp - line 5] START LocalDeclMover
FunctionDecl 0x9b67d70 <test/_array.cpp:6:1, line:9:1> declref 'void (void)'
`-CompoundStmt 0x9b68370 <line:6:16, line:9:1>
  |-DeclStmt 0x9b68218 <line:7:2, col:47>
  | `-VarDecl 0x9b67e70 <col:2, col:46> ____localvar____0 'int [3][3][2]'
  |   `-InitListExpr 0x9b68040 <col:18, col:46> 'int [3][3][2]'
  |     |-InitListExpr 0x9b68068 <col:20, col:26> 'int [3][2]'
  |     | |-InitListExpr 0x9b680a0 <col:21, col:23> 'int [2]'
  |     | | |-IntegerLiteral 0x9b67ea0 <col:21> 'int' 1
  |     | | `-IntegerLiteral 0x9b67eb8 <col:23> 'int' 2
  |     | `-InitListExpr 0x9b680d0 <col:25> 'int [2]'
  |     |   `-IntegerLiteral 0x9b67ed0 <col:25> 'int' 3
  |     |-InitListExpr 0x9b68100 <col:29, col:30> 'int [3][2]'
  |     `-InitListExpr 0x9b68130 <col:33, col:44> 'int [3][2]'
  |       |-InitListExpr 0x9b68168 <col:34, col:37> 'int [2]'
  |       | `-IntegerLiteral 0x9b67f40 <col:35> 'int' 3
  |       `-InitListExpr 0x9b68198 <col:39, col:43> 'int [2]'
  |         |-IntegerLiteral 0x9b67f80 <col:40> 'int' 9
  |         `-IntegerLiteral 0x9b67f98 <col:42> 'int' 8
  `-BinaryOperator 0x9b68358 <line:8:2, col:15> 'int' lvalue '='
    |-ArraySubscriptExpr 0x9b68328 <col:2, col:11> 'int' lvalue
    | |-ImplicitCastExpr 0x9b68318 <col:2, col:8> 'int *' <ArrayToPointerDecay>
    | | `-ArraySubscriptExpr 0x9b682e8 <col:2, col:8> 'int [2]' lvalue
    | |   |-ImplicitCastExpr 0x9b682d8 <col:2, col:5> 'int (*)[2]' <ArrayToPointerDecay>
    | |   | `-ArraySubscriptExpr 0x9b68288 <col:2, col:5> 'int [3][2]' lvalue
    | |   |   |-ImplicitCastExpr 0x9b68278 <col:2> 'int (*)[3][2]' <ArrayToPointerDecay>
    | |   |   | `-DeclRefExpr 0x9b68228 <col:2> 'int [3][3][2]' lvalue Var 0x9b67e70 '____localvar____0' 'int [3][3][2]'
    | |   |   `-IntegerLiteral 0x9b68240 <col:4> 'int' 0
    | |   `-IntegerLiteral 0x9b682a0 <col:7> 'int' 0
    | `-IntegerLiteral 0x9b68300 <col:10> 'int' 1
    `-IntegerLiteral 0x9b68340 <col:15> 'int' 0
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 50] enter decl 9b67d70 (Function)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b68370 (CompoundStmt) | range 
[DEBUG][alg/FlattenCFG/LocalDeclMover.cpp - line 48] Stmt CompoundStmt ( 9b68370 -> p 0 )
CompoundStmt 0x9b68370
|-DeclStmt 0x9b68218
| `-VarDecl 0x9b67e70 ____localvar____0 'int [3][3][2]'
|   `-InitListExpr 0x9b68040 'int [3][3][2]'
|     |-InitListExpr 0x9b68068 'int [3][2]'
|     | |-InitListExpr 0x9b680a0 'int [2]'
|     | | |-IntegerLiteral 0x9b67ea0 'int' 1
|     | | `-IntegerLiteral 0x9b67eb8 'int' 2
|     | `-InitListExpr 0x9b680d0 'int [2]'
|     |   `-IntegerLiteral 0x9b67ed0 'int' 3
|     |-InitListExpr 0x9b68100 'int [3][2]'
|     `-InitListExpr 0x9b68130 'int [3][2]'
|       |-InitListExpr 0x9b68168 'int [2]'
|       | `-IntegerLiteral 0x9b67f40 'int' 3
|       `-InitListExpr 0x9b68198 'int [2]'
|         |-IntegerLiteral 0x9b67f80 'int' 9
|         `-IntegerLiteral 0x9b67f98 'int' 8
`-BinaryOperator 0x9b68358 'int' lvalue '='
  |-ArraySubscriptExpr 0x9b68328 'int' lvalue
  | |-ImplicitCastExpr 0x9b68318 'int *' <ArrayToPointerDecay>
  | | `-ArraySubscriptExpr 0x9b682e8 'int [2]' lvalue
  | |   |-ImplicitCastExpr 0x9b682d8 'int (*)[2]' <ArrayToPointerDecay>
  | |   | `-ArraySubscriptExpr 0x9b68288 'int [3][2]' lvalue
  | |   |   |-ImplicitCastExpr 0x9b68278 'int (*)[3][2]' <ArrayToPointerDecay>
  | |   |   | `-DeclRefExpr 0x9b68228 'int [3][3][2]' lvalue Var 0x9b67e70 '____localvar____0' 'int [3][3][2]'
  | |   |   `-IntegerLiteral 0x9b68240 'int' 0
  | |   `-IntegerLiteral 0x9b682a0 'int' 0
  | `-IntegerLiteral 0x9b68300 'int' 1
  `-IntegerLiteral 0x9b68340 'int' 0
{
    int ____localvar____0[3][3][2] = { { 1, 2, 3 }, {  }, { { 3 }, { 9, 8 } } };
    ____localvar____0[0][0][1] = 0;
}
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b68218 (DeclStmt) | range 
[DEBUG][alg/FlattenCFG/LocalDeclMover.cpp - line 48] Stmt DeclStmt ( 9b68218 -> p 9b68370 )
DeclStmt 0x9b68218
`-VarDecl 0x9b67e70 ____localvar____0 'int [3][3][2]'
  `-InitListExpr 0x9b68040 'int [3][3][2]'
    |-InitListExpr 0x9b68068 'int [3][2]'
    | |-InitListExpr 0x9b680a0 'int [2]'
    | | |-IntegerLiteral 0x9b67ea0 'int' 1
    | | `-IntegerLiteral 0x9b67eb8 'int' 2
    | `-InitListExpr 0x9b680d0 'int [2]'
    |   `-IntegerLiteral 0x9b67ed0 'int' 3
    |-InitListExpr 0x9b68100 'int [3][2]'
    `-InitListExpr 0x9b68130 'int [3][2]'
      |-InitListExpr 0x9b68168 'int [2]'
      | `-IntegerLiteral 0x9b67f40 'int' 3
      `-InitListExpr 0x9b68198 'int [2]'
        |-IntegerLiteral 0x9b67f80 'int' 9
        `-IntegerLiteral 0x9b67f98 'int' 8
int ____localvar____0[3][3][2] = { { 1, 2, 3 }, {  }, { { 3 }, { 9, 8 } } };
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 50] enter decl 9b67e70 (Var)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b67de8 (IntegerLiteral) | range 
[DEBUG][alg/FlattenCFG/LocalDeclMover.cpp - line 48] Stmt IntegerLiteral ( 9b67de8 -> p 0 )
IntegerLiteral 0x9b67de8 'int' 2
2[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b67de8 (IntegerLiteral)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b67dd0 (IntegerLiteral) | range 
[DEBUG][alg/FlattenCFG/LocalDeclMover.cpp - line 48] Stmt IntegerLiteral ( 9b67dd0 -> p 0 )
IntegerLiteral 0x9b67dd0 'int' 3
3[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b67dd0 (IntegerLiteral)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b68040 (InitListExpr) | range 
[DEBUG][alg/FlattenCFG/LocalDeclMover.cpp - line 48] Stmt InitListExpr ( 9b68010 -> p 0 )
InitListExpr 0x9b68010 'int [3][3][2]'
|-InitListExpr 0x9b67ee8 'int [3][2]'
| |-IntegerLiteral 0x9b67ea0 'int' 1
| |-IntegerLiteral 0x9b67eb8 'int' 2
| `-IntegerLiteral 0x9b67ed0 'int' 3
|-InitListExpr 0x9b67f18 'int [3][2]'
`-InitListExpr 0x9b67fe0 'int [3][2]'
  |-InitListExpr 0x9b67f58 'int [2]'
  | `-IntegerLiteral 0x9b67f40 'int' 3
  `-InitListExpr 0x9b67fb0 'int [2]'
    |-IntegerLiteral 0x9b67f80 'int' 9
    `-IntegerLiteral 0x9b67f98 'int' 8
{ { 1, 2, 3 }, {  }, { { 3 }, { 9, 8 } } }[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b67ee8 (InitListExpr) | range 
[DEBUG][alg/FlattenCFG/LocalDeclMover.cpp - line 48] Stmt InitListExpr ( 9b67ee8 -> p 9b68010 )
InitListExpr 0x9b67ee8 'int [3][2]'
|-IntegerLiteral 0x9b67ea0 'int' 1
|-IntegerLiteral 0x9b67eb8 'int' 2
`-IntegerLiteral 0x9b67ed0 'int' 3
{ 1, 2, 3 }[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b67ea0 (IntegerLiteral) | range 
[DEBUG][alg/FlattenCFG/LocalDeclMover.cpp - line 48] Stmt IntegerLiteral ( 9b67ea0 -> p 9b67ee8 )
IntegerLiteral 0x9b67ea0 'int' 1
1[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b67ea0 (IntegerLiteral)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b67eb8 (IntegerLiteral) | range 
[DEBUG][alg/FlattenCFG/LocalDeclMover.cpp - line 48] Stmt IntegerLiteral ( 9b67eb8 -> p 9b67ee8 )
IntegerLiteral 0x9b67eb8 'int' 2
2[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b67eb8 (IntegerLiteral)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b67ed0 (IntegerLiteral) | range 
[DEBUG][alg/FlattenCFG/LocalDeclMover.cpp - line 48] Stmt IntegerLiteral ( 9b67ed0 -> p 9b67ee8 )
IntegerLiteral 0x9b67ed0 'int' 3
3[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b67ed0 (IntegerLiteral)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b67ee8 (InitListExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b67f18 (InitListExpr) | range 
[DEBUG][alg/FlattenCFG/LocalDeclMover.cpp - line 48] Stmt InitListExpr ( 9b67f18 -> p 9b68010 )
InitListExpr 0x9b67f18 'int [3][2]'
{  }[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b67f18 (InitListExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b67fe0 (InitListExpr) | range 
[DEBUG][alg/FlattenCFG/LocalDeclMover.cpp - line 48] Stmt InitListExpr ( 9b67fe0 -> p 9b68010 )
InitListExpr 0x9b67fe0 'int [3][2]'
|-InitListExpr 0x9b67f58 'int [2]'
| `-IntegerLiteral 0x9b67f40 'int' 3
`-InitListExpr 0x9b67fb0 'int [2]'
  |-IntegerLiteral 0x9b67f80 'int' 9
  `-IntegerLiteral 0x9b67f98 'int' 8
{ { 3 }, { 9, 8 } }[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b67f58 (InitListExpr) | range 
[DEBUG][alg/FlattenCFG/LocalDeclMover.cpp - line 48] Stmt InitListExpr ( 9b67f58 -> p 9b67fe0 )
InitListExpr 0x9b67f58 'int [2]'
`-IntegerLiteral 0x9b67f40 'int' 3
{ 3 }[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b67f40 (IntegerLiteral) | range 
[DEBUG][alg/FlattenCFG/LocalDeclMover.cpp - line 48] Stmt IntegerLiteral ( 9b67f40 -> p 9b67f58 )
IntegerLiteral 0x9b67f40 'int' 3
3[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b67f40 (IntegerLiteral)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b67f58 (InitListExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b67fb0 (InitListExpr) | range 
[DEBUG][alg/FlattenCFG/LocalDeclMover.cpp - line 48] Stmt InitListExpr ( 9b67fb0 -> p 9b67fe0 )
InitListExpr 0x9b67fb0 'int [2]'
|-IntegerLiteral 0x9b67f80 'int' 9
`-IntegerLiteral 0x9b67f98 'int' 8
{ 9, 8 }[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b67f80 (IntegerLiteral) | range 
[DEBUG][alg/FlattenCFG/LocalDeclMover.cpp - line 48] Stmt IntegerLiteral ( 9b67f80 -> p 9b67fb0 )
IntegerLiteral 0x9b67f80 'int' 9
9[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b67f80 (IntegerLiteral)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b67f98 (IntegerLiteral) | range 
[DEBUG][alg/FlattenCFG/LocalDeclMover.cpp - line 48] Stmt IntegerLiteral ( 9b67f98 -> p 9b67fb0 )
IntegerLiteral 0x9b67f98 'int' 8
8[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b67f98 (IntegerLiteral)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b67fb0 (InitListExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b67fe0 (InitListExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b68040 (InitListExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 52] exit decl 9b67e70 (Var)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b68218 (DeclStmt)
[DEBUG][alg/FlattenCFG/LocalDeclMover.cpp - line 177] WorkOnDeclStmt
[DEBUG][alg/FlattenCFG/LocalDeclMover.cpp - line 229] Handle VarDecl ____localvar____0 9b67e70 | Ctx 9b67d94(Function) -> p 98706f4
[DEBUG][alg/FlattenCFG/LocalDeclMover.cpp - line 254] QualType 
int identifier[3][3][2]
InitListExpr 0x9b68040 'int [3][3][2]'
|-InitListExpr 0x9b68068 'int [3][2]'
| |-InitListExpr 0x9b680a0 'int [2]'
| | |-IntegerLiteral 0x9b67ea0 'int' 1
| | `-IntegerLiteral 0x9b67eb8 'int' 2
| `-InitListExpr 0x9b680d0 'int [2]'
|   `-IntegerLiteral 0x9b67ed0 'int' 3
|-InitListExpr 0x9b68100 'int [3][2]'
`-InitListExpr 0x9b68130 'int [3][2]'
  |-InitListExpr 0x9b68168 'int [2]'
  | `-IntegerLiteral 0x9b67f40 'int' 3
  `-InitListExpr 0x9b68198 'int [2]'
    |-IntegerLiteral 0x9b67f80 'int' 9
    `-IntegerLiteral 0x9b67f98 'int' 8
[DEBUG][alg/FlattenCFG/LocalDeclMover.cpp - line 297] ArrayType
[DEBUG][alg/Algorithm.cpp - line 215] Build sub expr idx = 0
[DEBUG][alg/Algorithm.cpp - line 215] Build sub expr idx = 1
[DEBUG][alg/Algorithm.cpp - line 215] Build sub expr idx = 2
[DEBUG][alg/Algorithm.cpp - line 215] Build sub expr idx = 0
[DEBUG][alg/Algorithm.cpp - line 215] Build sub expr idx = 1
[DEBUG][alg/Algorithm.cpp - line 215] Build sub expr idx = 2
[DEBUG][alg/Algorithm.cpp - line 215] Build sub expr idx = 0
[DEBUG][alg/Algorithm.cpp - line 215] Build sub expr idx = 1
[DEBUG][alg/Algorithm.cpp - line 215] Build sub expr idx = 2
[DEBUG][alg/Algorithm.cpp - line 215] Build sub expr idx = 0
[DEBUG][alg/Algorithm.cpp - line 215] Build sub expr idx = 1
[DEBUG][alg/Algorithm.cpp - line 215] Build sub expr idx = 2
[DEBUG][alg/Algorithm.cpp - line 215] Build sub expr idx = 0
[DEBUG][alg/Algorithm.cpp - line 215] Build sub expr idx = 1
[DEBUG][alg/Algorithm.cpp - line 215] Build sub expr idx = 2
[DEBUG][alg/Algorithm.cpp - line 215] Build sub expr idx = 0
[DEBUG][alg/Algorithm.cpp - line 215] Build sub expr idx = 1
[DEBUG][alg/Algorithm.cpp - line 215] Build sub expr idx = 2
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b68358 (BinaryOperator) | range 
[DEBUG][alg/FlattenCFG/LocalDeclMover.cpp - line 48] Stmt BinaryOperator ( 9b68358 -> p 9b68370 )
BinaryOperator 0x9b68358 'int' lvalue '='
|-ArraySubscriptExpr 0x9b68328 'int' lvalue
| |-ImplicitCastExpr 0x9b68318 'int *' <ArrayToPointerDecay>
| | `-ArraySubscriptExpr 0x9b682e8 'int [2]' lvalue
| |   |-ImplicitCastExpr 0x9b682d8 'int (*)[2]' <ArrayToPointerDecay>
| |   | `-ArraySubscriptExpr 0x9b68288 'int [3][2]' lvalue
| |   |   |-ImplicitCastExpr 0x9b68278 'int (*)[3][2]' <ArrayToPointerDecay>
| |   |   | `-DeclRefExpr 0x9b68228 'int [3][3][2]' lvalue Var 0x9b67e70 '____localvar____0' 'int [3][3][2]'
| |   |   `-IntegerLiteral 0x9b68240 'int' 0
| |   `-IntegerLiteral 0x9b682a0 'int' 0
| `-IntegerLiteral 0x9b68300 'int' 1
`-IntegerLiteral 0x9b68340 'int' 0
____localvar____0[0][0][1] = 0[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b68328 (ArraySubscriptExpr) | range 
[DEBUG][alg/FlattenCFG/LocalDeclMover.cpp - line 48] Stmt ArraySubscriptExpr ( 9b68328 -> p 9b68358 )
ArraySubscriptExpr 0x9b68328 'int' lvalue
|-ImplicitCastExpr 0x9b68318 'int *' <ArrayToPointerDecay>
| `-ArraySubscriptExpr 0x9b682e8 'int [2]' lvalue
|   |-ImplicitCastExpr 0x9b682d8 'int (*)[2]' <ArrayToPointerDecay>
|   | `-ArraySubscriptExpr 0x9b68288 'int [3][2]' lvalue
|   |   |-ImplicitCastExpr 0x9b68278 'int (*)[3][2]' <ArrayToPointerDecay>
|   |   | `-DeclRefExpr 0x9b68228 'int [3][3][2]' lvalue Var 0x9b67e70 '____localvar____0' 'int [3][3][2]'
|   |   `-IntegerLiteral 0x9b68240 'int' 0
|   `-IntegerLiteral 0x9b682a0 'int' 0
`-IntegerLiteral 0x9b68300 'int' 1
____localvar____0[0][0][1][DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b68318 (ImplicitCastExpr) | range 
[DEBUG][alg/FlattenCFG/LocalDeclMover.cpp - line 48] Stmt ImplicitCastExpr ( 9b68318 -> p 9b68328 )
ImplicitCastExpr 0x9b68318 'int *' <ArrayToPointerDecay>
`-ArraySubscriptExpr 0x9b682e8 'int [2]' lvalue
  |-ImplicitCastExpr 0x9b682d8 'int (*)[2]' <ArrayToPointerDecay>
  | `-ArraySubscriptExpr 0x9b68288 'int [3][2]' lvalue
  |   |-ImplicitCastExpr 0x9b68278 'int (*)[3][2]' <ArrayToPointerDecay>
  |   | `-DeclRefExpr 0x9b68228 'int [3][3][2]' lvalue Var 0x9b67e70 '____localvar____0' 'int [3][3][2]'
  |   `-IntegerLiteral 0x9b68240 'int' 0
  `-IntegerLiteral 0x9b682a0 'int' 0
____localvar____0[0][0][DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b682e8 (ArraySubscriptExpr) | range 
[DEBUG][alg/FlattenCFG/LocalDeclMover.cpp - line 48] Stmt ArraySubscriptExpr ( 9b682e8 -> p 9b68318 )
ArraySubscriptExpr 0x9b682e8 'int [2]' lvalue
|-ImplicitCastExpr 0x9b682d8 'int (*)[2]' <ArrayToPointerDecay>
| `-ArraySubscriptExpr 0x9b68288 'int [3][2]' lvalue
|   |-ImplicitCastExpr 0x9b68278 'int (*)[3][2]' <ArrayToPointerDecay>
|   | `-DeclRefExpr 0x9b68228 'int [3][3][2]' lvalue Var 0x9b67e70 '____localvar____0' 'int [3][3][2]'
|   `-IntegerLiteral 0x9b68240 'int' 0
`-IntegerLiteral 0x9b682a0 'int' 0
____localvar____0[0][0][DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b682d8 (ImplicitCastExpr) | range 
[DEBUG][alg/FlattenCFG/LocalDeclMover.cpp - line 48] Stmt ImplicitCastExpr ( 9b682d8 -> p 9b682e8 )
ImplicitCastExpr 0x9b682d8 'int (*)[2]' <ArrayToPointerDecay>
`-ArraySubscriptExpr 0x9b68288 'int [3][2]' lvalue
  |-ImplicitCastExpr 0x9b68278 'int (*)[3][2]' <ArrayToPointerDecay>
  | `-DeclRefExpr 0x9b68228 'int [3][3][2]' lvalue Var 0x9b67e70 '____localvar____0' 'int [3][3][2]'
  `-IntegerLiteral 0x9b68240 'int' 0
____localvar____0[0][DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b68288 (ArraySubscriptExpr) | range 
[DEBUG][alg/FlattenCFG/LocalDeclMover.cpp - line 48] Stmt ArraySubscriptExpr ( 9b68288 -> p 9b682d8 )
ArraySubscriptExpr 0x9b68288 'int [3][2]' lvalue
|-ImplicitCastExpr 0x9b68278 'int (*)[3][2]' <ArrayToPointerDecay>
| `-DeclRefExpr 0x9b68228 'int [3][3][2]' lvalue Var 0x9b67e70 '____localvar____0' 'int [3][3][2]'
`-IntegerLiteral 0x9b68240 'int' 0
____localvar____0[0][DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b68278 (ImplicitCastExpr) | range 
[DEBUG][alg/FlattenCFG/LocalDeclMover.cpp - line 48] Stmt ImplicitCastExpr ( 9b68278 -> p 9b68288 )
ImplicitCastExpr 0x9b68278 'int (*)[3][2]' <ArrayToPointerDecay>
`-DeclRefExpr 0x9b68228 'int [3][3][2]' lvalue Var 0x9b67e70 '____localvar____0' 'int [3][3][2]'
____localvar____0[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b68228 (DeclRefExpr) | range 
[DEBUG][alg/FlattenCFG/LocalDeclMover.cpp - line 48] Stmt DeclRefExpr ( 9b68228 -> p 9b68278 )
DeclRefExpr 0x9b68228 'int [3][3][2]' lvalue Var 0x9b67e70 '____localvar____0' 'int [3][3][2]'
____localvar____0[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b68228 (DeclRefExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b68278 (ImplicitCastExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b68240 (IntegerLiteral) | range 
[DEBUG][alg/FlattenCFG/LocalDeclMover.cpp - line 48] Stmt IntegerLiteral ( 9b68240 -> p 9b68288 )
IntegerLiteral 0x9b68240 'int' 0
0[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b68240 (IntegerLiteral)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b68288 (ArraySubscriptExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b682d8 (ImplicitCastExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b682a0 (IntegerLiteral) | range 
[DEBUG][alg/FlattenCFG/LocalDeclMover.cpp - line 48] Stmt IntegerLiteral ( 9b682a0 -> p 9b682e8 )
IntegerLiteral 0x9b682a0 'int' 0
0[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b682a0 (IntegerLiteral)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b682e8 (ArraySubscriptExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b68318 (ImplicitCastExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b68300 (IntegerLiteral) | range 
[DEBUG][alg/FlattenCFG/LocalDeclMover.cpp - line 48] Stmt IntegerLiteral ( 9b68300 -> p 9b68328 )
IntegerLiteral 0x9b68300 'int' 1
1[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b68300 (IntegerLiteral)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b68328 (ArraySubscriptExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b68340 (IntegerLiteral) | range 
[DEBUG][alg/FlattenCFG/LocalDeclMover.cpp - line 48] Stmt IntegerLiteral ( 9b68340 -> p 9b68358 )
IntegerLiteral 0x9b68340 'int' 0
0[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b68340 (IntegerLiteral)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b68358 (BinaryOperator)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b68370 (CompoundStmt)
[DEBUG][alg/FlattenCFG/LocalDeclMover.cpp - line 109] root stmt type CompoundStmt 9b68370 | children size 1
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 52] exit decl 9b67d70 (Function)
[DEBUG][alg/FlattenCFG/LocalDeclMover.cpp - line 27] END LocalDeclMover
FunctionDecl 0x9b67d70 <test/_array.cpp:6:1, line:9:1> declref 'void (void)'
`-CompoundStmt 0x9b68370 <line:6:16, line:9:1>
  |-DeclStmt 0x9b85270 <<invalid sloc>>
  | `-VarDecl 0x9b67e70 <line:7:2, col:14> ____localvar____0 'int [3][3][2]'
  |-CompoundStmt 0x9b85280 <<invalid sloc>>
  | |-BinaryOperator 0x9b84e70 <<invalid sloc>, col:21> 'int' lvalue '='
  | | |-ArraySubscriptExpr 0x9b84e58 <<invalid sloc>> 'int' lvalue
  | | | |-ImplicitCastExpr 0x9b84e48 <<invalid sloc>> 'int *' <ArrayToPointerDecay>
  | | | | `-ArraySubscriptExpr 0x9b84e30 <<invalid sloc>> 'int [2]' lvalue
  | | | |   |-ImplicitCastExpr 0x9b84e20 <<invalid sloc>> 'int (*)[2]' <ArrayToPointerDecay>
  | | | |   | `-ArraySubscriptExpr 0x9b84e08 <<invalid sloc>> 'int [3][2]' lvalue
  | | | |   |   |-ImplicitCastExpr 0x9b84df8 <<invalid sloc>> 'int (*)[3][2]' <ArrayToPointerDecay>
  | | | |   |   | `-DeclRefExpr 0x9b84d94 <<invalid sloc>> 'int [3][3][2]' lvalue Var 0x9b67e70 '____localvar____0' 'int [3][3][2]'
  | | | |   |   `-IntegerLiteral 0x9b84db0 <<invalid sloc>> 'int' 0
  | | | |   `-IntegerLiteral 0x9b84dc8 <<invalid sloc>> 'int' 0
  | | | `-IntegerLiteral 0x9b84de0 <<invalid sloc>> 'int' 0
  | | `-IntegerLiteral 0x9b67ea0 <col:21> 'int' 1
  | |-BinaryOperator 0x9b84f18 <<invalid sloc>, col:23> 'int' lvalue '='
  | | |-ArraySubscriptExpr 0x9b84f00 <<invalid sloc>> 'int' lvalue
  | | | |-ImplicitCastExpr 0x9b84ef0 <<invalid sloc>> 'int *' <ArrayToPointerDecay>
  | | | | `-ArraySubscriptExpr 0x9b84ed8 <<invalid sloc>> 'int [2]' lvalue
  | | | |   |-ImplicitCastExpr 0x9b84ec8 <<invalid sloc>> 'int (*)[2]' <ArrayToPointerDecay>
  | | | |   | `-ArraySubscriptExpr 0x9b84eb0 <<invalid sloc>> 'int [3][2]' lvalue
  | | | |   |   |-ImplicitCastExpr 0x9b84ea0 <<invalid sloc>> 'int (*)[3][2]' <ArrayToPointerDecay>
  | | | |   |   | `-DeclRefExpr 0x9b84d94 <<invalid sloc>> 'int [3][3][2]' lvalue Var 0x9b67e70 '____localvar____0' 'int [3][3][2]'
  | | | |   |   `-IntegerLiteral 0x9b84db0 <<invalid sloc>> 'int' 0
  | | | |   `-IntegerLiteral 0x9b84dc8 <<invalid sloc>> 'int' 0
  | | | `-IntegerLiteral 0x9b84e88 <<invalid sloc>> 'int' 1
  | | `-IntegerLiteral 0x9b67eb8 <col:23> 'int' 2
  | |-BinaryOperator 0x9b84fd8 <<invalid sloc>, col:25> 'int' lvalue '='
  | | |-ArraySubscriptExpr 0x9b84fc0 <<invalid sloc>> 'int' lvalue
  | | | |-ImplicitCastExpr 0x9b84fb0 <<invalid sloc>> 'int *' <ArrayToPointerDecay>
  | | | | `-ArraySubscriptExpr 0x9b84f98 <<invalid sloc>> 'int [2]' lvalue
  | | | |   |-ImplicitCastExpr 0x9b84f88 <<invalid sloc>> 'int (*)[2]' <ArrayToPointerDecay>
  | | | |   | `-ArraySubscriptExpr 0x9b84f70 <<invalid sloc>> 'int [3][2]' lvalue
  | | | |   |   |-ImplicitCastExpr 0x9b84f60 <<invalid sloc>> 'int (*)[3][2]' <ArrayToPointerDecay>
  | | | |   |   | `-DeclRefExpr 0x9b84d94 <<invalid sloc>> 'int [3][3][2]' lvalue Var 0x9b67e70 '____localvar____0' 'int [3][3][2]'
  | | | |   |   `-IntegerLiteral 0x9b84db0 <<invalid sloc>> 'int' 0
  | | | |   `-IntegerLiteral 0x9b84f30 <<invalid sloc>> 'int' 1
  | | | `-IntegerLiteral 0x9b84f48 <<invalid sloc>> 'int' 0
  | | `-IntegerLiteral 0x9b67ed0 <col:25> 'int' 3
  | |-BinaryOperator 0x9b850c8 <<invalid sloc>, col:35> 'int' lvalue '='
  | | |-ArraySubscriptExpr 0x9b850b0 <<invalid sloc>> 'int' lvalue
  | | | |-ImplicitCastExpr 0x9b850a0 <<invalid sloc>> 'int *' <ArrayToPointerDecay>
  | | | | `-ArraySubscriptExpr 0x9b85088 <<invalid sloc>> 'int [2]' lvalue
  | | | |   |-ImplicitCastExpr 0x9b85078 <<invalid sloc>> 'int (*)[2]' <ArrayToPointerDecay>
  | | | |   | `-ArraySubscriptExpr 0x9b85060 <<invalid sloc>> 'int [3][2]' lvalue
  | | | |   |   |-ImplicitCastExpr 0x9b85050 <<invalid sloc>> 'int (*)[3][2]' <ArrayToPointerDecay>
  | | | |   |   | `-DeclRefExpr 0x9b84d94 <<invalid sloc>> 'int [3][3][2]' lvalue Var 0x9b67e70 '____localvar____0' 'int [3][3][2]'
  | | | |   |   `-IntegerLiteral 0x9b85008 <<invalid sloc>> 'int' 2
  | | | |   `-IntegerLiteral 0x9b85020 <<invalid sloc>> 'int' 0
  | | | `-IntegerLiteral 0x9b85038 <<invalid sloc>> 'int' 0
  | | `-IntegerLiteral 0x9b67f40 <col:35> 'int' 3
  | |-BinaryOperator 0x9b85188 <<invalid sloc>, col:40> 'int' lvalue '='
  | | |-ArraySubscriptExpr 0x9b85170 <<invalid sloc>> 'int' lvalue
  | | | |-ImplicitCastExpr 0x9b85160 <<invalid sloc>> 'int *' <ArrayToPointerDecay>
  | | | | `-ArraySubscriptExpr 0x9b85148 <<invalid sloc>> 'int [2]' lvalue
  | | | |   |-ImplicitCastExpr 0x9b85138 <<invalid sloc>> 'int (*)[2]' <ArrayToPointerDecay>
  | | | |   | `-ArraySubscriptExpr 0x9b85120 <<invalid sloc>> 'int [3][2]' lvalue
  | | | |   |   |-ImplicitCastExpr 0x9b85110 <<invalid sloc>> 'int (*)[3][2]' <ArrayToPointerDecay>
  | | | |   |   | `-DeclRefExpr 0x9b84d94 <<invalid sloc>> 'int [3][3][2]' lvalue Var 0x9b67e70 '____localvar____0' 'int [3][3][2]'
  | | | |   |   `-IntegerLiteral 0x9b85008 <<invalid sloc>> 'int' 2
  | | | |   `-IntegerLiteral 0x9b850e0 <<invalid sloc>> 'int' 1
  | | | `-IntegerLiteral 0x9b850f8 <<invalid sloc>> 'int' 0
  | | `-IntegerLiteral 0x9b67f80 <col:40> 'int' 9
  | `-BinaryOperator 0x9b85230 <<invalid sloc>, col:42> 'int' lvalue '='
  |   |-ArraySubscriptExpr 0x9b85218 <<invalid sloc>> 'int' lvalue
  |   | |-ImplicitCastExpr 0x9b85208 <<invalid sloc>> 'int *' <ArrayToPointerDecay>
  |   | | `-ArraySubscriptExpr 0x9b851f0 <<invalid sloc>> 'int [2]' lvalue
  |   | |   |-ImplicitCastExpr 0x9b851e0 <<invalid sloc>> 'int (*)[2]' <ArrayToPointerDecay>
  |   | |   | `-ArraySubscriptExpr 0x9b851c8 <<invalid sloc>> 'int [3][2]' lvalue
  |   | |   |   |-ImplicitCastExpr 0x9b851b8 <<invalid sloc>> 'int (*)[3][2]' <ArrayToPointerDecay>
  |   | |   |   | `-DeclRefExpr 0x9b84d94 <<invalid sloc>> 'int [3][3][2]' lvalue Var 0x9b67e70 '____localvar____0' 'int [3][3][2]'
  |   | |   |   `-IntegerLiteral 0x9b85008 <<invalid sloc>> 'int' 2
  |   | |   `-IntegerLiteral 0x9b850e0 <<invalid sloc>> 'int' 1
  |   | `-IntegerLiteral 0x9b851a0 <<invalid sloc>> 'int' 1
  |   `-IntegerLiteral 0x9b67f98 <col:42> 'int' 8
  `-BinaryOperator 0x9b68358 <line:8:2, col:15> 'int' lvalue '='
    |-ArraySubscriptExpr 0x9b68328 <col:2, col:11> 'int' lvalue
    | |-ImplicitCastExpr 0x9b68318 <col:2, col:8> 'int *' <ArrayToPointerDecay>
    | | `-ArraySubscriptExpr 0x9b682e8 <col:2, col:8> 'int [2]' lvalue
    | |   |-ImplicitCastExpr 0x9b682d8 <col:2, col:5> 'int (*)[2]' <ArrayToPointerDecay>
    | |   | `-ArraySubscriptExpr 0x9b68288 <col:2, col:5> 'int [3][2]' lvalue
    | |   |   |-ImplicitCastExpr 0x9b68278 <col:2> 'int (*)[3][2]' <ArrayToPointerDecay>
    | |   |   | `-DeclRefExpr 0x9b68228 <col:2> 'int [3][3][2]' lvalue Var 0x9b67e70 '____localvar____0' 'int [3][3][2]'
    | |   |   `-IntegerLiteral 0x9b68240 <col:4> 'int' 0
    | |   `-IntegerLiteral 0x9b682a0 <col:7> 'int' 0
    | `-IntegerLiteral 0x9b68300 <col:10> 'int' 1
    `-IntegerLiteral 0x9b68340 <col:15> 'int' 0
[DEBUG][alg/FlattenCFG/CFGFlattener.cpp - line 20] decl before flatten
FunctionDecl 0x9b67d70 <test/_array.cpp:6:1, line:9:1> declref 'void (void)'
`-CompoundStmt 0x9b68370 <line:6:16, line:9:1>
  |-DeclStmt 0x9b85270 <<invalid sloc>>
  | `-VarDecl 0x9b67e70 <line:7:2, col:14> ____localvar____0 'int [3][3][2]'
  |-CompoundStmt 0x9b85280 <<invalid sloc>>
  | |-BinaryOperator 0x9b84e70 <<invalid sloc>, col:21> 'int' lvalue '='
  | | |-ArraySubscriptExpr 0x9b84e58 <<invalid sloc>> 'int' lvalue
  | | | |-ImplicitCastExpr 0x9b84e48 <<invalid sloc>> 'int *' <ArrayToPointerDecay>
  | | | | `-ArraySubscriptExpr 0x9b84e30 <<invalid sloc>> 'int [2]' lvalue
  | | | |   |-ImplicitCastExpr 0x9b84e20 <<invalid sloc>> 'int (*)[2]' <ArrayToPointerDecay>
  | | | |   | `-ArraySubscriptExpr 0x9b84e08 <<invalid sloc>> 'int [3][2]' lvalue
  | | | |   |   |-ImplicitCastExpr 0x9b84df8 <<invalid sloc>> 'int (*)[3][2]' <ArrayToPointerDecay>
  | | | |   |   | `-DeclRefExpr 0x9b84d94 <<invalid sloc>> 'int [3][3][2]' lvalue Var 0x9b67e70 '____localvar____0' 'int [3][3][2]'
  | | | |   |   `-IntegerLiteral 0x9b84db0 <<invalid sloc>> 'int' 0
  | | | |   `-IntegerLiteral 0x9b84dc8 <<invalid sloc>> 'int' 0
  | | | `-IntegerLiteral 0x9b84de0 <<invalid sloc>> 'int' 0
  | | `-IntegerLiteral 0x9b67ea0 <col:21> 'int' 1
  | |-BinaryOperator 0x9b84f18 <<invalid sloc>, col:23> 'int' lvalue '='
  | | |-ArraySubscriptExpr 0x9b84f00 <<invalid sloc>> 'int' lvalue
  | | | |-ImplicitCastExpr 0x9b84ef0 <<invalid sloc>> 'int *' <ArrayToPointerDecay>
  | | | | `-ArraySubscriptExpr 0x9b84ed8 <<invalid sloc>> 'int [2]' lvalue
  | | | |   |-ImplicitCastExpr 0x9b84ec8 <<invalid sloc>> 'int (*)[2]' <ArrayToPointerDecay>
  | | | |   | `-ArraySubscriptExpr 0x9b84eb0 <<invalid sloc>> 'int [3][2]' lvalue
  | | | |   |   |-ImplicitCastExpr 0x9b84ea0 <<invalid sloc>> 'int (*)[3][2]' <ArrayToPointerDecay>
  | | | |   |   | `-DeclRefExpr 0x9b84d94 <<invalid sloc>> 'int [3][3][2]' lvalue Var 0x9b67e70 '____localvar____0' 'int [3][3][2]'
  | | | |   |   `-IntegerLiteral 0x9b84db0 <<invalid sloc>> 'int' 0
  | | | |   `-IntegerLiteral 0x9b84dc8 <<invalid sloc>> 'int' 0
  | | | `-IntegerLiteral 0x9b84e88 <<invalid sloc>> 'int' 1
  | | `-IntegerLiteral 0x9b67eb8 <col:23> 'int' 2
  | |-BinaryOperator 0x9b84fd8 <<invalid sloc>, col:25> 'int' lvalue '='
  | | |-ArraySubscriptExpr 0x9b84fc0 <<invalid sloc>> 'int' lvalue
  | | | |-ImplicitCastExpr 0x9b84fb0 <<invalid sloc>> 'int *' <ArrayToPointerDecay>
  | | | | `-ArraySubscriptExpr 0x9b84f98 <<invalid sloc>> 'int [2]' lvalue
  | | | |   |-ImplicitCastExpr 0x9b84f88 <<invalid sloc>> 'int (*)[2]' <ArrayToPointerDecay>
  | | | |   | `-ArraySubscriptExpr 0x9b84f70 <<invalid sloc>> 'int [3][2]' lvalue
  | | | |   |   |-ImplicitCastExpr 0x9b84f60 <<invalid sloc>> 'int (*)[3][2]' <ArrayToPointerDecay>
  | | | |   |   | `-DeclRefExpr 0x9b84d94 <<invalid sloc>> 'int [3][3][2]' lvalue Var 0x9b67e70 '____localvar____0' 'int [3][3][2]'
  | | | |   |   `-IntegerLiteral 0x9b84db0 <<invalid sloc>> 'int' 0
  | | | |   `-IntegerLiteral 0x9b84f30 <<invalid sloc>> 'int' 1
  | | | `-IntegerLiteral 0x9b84f48 <<invalid sloc>> 'int' 0
  | | `-IntegerLiteral 0x9b67ed0 <col:25> 'int' 3
  | |-BinaryOperator 0x9b850c8 <<invalid sloc>, col:35> 'int' lvalue '='
  | | |-ArraySubscriptExpr 0x9b850b0 <<invalid sloc>> 'int' lvalue
  | | | |-ImplicitCastExpr 0x9b850a0 <<invalid sloc>> 'int *' <ArrayToPointerDecay>
  | | | | `-ArraySubscriptExpr 0x9b85088 <<invalid sloc>> 'int [2]' lvalue
  | | | |   |-ImplicitCastExpr 0x9b85078 <<invalid sloc>> 'int (*)[2]' <ArrayToPointerDecay>
  | | | |   | `-ArraySubscriptExpr 0x9b85060 <<invalid sloc>> 'int [3][2]' lvalue
  | | | |   |   |-ImplicitCastExpr 0x9b85050 <<invalid sloc>> 'int (*)[3][2]' <ArrayToPointerDecay>
  | | | |   |   | `-DeclRefExpr 0x9b84d94 <<invalid sloc>> 'int [3][3][2]' lvalue Var 0x9b67e70 '____localvar____0' 'int [3][3][2]'
  | | | |   |   `-IntegerLiteral 0x9b85008 <<invalid sloc>> 'int' 2
  | | | |   `-IntegerLiteral 0x9b85020 <<invalid sloc>> 'int' 0
  | | | `-IntegerLiteral 0x9b85038 <<invalid sloc>> 'int' 0
  | | `-IntegerLiteral 0x9b67f40 <col:35> 'int' 3
  | |-BinaryOperator 0x9b85188 <<invalid sloc>, col:40> 'int' lvalue '='
  | | |-ArraySubscriptExpr 0x9b85170 <<invalid sloc>> 'int' lvalue
  | | | |-ImplicitCastExpr 0x9b85160 <<invalid sloc>> 'int *' <ArrayToPointerDecay>
  | | | | `-ArraySubscriptExpr 0x9b85148 <<invalid sloc>> 'int [2]' lvalue
  | | | |   |-ImplicitCastExpr 0x9b85138 <<invalid sloc>> 'int (*)[2]' <ArrayToPointerDecay>
  | | | |   | `-ArraySubscriptExpr 0x9b85120 <<invalid sloc>> 'int [3][2]' lvalue
  | | | |   |   |-ImplicitCastExpr 0x9b85110 <<invalid sloc>> 'int (*)[3][2]' <ArrayToPointerDecay>
  | | | |   |   | `-DeclRefExpr 0x9b84d94 <<invalid sloc>> 'int [3][3][2]' lvalue Var 0x9b67e70 '____localvar____0' 'int [3][3][2]'
  | | | |   |   `-IntegerLiteral 0x9b85008 <<invalid sloc>> 'int' 2
  | | | |   `-IntegerLiteral 0x9b850e0 <<invalid sloc>> 'int' 1
  | | | `-IntegerLiteral 0x9b850f8 <<invalid sloc>> 'int' 0
  | | `-IntegerLiteral 0x9b67f80 <col:40> 'int' 9
  | `-BinaryOperator 0x9b85230 <<invalid sloc>, col:42> 'int' lvalue '='
  |   |-ArraySubscriptExpr 0x9b85218 <<invalid sloc>> 'int' lvalue
  |   | |-ImplicitCastExpr 0x9b85208 <<invalid sloc>> 'int *' <ArrayToPointerDecay>
  |   | | `-ArraySubscriptExpr 0x9b851f0 <<invalid sloc>> 'int [2]' lvalue
  |   | |   |-ImplicitCastExpr 0x9b851e0 <<invalid sloc>> 'int (*)[2]' <ArrayToPointerDecay>
  |   | |   | `-ArraySubscriptExpr 0x9b851c8 <<invalid sloc>> 'int [3][2]' lvalue
  |   | |   |   |-ImplicitCastExpr 0x9b851b8 <<invalid sloc>> 'int (*)[3][2]' <ArrayToPointerDecay>
  |   | |   |   | `-DeclRefExpr 0x9b84d94 <<invalid sloc>> 'int [3][3][2]' lvalue Var 0x9b67e70 '____localvar____0' 'int [3][3][2]'
  |   | |   |   `-IntegerLiteral 0x9b85008 <<invalid sloc>> 'int' 2
  |   | |   `-IntegerLiteral 0x9b850e0 <<invalid sloc>> 'int' 1
  |   | `-IntegerLiteral 0x9b851a0 <<invalid sloc>> 'int' 1
  |   `-IntegerLiteral 0x9b67f98 <col:42> 'int' 8
  `-BinaryOperator 0x9b68358 <line:8:2, col:15> 'int' lvalue '='
    |-ArraySubscriptExpr 0x9b68328 <col:2, col:11> 'int' lvalue
    | |-ImplicitCastExpr 0x9b68318 <col:2, col:8> 'int *' <ArrayToPointerDecay>
    | | `-ArraySubscriptExpr 0x9b682e8 <col:2, col:8> 'int [2]' lvalue
    | |   |-ImplicitCastExpr 0x9b682d8 <col:2, col:5> 'int (*)[2]' <ArrayToPointerDecay>
    | |   | `-ArraySubscriptExpr 0x9b68288 <col:2, col:5> 'int [3][2]' lvalue
    | |   |   |-ImplicitCastExpr 0x9b68278 <col:2> 'int (*)[3][2]' <ArrayToPointerDecay>
    | |   |   | `-DeclRefExpr 0x9b68228 <col:2> 'int [3][3][2]' lvalue Var 0x9b67e70 '____localvar____0' 'int [3][3][2]'
    | |   |   `-IntegerLiteral 0x9b68240 <col:4> 'int' 0
    | |   `-IntegerLiteral 0x9b682a0 <col:7> 'int' 0
    | `-IntegerLiteral 0x9b68300 <col:10> 'int' 1
    `-IntegerLiteral 0x9b68340 <col:15> 'int' 0
[DEBUG][alg/FlattenCFG/CFGFlattener.cpp - line 26] cfg before flattening

 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: int ____localvar____0[3][3][2];
   2: ____localvar____0[0][0][0] = 1
   3: ____localvar____0[0][0][1] = 2
   4: ____localvar____0[0][1][0] = 3
   5: ____localvar____0[2][0][0] = 3
   6: ____localvar____0[2][1][0] = 9
   7: ____localvar____0[2][1][1] = 8
   8: ____localvar____0[0][0][1] = 0
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

Writing '/tmp/llvm_lt71gr/CFG.dot'...  done. 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b68370 (CompoundStmt) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b85270 (DeclStmt) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 50] enter decl 9b67e70 (Var)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b67de8 (IntegerLiteral) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b67de8 (IntegerLiteral)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b67dd0 (IntegerLiteral) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b67dd0 (IntegerLiteral)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 52] exit decl 9b67e70 (Var)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b85270 (DeclStmt)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b85280 (CompoundStmt) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b84e70 (BinaryOperator) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b84e58 (ArraySubscriptExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b84e48 (ImplicitCastExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b84e30 (ArraySubscriptExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b84e20 (ImplicitCastExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b84e08 (ArraySubscriptExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b84df8 (ImplicitCastExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b84d94 (DeclRefExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b84d94 (DeclRefExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b84df8 (ImplicitCastExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b84db0 (IntegerLiteral) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b84db0 (IntegerLiteral)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b84e08 (ArraySubscriptExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b84e20 (ImplicitCastExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b84dc8 (IntegerLiteral) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b84dc8 (IntegerLiteral)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b84e30 (ArraySubscriptExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b84e48 (ImplicitCastExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b84de0 (IntegerLiteral) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b84de0 (IntegerLiteral)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b84e58 (ArraySubscriptExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b67ea0 (IntegerLiteral) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b67ea0 (IntegerLiteral)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b84e70 (BinaryOperator)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b84f18 (BinaryOperator) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b84f00 (ArraySubscriptExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b84ef0 (ImplicitCastExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b84ed8 (ArraySubscriptExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b84ec8 (ImplicitCastExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b84eb0 (ArraySubscriptExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b84ea0 (ImplicitCastExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b84d94 (DeclRefExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b84d94 (DeclRefExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b84ea0 (ImplicitCastExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b84db0 (IntegerLiteral) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b84db0 (IntegerLiteral)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b84eb0 (ArraySubscriptExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b84ec8 (ImplicitCastExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b84dc8 (IntegerLiteral) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b84dc8 (IntegerLiteral)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b84ed8 (ArraySubscriptExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b84ef0 (ImplicitCastExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b84e88 (IntegerLiteral) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b84e88 (IntegerLiteral)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b84f00 (ArraySubscriptExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b67eb8 (IntegerLiteral) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b67eb8 (IntegerLiteral)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b84f18 (BinaryOperator)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b84fd8 (BinaryOperator) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b84fc0 (ArraySubscriptExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b84fb0 (ImplicitCastExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b84f98 (ArraySubscriptExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b84f88 (ImplicitCastExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b84f70 (ArraySubscriptExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b84f60 (ImplicitCastExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b84d94 (DeclRefExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b84d94 (DeclRefExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b84f60 (ImplicitCastExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b84db0 (IntegerLiteral) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b84db0 (IntegerLiteral)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b84f70 (ArraySubscriptExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b84f88 (ImplicitCastExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b84f30 (IntegerLiteral) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b84f30 (IntegerLiteral)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b84f98 (ArraySubscriptExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b84fb0 (ImplicitCastExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b84f48 (IntegerLiteral) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b84f48 (IntegerLiteral)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b84fc0 (ArraySubscriptExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b67ed0 (IntegerLiteral) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b67ed0 (IntegerLiteral)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b84fd8 (BinaryOperator)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b850c8 (BinaryOperator) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b850b0 (ArraySubscriptExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b850a0 (ImplicitCastExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b85088 (ArraySubscriptExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b85078 (ImplicitCastExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b85060 (ArraySubscriptExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b85050 (ImplicitCastExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b84d94 (DeclRefExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b84d94 (DeclRefExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b85050 (ImplicitCastExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b85008 (IntegerLiteral) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b85008 (IntegerLiteral)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b85060 (ArraySubscriptExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b85078 (ImplicitCastExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b85020 (IntegerLiteral) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b85020 (IntegerLiteral)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b85088 (ArraySubscriptExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b850a0 (ImplicitCastExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b85038 (IntegerLiteral) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b85038 (IntegerLiteral)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b850b0 (ArraySubscriptExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b67f40 (IntegerLiteral) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b67f40 (IntegerLiteral)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b850c8 (BinaryOperator)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b85188 (BinaryOperator) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b85170 (ArraySubscriptExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b85160 (ImplicitCastExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b85148 (ArraySubscriptExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b85138 (ImplicitCastExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b85120 (ArraySubscriptExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b85110 (ImplicitCastExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b84d94 (DeclRefExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b84d94 (DeclRefExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b85110 (ImplicitCastExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b85008 (IntegerLiteral) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b85008 (IntegerLiteral)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b85120 (ArraySubscriptExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b85138 (ImplicitCastExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b850e0 (IntegerLiteral) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b850e0 (IntegerLiteral)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b85148 (ArraySubscriptExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b85160 (ImplicitCastExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b850f8 (IntegerLiteral) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b850f8 (IntegerLiteral)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b85170 (ArraySubscriptExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b67f80 (IntegerLiteral) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b67f80 (IntegerLiteral)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b85188 (BinaryOperator)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b85230 (BinaryOperator) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b85218 (ArraySubscriptExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b85208 (ImplicitCastExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b851f0 (ArraySubscriptExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b851e0 (ImplicitCastExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b851c8 (ArraySubscriptExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b851b8 (ImplicitCastExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b84d94 (DeclRefExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b84d94 (DeclRefExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b851b8 (ImplicitCastExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b85008 (IntegerLiteral) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b85008 (IntegerLiteral)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b851c8 (ArraySubscriptExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b851e0 (ImplicitCastExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b850e0 (IntegerLiteral) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b850e0 (IntegerLiteral)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b851f0 (ArraySubscriptExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b85208 (ImplicitCastExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b851a0 (IntegerLiteral) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b851a0 (IntegerLiteral)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b85218 (ArraySubscriptExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b67f98 (IntegerLiteral) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b67f98 (IntegerLiteral)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b85230 (BinaryOperator)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b85280 (CompoundStmt)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b68358 (BinaryOperator) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b68328 (ArraySubscriptExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b68318 (ImplicitCastExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b682e8 (ArraySubscriptExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b682d8 (ImplicitCastExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b68288 (ArraySubscriptExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b68278 (ImplicitCastExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b68228 (DeclRefExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b68228 (DeclRefExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b68278 (ImplicitCastExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b68240 (IntegerLiteral) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b68240 (IntegerLiteral)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b68288 (ArraySubscriptExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b682d8 (ImplicitCastExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b682a0 (IntegerLiteral) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b682a0 (IntegerLiteral)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b682e8 (ArraySubscriptExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b68318 (ImplicitCastExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b68300 (IntegerLiteral) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b68300 (IntegerLiteral)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b68328 (ArraySubscriptExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b68340 (IntegerLiteral) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b68340 (IntegerLiteral)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b68358 (BinaryOperator)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b68370 (CompoundStmt)
[DEBUG][alg/FlattenCFG/CFGFlattener.cpp - line 377] edge 1 -> 0
[DEBUG][alg/FlattenCFG/CFGFlattener.cpp - line 377] edge 2 -> 1
[DEBUG][alg/FlattenCFG/CFGFlattener.cpp - line 39] CompoundStmt before flatten
{
    int ____localvar____0[3][3][2];
    {
        ____localvar____0[0][0][0] = 1;
        ____localvar____0[0][0][1] = 2;
        ____localvar____0[0][1][0] = 3;
        ____localvar____0[2][0][0] = 3;
        ____localvar____0[2][1][0] = 9;
        ____localvar____0[2][1][1] = 8;
    }
    ____localvar____0[0][0][1] = 0;
}
[DEBUG][alg/FlattenCFG/CFGFlattener.cpp - line 48] DeclStmt at the beginning met.
DeclStmt 0x9b85270
`-VarDecl 0x9b67e70 ____localvar____0 'int [3][3][2]'
[DEBUG][alg/FlattenCFG/CFGFlattener.cpp - line 208] create case for node 1 98ae5bc
<NULL>[DEBUG][alg/FlattenCFG/CFGFlattener.cpp - line 243] add stmt #0
[DEBUG][alg/FlattenCFG/CFGFlattener.cpp - line 243] add stmt #1
____localvar____0[0][0][0] = 1[DEBUG][alg/FlattenCFG/CFGFlattener.cpp - line 243] add stmt #2
____localvar____0[0][0][1] = 2[DEBUG][alg/FlattenCFG/CFGFlattener.cpp - line 243] add stmt #3
____localvar____0[0][1][0] = 3[DEBUG][alg/FlattenCFG/CFGFlattener.cpp - line 243] add stmt #4
____localvar____0[2][0][0] = 3[DEBUG][alg/FlattenCFG/CFGFlattener.cpp - line 243] add stmt #5
____localvar____0[2][1][0] = 9[DEBUG][alg/FlattenCFG/CFGFlattener.cpp - line 243] add stmt #6
____localvar____0[2][1][1] = 8[DEBUG][alg/FlattenCFG/CFGFlattener.cpp - line 243] add stmt #7
____localvar____0[0][0][1] = 0CaseStmt 0x9b853e0
|-IntegerLiteral 0x9b853c8 'int' 1
|-<<<NULL>>>
`-CompoundStmt 0x9b85408
  |-BinaryOperator 0x9b84e70 'int' lvalue '='
  | |-ArraySubscriptExpr 0x9b84e58 'int' lvalue
  | | |-ImplicitCastExpr 0x9b84e48 'int *' <ArrayToPointerDecay>
  | | | `-ArraySubscriptExpr 0x9b84e30 'int [2]' lvalue
  | | |   |-ImplicitCastExpr 0x9b84e20 'int (*)[2]' <ArrayToPointerDecay>
  | | |   | `-ArraySubscriptExpr 0x9b84e08 'int [3][2]' lvalue
  | | |   |   |-ImplicitCastExpr 0x9b84df8 'int (*)[3][2]' <ArrayToPointerDecay>
  | | |   |   | `-DeclRefExpr 0x9b84d94 'int [3][3][2]' lvalue Var 0x9b67e70 '____localvar____0' 'int [3][3][2]'
  | | |   |   `-IntegerLiteral 0x9b84db0 'int' 0
  | | |   `-IntegerLiteral 0x9b84dc8 'int' 0
  | | `-IntegerLiteral 0x9b84de0 'int' 0
  | `-IntegerLiteral 0x9b67ea0 'int' 1
  |-BinaryOperator 0x9b84f18 'int' lvalue '='
  | |-ArraySubscriptExpr 0x9b84f00 'int' lvalue
  | | |-ImplicitCastExpr 0x9b84ef0 'int *' <ArrayToPointerDecay>
  | | | `-ArraySubscriptExpr 0x9b84ed8 'int [2]' lvalue
  | | |   |-ImplicitCastExpr 0x9b84ec8 'int (*)[2]' <ArrayToPointerDecay>
  | | |   | `-ArraySubscriptExpr 0x9b84eb0 'int [3][2]' lvalue
  | | |   |   |-ImplicitCastExpr 0x9b84ea0 'int (*)[3][2]' <ArrayToPointerDecay>
  | | |   |   | `-DeclRefExpr 0x9b84d94 'int [3][3][2]' lvalue Var 0x9b67e70 '____localvar____0' 'int [3][3][2]'
  | | |   |   `-IntegerLiteral 0x9b84db0 'int' 0
  | | |   `-IntegerLiteral 0x9b84dc8 'int' 0
  | | `-IntegerLiteral 0x9b84e88 'int' 1
  | `-IntegerLiteral 0x9b67eb8 'int' 2
  |-BinaryOperator 0x9b84fd8 'int' lvalue '='
  | |-ArraySubscriptExpr 0x9b84fc0 'int' lvalue
  | | |-ImplicitCastExpr 0x9b84fb0 'int *' <ArrayToPointerDecay>
  | | | `-ArraySubscriptExpr 0x9b84f98 'int [2]' lvalue
  | | |   |-ImplicitCastExpr 0x9b84f88 'int (*)[2]' <ArrayToPointerDecay>
  | | |   | `-ArraySubscriptExpr 0x9b84f70 'int [3][2]' lvalue
  | | |   |   |-ImplicitCastExpr 0x9b84f60 'int (*)[3][2]' <ArrayToPointerDecay>
  | | |   |   | `-DeclRefExpr 0x9b84d94 'int [3][3][2]' lvalue Var 0x9b67e70 '____localvar____0' 'int [3][3][2]'
  | | |   |   `-IntegerLiteral 0x9b84db0 'int' 0
  | | |   `-IntegerLiteral 0x9b84f30 'int' 1
  | | `-IntegerLiteral 0x9b84f48 'int' 0
  | `-IntegerLiteral 0x9b67ed0 'int' 3
  |-BinaryOperator 0x9b850c8 'int' lvalue '='
  | |-ArraySubscriptExpr 0x9b850b0 'int' lvalue
  | | |-ImplicitCastExpr 0x9b850a0 'int *' <ArrayToPointerDecay>
  | | | `-ArraySubscriptExpr 0x9b85088 'int [2]' lvalue
  | | |   |-ImplicitCastExpr 0x9b85078 'int (*)[2]' <ArrayToPointerDecay>
  | | |   | `-ArraySubscriptExpr 0x9b85060 'int [3][2]' lvalue
  | | |   |   |-ImplicitCastExpr 0x9b85050 'int (*)[3][2]' <ArrayToPointerDecay>
  | | |   |   | `-DeclRefExpr 0x9b84d94 'int [3][3][2]' lvalue Var 0x9b67e70 '____localvar____0' 'int [3][3][2]'
  | | |   |   `-IntegerLiteral 0x9b85008 'int' 2
  | | |   `-IntegerLiteral 0x9b85020 'int' 0
  | | `-IntegerLiteral 0x9b85038 'int' 0
  | `-IntegerLiteral 0x9b67f40 'int' 3
  |-BinaryOperator 0x9b85188 'int' lvalue '='
  | |-ArraySubscriptExpr 0x9b85170 'int' lvalue
  | | |-ImplicitCastExpr 0x9b85160 'int *' <ArrayToPointerDecay>
  | | | `-ArraySubscriptExpr 0x9b85148 'int [2]' lvalue
  | | |   |-ImplicitCastExpr 0x9b85138 'int (*)[2]' <ArrayToPointerDecay>
  | | |   | `-ArraySubscriptExpr 0x9b85120 'int [3][2]' lvalue
  | | |   |   |-ImplicitCastExpr 0x9b85110 'int (*)[3][2]' <ArrayToPointerDecay>
  | | |   |   | `-DeclRefExpr 0x9b84d94 'int [3][3][2]' lvalue Var 0x9b67e70 '____localvar____0' 'int [3][3][2]'
  | | |   |   `-IntegerLiteral 0x9b85008 'int' 2
  | | |   `-IntegerLiteral 0x9b850e0 'int' 1
  | | `-IntegerLiteral 0x9b850f8 'int' 0
  | `-IntegerLiteral 0x9b67f80 'int' 9
  |-BinaryOperator 0x9b85230 'int' lvalue '='
  | |-ArraySubscriptExpr 0x9b85218 'int' lvalue
  | | |-ImplicitCastExpr 0x9b85208 'int *' <ArrayToPointerDecay>
  | | | `-ArraySubscriptExpr 0x9b851f0 'int [2]' lvalue
  | | |   |-ImplicitCastExpr 0x9b851e0 'int (*)[2]' <ArrayToPointerDecay>
  | | |   | `-ArraySubscriptExpr 0x9b851c8 'int [3][2]' lvalue
  | | |   |   |-ImplicitCastExpr 0x9b851b8 'int (*)[3][2]' <ArrayToPointerDecay>
  | | |   |   | `-DeclRefExpr 0x9b84d94 'int [3][3][2]' lvalue Var 0x9b67e70 '____localvar____0' 'int [3][3][2]'
  | | |   |   `-IntegerLiteral 0x9b85008 'int' 2
  | | |   `-IntegerLiteral 0x9b850e0 'int' 1
  | | `-IntegerLiteral 0x9b851a0 'int' 1
  | `-IntegerLiteral 0x9b67f98 'int' 8
  |-BinaryOperator 0x9b68358 'int' lvalue '='
  | |-ArraySubscriptExpr 0x9b68328 'int' lvalue
  | | |-ImplicitCastExpr 0x9b68318 'int *' <ArrayToPointerDecay>
  | | | `-ArraySubscriptExpr 0x9b682e8 'int [2]' lvalue
  | | |   |-ImplicitCastExpr 0x9b682d8 'int (*)[2]' <ArrayToPointerDecay>
  | | |   | `-ArraySubscriptExpr 0x9b68288 'int [3][2]' lvalue
  | | |   |   |-ImplicitCastExpr 0x9b68278 'int (*)[3][2]' <ArrayToPointerDecay>
  | | |   |   | `-DeclRefExpr 0x9b68228 'int [3][3][2]' lvalue Var 0x9b67e70 '____localvar____0' 'int [3][3][2]'
  | | |   |   `-IntegerLiteral 0x9b68240 'int' 0
  | | |   `-IntegerLiteral 0x9b682a0 'int' 0
  | | `-IntegerLiteral 0x9b68300 'int' 1
  | `-IntegerLiteral 0x9b68340 'int' 0
  `-BreakStmt 0x9b85400
[DEBUG][alg/FlattenCFG/CFGFlattener.cpp - line 85] New switch body create
switch (int ____localvar____1 = 1) {
  case 1:
    {
        ____localvar____0[0][0][0] = 1;
        ____localvar____0[0][0][1] = 2;
        ____localvar____0[0][1][0] = 3;
        ____localvar____0[2][0][0] = 3;
        ____localvar____0[2][1][0] = 9;
        ____localvar____0[2][1][1] = 8;
        ____localvar____0[0][0][1] = 0;
        break;
    }
}
[DEBUG][alg/FlattenCFG/CFGFlattener.cpp - line 89] New function body created.
{
    int ____localvar____0[3][3][2];
    int ____localvar____1 = 1;
    while (____localvar____1 != 0)
        switch (int ____localvar____1 = 1) {
          case 1:
            {
                ____localvar____0[0][0][0] = 1;
                ____localvar____0[0][0][1] = 2;
                ____localvar____0[0][1][0] = 3;
                ____localvar____0[2][0][0] = 3;
                ____localvar____0[2][1][0] = 9;
                ____localvar____0[2][1][1] = 8;
                ____localvar____0[0][0][1] = 0;
                break;
            }
        }
}
[DEBUG][alg/FlattenCFG/CFGFlattener.cpp - line 92] decl after flatten
FunctionDecl 0x9b67d70 <test/_array.cpp:6:1, line:9:1> declref 'void (void)'
`-CompoundStmt 0x9b68370 <line:6:16, line:9:1>
  |-DeclStmt 0x9b85270 <<invalid sloc>>
  | `-VarDecl 0x9b67e70 <line:7:2, col:14> ____localvar____0 'int [3][3][2]'
  |-DeclStmt 0x9b85300 <<invalid sloc>>
  | `-VarDecl 0x9b852d0 <<invalid sloc>> ____localvar____1 'int'
  |   `-IntegerLiteral 0x9b852b8 <<invalid sloc>> 'int' 1
  `-WhileStmt 0x9b85368 <<invalid sloc>>
    |-<<<NULL>>>
    |-BinaryOperator 0x9b85350 <<invalid sloc>> '_Bool' '!='
    | |-ImplicitCastExpr 0x9b85340 <<invalid sloc>> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x9b85328 <<invalid sloc>> 'int' lvalue Var 0x9b852d0 '____localvar____1' 'int'
    | `-IntegerLiteral 0x9b85310 <<invalid sloc>> 'int' 0
    `-SwitchStmt 0x9b85398 <<invalid sloc>>
      |-DeclStmt 0x9b853b8 <<invalid sloc>>
      | `-VarDecl 0x9b852d0 <<invalid sloc>> ____localvar____1 'int'
      |   `-IntegerLiteral 0x9b852b8 <<invalid sloc>> 'int' 1
      |-DeclRefExpr 0x9b8537c <<invalid sloc>> 'int' lvalue Var 0x9b852d0 '____localvar____1' 'int'
      `-CompoundStmt 0x9b85438 <<invalid sloc>>
        `-CaseStmt 0x9b853e0 <<invalid sloc>>
          |-IntegerLiteral 0x9b853c8 <<invalid sloc>> 'int' 1
          |-<<<NULL>>>
          `-CompoundStmt 0x9b85408 <<invalid sloc>>
            |-BinaryOperator 0x9b84e70 <<invalid sloc>, col:21> 'int' lvalue '='
            | |-ArraySubscriptExpr 0x9b84e58 <<invalid sloc>> 'int' lvalue
            | | |-ImplicitCastExpr 0x9b84e48 <<invalid sloc>> 'int *' <ArrayToPointerDecay>
            | | | `-ArraySubscriptExpr 0x9b84e30 <<invalid sloc>> 'int [2]' lvalue
            | | |   |-ImplicitCastExpr 0x9b84e20 <<invalid sloc>> 'int (*)[2]' <ArrayToPointerDecay>
            | | |   | `-ArraySubscriptExpr 0x9b84e08 <<invalid sloc>> 'int [3][2]' lvalue
            | | |   |   |-ImplicitCastExpr 0x9b84df8 <<invalid sloc>> 'int (*)[3][2]' <ArrayToPointerDecay>
            | | |   |   | `-DeclRefExpr 0x9b84d94 <<invalid sloc>> 'int [3][3][2]' lvalue Var 0x9b67e70 '____localvar____0' 'int [3][3][2]'
            | | |   |   `-IntegerLiteral 0x9b84db0 <<invalid sloc>> 'int' 0
            | | |   `-IntegerLiteral 0x9b84dc8 <<invalid sloc>> 'int' 0
            | | `-IntegerLiteral 0x9b84de0 <<invalid sloc>> 'int' 0
            | `-IntegerLiteral 0x9b67ea0 <col:21> 'int' 1
            |-BinaryOperator 0x9b84f18 <<invalid sloc>, col:23> 'int' lvalue '='
            | |-ArraySubscriptExpr 0x9b84f00 <<invalid sloc>> 'int' lvalue
            | | |-ImplicitCastExpr 0x9b84ef0 <<invalid sloc>> 'int *' <ArrayToPointerDecay>
            | | | `-ArraySubscriptExpr 0x9b84ed8 <<invalid sloc>> 'int [2]' lvalue
            | | |   |-ImplicitCastExpr 0x9b84ec8 <<invalid sloc>> 'int (*)[2]' <ArrayToPointerDecay>
            | | |   | `-ArraySubscriptExpr 0x9b84eb0 <<invalid sloc>> 'int [3][2]' lvalue
            | | |   |   |-ImplicitCastExpr 0x9b84ea0 <<invalid sloc>> 'int (*)[3][2]' <ArrayToPointerDecay>
            | | |   |   | `-DeclRefExpr 0x9b84d94 <<invalid sloc>> 'int [3][3][2]' lvalue Var 0x9b67e70 '____localvar____0' 'int [3][3][2]'
            | | |   |   `-IntegerLiteral 0x9b84db0 <<invalid sloc>> 'int' 0
            | | |   `-IntegerLiteral 0x9b84dc8 <<invalid sloc>> 'int' 0
            | | `-IntegerLiteral 0x9b84e88 <<invalid sloc>> 'int' 1
            | `-IntegerLiteral 0x9b67eb8 <col:23> 'int' 2
            |-BinaryOperator 0x9b84fd8 <<invalid sloc>, col:25> 'int' lvalue '='
            | |-ArraySubscriptExpr 0x9b84fc0 <<invalid sloc>> 'int' lvalue
            | | |-ImplicitCastExpr 0x9b84fb0 <<invalid sloc>> 'int *' <ArrayToPointerDecay>
            | | | `-ArraySubscriptExpr 0x9b84f98 <<invalid sloc>> 'int [2]' lvalue
            | | |   |-ImplicitCastExpr 0x9b84f88 <<invalid sloc>> 'int (*)[2]' <ArrayToPointerDecay>
            | | |   | `-ArraySubscriptExpr 0x9b84f70 <<invalid sloc>> 'int [3][2]' lvalue
            | | |   |   |-ImplicitCastExpr 0x9b84f60 <<invalid sloc>> 'int (*)[3][2]' <ArrayToPointerDecay>
            | | |   |   | `-DeclRefExpr 0x9b84d94 <<invalid sloc>> 'int [3][3][2]' lvalue Var 0x9b67e70 '____localvar____0' 'int [3][3][2]'
            | | |   |   `-IntegerLiteral 0x9b84db0 <<invalid sloc>> 'int' 0
            | | |   `-IntegerLiteral 0x9b84f30 <<invalid sloc>> 'int' 1
            | | `-IntegerLiteral 0x9b84f48 <<invalid sloc>> 'int' 0
            | `-IntegerLiteral 0x9b67ed0 <col:25> 'int' 3
            |-BinaryOperator 0x9b850c8 <<invalid sloc>, col:35> 'int' lvalue '='
            | |-ArraySubscriptExpr 0x9b850b0 <<invalid sloc>> 'int' lvalue
            | | |-ImplicitCastExpr 0x9b850a0 <<invalid sloc>> 'int *' <ArrayToPointerDecay>
            | | | `-ArraySubscriptExpr 0x9b85088 <<invalid sloc>> 'int [2]' lvalue
            | | |   |-ImplicitCastExpr 0x9b85078 <<invalid sloc>> 'int (*)[2]' <ArrayToPointerDecay>
            | | |   | `-ArraySubscriptExpr 0x9b85060 <<invalid sloc>> 'int [3][2]' lvalue
            | | |   |   |-ImplicitCastExpr 0x9b85050 <<invalid sloc>> 'int (*)[3][2]' <ArrayToPointerDecay>
            | | |   |   | `-DeclRefExpr 0x9b84d94 <<invalid sloc>> 'int [3][3][2]' lvalue Var 0x9b67e70 '____localvar____0' 'int [3][3][2]'
            | | |   |   `-IntegerLiteral 0x9b85008 <<invalid sloc>> 'int' 2
            | | |   `-IntegerLiteral 0x9b85020 <<invalid sloc>> 'int' 0
            | | `-IntegerLiteral 0x9b85038 <<invalid sloc>> 'int' 0
            | `-IntegerLiteral 0x9b67f40 <col:35> 'int' 3
            |-BinaryOperator 0x9b85188 <<invalid sloc>, col:40> 'int' lvalue '='
            | |-ArraySubscriptExpr 0x9b85170 <<invalid sloc>> 'int' lvalue
            | | |-ImplicitCastExpr 0x9b85160 <<invalid sloc>> 'int *' <ArrayToPointerDecay>
            | | | `-ArraySubscriptExpr 0x9b85148 <<invalid sloc>> 'int [2]' lvalue
            | | |   |-ImplicitCastExpr 0x9b85138 <<invalid sloc>> 'int (*)[2]' <ArrayToPointerDecay>
            | | |   | `-ArraySubscriptExpr 0x9b85120 <<invalid sloc>> 'int [3][2]' lvalue
            | | |   |   |-ImplicitCastExpr 0x9b85110 <<invalid sloc>> 'int (*)[3][2]' <ArrayToPointerDecay>
            | | |   |   | `-DeclRefExpr 0x9b84d94 <<invalid sloc>> 'int [3][3][2]' lvalue Var 0x9b67e70 '____localvar____0' 'int [3][3][2]'
            | | |   |   `-IntegerLiteral 0x9b85008 <<invalid sloc>> 'int' 2
            | | |   `-IntegerLiteral 0x9b850e0 <<invalid sloc>> 'int' 1
            | | `-IntegerLiteral 0x9b850f8 <<invalid sloc>> 'int' 0
            | `-IntegerLiteral 0x9b67f80 <col:40> 'int' 9
            |-BinaryOperator 0x9b85230 <<invalid sloc>, col:42> 'int' lvalue '='
            | |-ArraySubscriptExpr 0x9b85218 <<invalid sloc>> 'int' lvalue
            | | |-ImplicitCastExpr 0x9b85208 <<invalid sloc>> 'int *' <ArrayToPointerDecay>
            | | | `-ArraySubscriptExpr 0x9b851f0 <<invalid sloc>> 'int [2]' lvalue
            | | |   |-ImplicitCastExpr 0x9b851e0 <<invalid sloc>> 'int (*)[2]' <ArrayToPointerDecay>
            | | |   | `-ArraySubscriptExpr 0x9b851c8 <<invalid sloc>> 'int [3][2]' lvalue
            | | |   |   |-ImplicitCastExpr 0x9b851b8 <<invalid sloc>> 'int (*)[3][2]' <ArrayToPointerDecay>
            | | |   |   | `-DeclRefExpr 0x9b84d94 <<invalid sloc>> 'int [3][3][2]' lvalue Var 0x9b67e70 '____localvar____0' 'int [3][3][2]'
            | | |   |   `-IntegerLiteral 0x9b85008 <<invalid sloc>> 'int' 2
            | | |   `-IntegerLiteral 0x9b850e0 <<invalid sloc>> 'int' 1
            | | `-IntegerLiteral 0x9b851a0 <<invalid sloc>> 'int' 1
            | `-IntegerLiteral 0x9b67f98 <col:42> 'int' 8
            |-BinaryOperator 0x9b68358 <line:8:2, col:15> 'int' lvalue '='
            | |-ArraySubscriptExpr 0x9b68328 <col:2, col:11> 'int' lvalue
            | | |-ImplicitCastExpr 0x9b68318 <col:2, col:8> 'int *' <ArrayToPointerDecay>
            | | | `-ArraySubscriptExpr 0x9b682e8 <col:2, col:8> 'int [2]' lvalue
            | | |   |-ImplicitCastExpr 0x9b682d8 <col:2, col:5> 'int (*)[2]' <ArrayToPointerDecay>
            | | |   | `-ArraySubscriptExpr 0x9b68288 <col:2, col:5> 'int [3][2]' lvalue
            | | |   |   |-ImplicitCastExpr 0x9b68278 <col:2> 'int (*)[3][2]' <ArrayToPointerDecay>
            | | |   |   | `-DeclRefExpr 0x9b68228 <col:2> 'int [3][3][2]' lvalue Var 0x9b67e70 '____localvar____0' 'int [3][3][2]'
            | | |   |   `-IntegerLiteral 0x9b68240 <col:4> 'int' 0
            | | |   `-IntegerLiteral 0x9b682a0 <col:7> 'int' 0
            | | `-IntegerLiteral 0x9b68300 <col:10> 'int' 1
            | `-IntegerLiteral 0x9b68340 <col:15> 'int' 0
            `-BreakStmt 0x9b85400 <<invalid sloc>>
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Function 9b683a0 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 48] enter FuncDecl
[DEBUG][alg/FlattenCFG/VarRenamer.cpp - line 9] START VarRenamer
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 50] enter decl 9b683a0 (Function)
[DEBUG][alg/FlattenCFG/VarRenamer.cpp - line 20] decl: Function
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b720a8 (CompoundStmt) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b68e00 (DeclStmt) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 50] enter decl 9b686c0 (Var)
[DEBUG][alg/FlattenCFG/VarRenamer.cpp - line 20] decl: Var
[DEBUG][alg/FlattenCFG/VarRenamer.cpp - line 30]  ---- name = b | type = string [2][2] | desugared type = string [2][2] | const = 0 | extern = 0 | POD = 0
{ {  }, { "xx", string("yyy") } }[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b68400 (IntegerLiteral) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b68400 (IntegerLiteral)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b68df0 (ExprWithCleanups) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b68b50 (InitListExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b686f0 (InitListExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b686f0 (InitListExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b68af0 (InitListExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b68760 (StringLiteral) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b68760 (StringLiteral)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b68ad8 (CXXFunctionalCastExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b68ac8 (CXXBindTemporaryExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b68a98 (CXXConstructExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b68828 (ImplicitCastExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b687b0 (StringLiteral) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b687b0 (StringLiteral)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b68828 (ImplicitCastExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b68a80 (CXXDefaultArgExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b68a80 (CXXDefaultArgExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b68a98 (CXXConstructExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b68ac8 (CXXBindTemporaryExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b68ad8 (CXXFunctionalCastExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b68af0 (InitListExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b68b50 (InitListExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b68df0 (ExprWithCleanups)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 52] exit decl 9b686c0 (Var)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b68e00 (DeclStmt)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b71ec0 (DeclStmt) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 50] enter decl 9b69090 (Var)
[DEBUG][alg/FlattenCFG/VarRenamer.cpp - line 20] decl: Var
[DEBUG][alg/FlattenCFG/VarRenamer.cpp - line 30]  ---- name = A | type = vector<string> | desugared type = class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > > | const = 0 | extern = 0 | POD = 0
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b71ea0 (CXXConstructExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b71ea0 (CXXConstructExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 52] exit decl 9b69090 (Var)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b71ec0 (DeclStmt)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b72090 (BinaryOperator) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b72038 (ImplicitCastExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b71fe8 (DeclRefExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b71fe8 (DeclRefExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b72038 (ImplicitCastExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b71f78 (ImplicitCastExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b71f28 (DeclRefExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b71f28 (DeclRefExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b71f78 (ImplicitCastExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b71ed0 (DeclRefExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b71ed0 (DeclRefExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b71f18 (ImplicitCastExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b71ee8 (IntegerLiteral) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b71ee8 (IntegerLiteral)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b71f18 (ImplicitCastExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b71fd8 (ImplicitCastExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b71fc0 (IntegerLiteral) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b71fc0 (IntegerLiteral)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b71fd8 (ImplicitCastExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b72080 (CharacterLiteral) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b72080 (CharacterLiteral)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b72090 (BinaryOperator)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b720a8 (CompoundStmt)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 52] exit decl 9b683a0 (Function)
[DEBUG][alg/FlattenCFG/VarRenamer.cpp - line 11] END VarRenamer
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 6] START StmtPretransformer
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 50] enter decl 9b683a0 (Function)
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 37] visitDecl 9b683a0(Function) Ctx 98706f4
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b720a8 (CompoundStmt) | range 
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 62] push stmt CompoundStmt 9b720a8 9989638 9989638
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b68e00 (DeclStmt) | range 
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 62] push stmt DeclStmt 9b68e00 994a6c0 994a6c0
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 50] enter decl 9b686c0 (Var)
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 37] visitDecl 9b686c0(Var) Ctx 9b683c4
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b68400 (IntegerLiteral) | range 
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 62] push stmt IntegerLiteral 9b68400 9995c18 9995c18
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b68400 (IntegerLiteral)
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 70] leaving Stmt IntegerLiteral, start transform
IntegerLiteral 0x9b68400 'int' 2
2[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b68df0 (ExprWithCleanups) | range 
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 62] push stmt ExprWithCleanups 9b68df0 9991ae0 9991ae0
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b68b50 (InitListExpr) | range 
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 62] push stmt InitListExpr 9b68b20 98a2360 98a2360
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b686f0 (InitListExpr) | range 
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 62] push stmt InitListExpr 9b686f0 99c3ec8 99c3ec8
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b686f0 (InitListExpr)
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 70] leaving Stmt InitListExpr, start transform
InitListExpr 0x9b686f0 'string [2]'
{  }[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b68af0 (InitListExpr) | range 
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 62] push stmt InitListExpr 9b68af0 9ae9608 9ae9608
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b68760 (StringLiteral) | range 
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 62] push stmt StringLiteral 9b68760 99b80e8 99b80e8
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b68760 (StringLiteral)
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 70] leaving Stmt StringLiteral, start transform
StringLiteral 0x9b68760 'const char [3]' lvalue "xx"
"xx"[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b68ad8 (CXXFunctionalCastExpr) | range 
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 62] push stmt CXXFunctionalCastExpr 9b68ad8 9a5caf8 9a5caf8
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b68ac8 (CXXBindTemporaryExpr) | range 
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 62] push stmt CXXBindTemporaryExpr 9b68ac8 98cf548 98cf548
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b68a98 (CXXConstructExpr) | range 
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 62] push stmt CXXConstructExpr 9b68a98 9a5b8c8 9a5b8c8
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b68828 (ImplicitCastExpr) | range 
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 62] push stmt ImplicitCastExpr 9b68828 998d798 998d798
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b687b0 (StringLiteral) | range 
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 62] push stmt StringLiteral 9b687b0 9999618 9999618
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b687b0 (StringLiteral)
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 70] leaving Stmt StringLiteral, start transform
StringLiteral 0x9b687b0 'const char [4]' lvalue "yyy"
"yyy"[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b68828 (ImplicitCastExpr)
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 70] leaving Stmt ImplicitCastExpr, start transform
ImplicitCastExpr 0x9b68828 'const char *' <ArrayToPointerDecay>
`-StringLiteral 0x9b687b0 'const char [4]' lvalue "yyy"
"yyy"[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b68a80 (CXXDefaultArgExpr) | range 
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 62] push stmt CXXDefaultArgExpr 9b68a80 998d318 998d318
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b68a80 (CXXDefaultArgExpr)
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 70] leaving Stmt CXXDefaultArgExpr, start transform
CXXDefaultArgExpr 0x9b68a80 'const class std::allocator<char>':'const class std::allocator<char>' lvalue
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b68a98 (CXXConstructExpr)
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 70] leaving Stmt CXXConstructExpr, start transform
CXXConstructExpr 0x9b68a98 'string':'class std::basic_string<char>' 'void (const char *, const class std::allocator<char> &)'
|-ImplicitCastExpr 0x9b68828 'const char *' <ArrayToPointerDecay>
| `-StringLiteral 0x9b687b0 'const char [4]' lvalue "yyy"
`-CXXDefaultArgExpr 0x9b68a80 'const class std::allocator<char>':'const class std::allocator<char>' lvalue
"yyy"[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b68ac8 (CXXBindTemporaryExpr)
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 70] leaving Stmt CXXBindTemporaryExpr, start transform
CXXBindTemporaryExpr 0x9b68ac8 'string':'class std::basic_string<char>' (CXXTemporary 0x9b68ac0)
`-CXXConstructExpr 0x9b68a98 'string':'class std::basic_string<char>' 'void (const char *, const class std::allocator<char> &)'
  |-ImplicitCastExpr 0x9b68828 'const char *' <ArrayToPointerDecay>
  | `-StringLiteral 0x9b687b0 'const char [4]' lvalue "yyy"
  `-CXXDefaultArgExpr 0x9b68a80 'const class std::allocator<char>':'const class std::allocator<char>' lvalue
"yyy"[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b68ad8 (CXXFunctionalCastExpr)
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 70] leaving Stmt CXXFunctionalCastExpr, start transform
CXXFunctionalCastExpr 0x9b68ad8 'string':'class std::basic_string<char>' functional cast to string <ConstructorConversion>
`-CXXBindTemporaryExpr 0x9b68ac8 'string':'class std::basic_string<char>' (CXXTemporary 0x9b68ac0)
  `-CXXConstructExpr 0x9b68a98 'string':'class std::basic_string<char>' 'void (const char *, const class std::allocator<char> &)'
    |-ImplicitCastExpr 0x9b68828 'const char *' <ArrayToPointerDecay>
    | `-StringLiteral 0x9b687b0 'const char [4]' lvalue "yyy"
    `-CXXDefaultArgExpr 0x9b68a80 'const class std::allocator<char>':'const class std::allocator<char>' lvalue
string("yyy")[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b68af0 (InitListExpr)
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 70] leaving Stmt InitListExpr, start transform
InitListExpr 0x9b68af0 'string [2]'
|-StringLiteral 0x9b68760 'const char [3]' lvalue "xx"
`-CXXFunctionalCastExpr 0x9b68ad8 'string':'class std::basic_string<char>' functional cast to string <ConstructorConversion>
  `-CXXBindTemporaryExpr 0x9b68ac8 'string':'class std::basic_string<char>' (CXXTemporary 0x9b68ac0)
    `-CXXConstructExpr 0x9b68a98 'string':'class std::basic_string<char>' 'void (const char *, const class std::allocator<char> &)'
      |-ImplicitCastExpr 0x9b68828 'const char *' <ArrayToPointerDecay>
      | `-StringLiteral 0x9b687b0 'const char [4]' lvalue "yyy"
      `-CXXDefaultArgExpr 0x9b68a80 'const class std::allocator<char>':'const class std::allocator<char>' lvalue
{ "xx", string("yyy") }[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b68b50 (InitListExpr)
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 70] leaving Stmt InitListExpr, start transform
InitListExpr 0x9b68b50 'string [2][2]'
|-InitListExpr 0x9b68b78 'string [2]'
`-InitListExpr 0x9b68ba0 'string [2]'
  |-CXXConstructExpr 0x9b68d18 'string':'class std::basic_string<char>' 'void (const class std::basic_string<char> &)' elidable
  | `-MaterializeTemporaryExpr 0x9b68d08 'const class std::basic_string<char>' lvalue
  |   `-ImplicitCastExpr 0x9b68cf8 'const class std::basic_string<char>' <NoOp>
  |     `-CXXBindTemporaryExpr 0x9b68ce8 'string':'class std::basic_string<char>' (CXXTemporary 0x9b68ce0)
  |       `-ImplicitCastExpr 0x9b68cd0 'string':'class std::basic_string<char>' <ConstructorConversion>
  |         `-CXXConstructExpr 0x9b68ca8 'string':'class std::basic_string<char>' 'void (const char *, const class std::allocator<char> &)'
  |           |-ImplicitCastExpr 0x9b68bf0 'const char *' <ArrayToPointerDecay>
  |           | `-StringLiteral 0x9b68760 'const char [3]' lvalue "xx"
  |           `-CXXDefaultArgExpr 0x9b68c90 'const class std::allocator<char>':'const class std::allocator<char>' lvalue
  `-CXXConstructExpr 0x9b68d60 'string':'class std::basic_string<char>' 'void (const class std::basic_string<char> &)' elidable
    `-MaterializeTemporaryExpr 0x9b68d50 'const class std::basic_string<char>' lvalue
      `-ImplicitCastExpr 0x9b68d40 'const class std::basic_string<char>' <NoOp>
        `-CXXFunctionalCastExpr 0x9b68ad8 'string':'class std::basic_string<char>' functional cast to string <ConstructorConversion>
          `-CXXBindTemporaryExpr 0x9b68ac8 'string':'class std::basic_string<char>' (CXXTemporary 0x9b68ac0)
            `-CXXConstructExpr 0x9b68a98 'string':'class std::basic_string<char>' 'void (const char *, const class std::allocator<char> &)'
              |-ImplicitCastExpr 0x9b68828 'const char *' <ArrayToPointerDecay>
              | `-StringLiteral 0x9b687b0 'const char [4]' lvalue "yyy"
              `-CXXDefaultArgExpr 0x9b68a80 'const class std::allocator<char>':'const class std::allocator<char>' lvalue
{ {  }, { "xx", string("yyy") } }[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b68df0 (ExprWithCleanups)
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 70] leaving Stmt ExprWithCleanups, start transform
ExprWithCleanups 0x9b68df0 'string [2][2]'
`-InitListExpr 0x9b68b50 'string [2][2]'
  |-InitListExpr 0x9b68b78 'string [2]'
  `-InitListExpr 0x9b68ba0 'string [2]'
    |-CXXConstructExpr 0x9b68d18 'string':'class std::basic_string<char>' 'void (const class std::basic_string<char> &)' elidable
    | `-MaterializeTemporaryExpr 0x9b68d08 'const class std::basic_string<char>' lvalue
    |   `-ImplicitCastExpr 0x9b68cf8 'const class std::basic_string<char>' <NoOp>
    |     `-CXXBindTemporaryExpr 0x9b68ce8 'string':'class std::basic_string<char>' (CXXTemporary 0x9b68ce0)
    |       `-ImplicitCastExpr 0x9b68cd0 'string':'class std::basic_string<char>' <ConstructorConversion>
    |         `-CXXConstructExpr 0x9b68ca8 'string':'class std::basic_string<char>' 'void (const char *, const class std::allocator<char> &)'
    |           |-ImplicitCastExpr 0x9b68bf0 'const char *' <ArrayToPointerDecay>
    |           | `-StringLiteral 0x9b68760 'const char [3]' lvalue "xx"
    |           `-CXXDefaultArgExpr 0x9b68c90 'const class std::allocator<char>':'const class std::allocator<char>' lvalue
    `-CXXConstructExpr 0x9b68d60 'string':'class std::basic_string<char>' 'void (const class std::basic_string<char> &)' elidable
      `-MaterializeTemporaryExpr 0x9b68d50 'const class std::basic_string<char>' lvalue
        `-ImplicitCastExpr 0x9b68d40 'const class std::basic_string<char>' <NoOp>
          `-CXXFunctionalCastExpr 0x9b68ad8 'string':'class std::basic_string<char>' functional cast to string <ConstructorConversion>
            `-CXXBindTemporaryExpr 0x9b68ac8 'string':'class std::basic_string<char>' (CXXTemporary 0x9b68ac0)
              `-CXXConstructExpr 0x9b68a98 'string':'class std::basic_string<char>' 'void (const char *, const class std::allocator<char> &)'
                |-ImplicitCastExpr 0x9b68828 'const char *' <ArrayToPointerDecay>
                | `-StringLiteral 0x9b687b0 'const char [4]' lvalue "yyy"
                `-CXXDefaultArgExpr 0x9b68a80 'const class std::allocator<char>':'const class std::allocator<char>' lvalue
{ {  }, { "xx", string("yyy") } }[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 52] exit decl 9b686c0 (Var)
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 45] exitDecl
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b68e00 (DeclStmt)
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 70] leaving Stmt DeclStmt, start transform
DeclStmt 0x9b68e00
`-VarDecl 0x9b686c0 ____localvar____2 'string [2][2]'
  `-ExprWithCleanups 0x9b68df0 'string [2][2]'
    `-InitListExpr 0x9b68b50 'string [2][2]'
      |-InitListExpr 0x9b68b78 'string [2]'
      `-InitListExpr 0x9b68ba0 'string [2]'
        |-CXXConstructExpr 0x9b68d18 'string':'class std::basic_string<char>' 'void (const class std::basic_string<char> &)' elidable
        | `-MaterializeTemporaryExpr 0x9b68d08 'const class std::basic_string<char>' lvalue
        |   `-ImplicitCastExpr 0x9b68cf8 'const class std::basic_string<char>' <NoOp>
        |     `-CXXBindTemporaryExpr 0x9b68ce8 'string':'class std::basic_string<char>' (CXXTemporary 0x9b68ce0)
        |       `-ImplicitCastExpr 0x9b68cd0 'string':'class std::basic_string<char>' <ConstructorConversion>
        |         `-CXXConstructExpr 0x9b68ca8 'string':'class std::basic_string<char>' 'void (const char *, const class std::allocator<char> &)'
        |           |-ImplicitCastExpr 0x9b68bf0 'const char *' <ArrayToPointerDecay>
        |           | `-StringLiteral 0x9b68760 'const char [3]' lvalue "xx"
        |           `-CXXDefaultArgExpr 0x9b68c90 'const class std::allocator<char>':'const class std::allocator<char>' lvalue
        `-CXXConstructExpr 0x9b68d60 'string':'class std::basic_string<char>' 'void (const class std::basic_string<char> &)' elidable
          `-MaterializeTemporaryExpr 0x9b68d50 'const class std::basic_string<char>' lvalue
            `-ImplicitCastExpr 0x9b68d40 'const class std::basic_string<char>' <NoOp>
              `-CXXFunctionalCastExpr 0x9b68ad8 'string':'class std::basic_string<char>' functional cast to string <ConstructorConversion>
                `-CXXBindTemporaryExpr 0x9b68ac8 'string':'class std::basic_string<char>' (CXXTemporary 0x9b68ac0)
                  `-CXXConstructExpr 0x9b68a98 'string':'class std::basic_string<char>' 'void (const char *, const class std::allocator<char> &)'
                    |-ImplicitCastExpr 0x9b68828 'const char *' <ArrayToPointerDecay>
                    | `-StringLiteral 0x9b687b0 'const char [4]' lvalue "yyy"
                    `-CXXDefaultArgExpr 0x9b68a80 'const class std::allocator<char>':'const class std::allocator<char>' lvalue
string ____localvar____2[2][2] = { {  }, { "xx", string("yyy") } };
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b71ec0 (DeclStmt) | range 
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 62] push stmt DeclStmt 9b71ec0 9982f38 9982f38
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 50] enter decl 9b69090 (Var)
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 37] visitDecl 9b69090(Var) Ctx 9b683c4
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b71ea0 (CXXConstructExpr) | range 
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 62] push stmt CXXConstructExpr 9b71ea0 99947a8 99947a8
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b71ea0 (CXXConstructExpr)
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 70] leaving Stmt CXXConstructExpr, start transform
CXXConstructExpr 0x9b71ea0 'vector<string>':'class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > >' 'void (void)'
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 52] exit decl 9b69090 (Var)
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 45] exitDecl
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b71ec0 (DeclStmt)
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 70] leaving Stmt DeclStmt, start transform
DeclStmt 0x9b71ec0
`-VarDecl 0x9b69090 ____localvar____3 'vector<string>':'class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > >'
  `-CXXConstructExpr 0x9b71ea0 'vector<string>':'class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > >' 'void (void)'
vector<string> ____localvar____3;
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b72090 (BinaryOperator) | range 
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 62] push stmt BinaryOperator 9b72090 998d900 998d900
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 62] push stmt CXXOperatorCallExpr 9b72048 98673e0 98673e0
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b72038 (ImplicitCastExpr) | range 
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 62] push stmt ImplicitCastExpr 9b72038 998d280 998d280
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b71fe8 (DeclRefExpr) | range 
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 62] push stmt DeclRefExpr 9b71fe8 99982d0 99982d0
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b71fe8 (DeclRefExpr)
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 70] leaving Stmt DeclRefExpr, start transform
DeclRefExpr 0x9b71fe8 'reference (size_type)' lvalue CXXMethod 0x9b4cbc0 'operator[]' 'reference (size_type)'
operator[][DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b72038 (ImplicitCastExpr)
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 70] leaving Stmt ImplicitCastExpr, start transform
ImplicitCastExpr 0x9b72038 'reference (*)(size_type)' <FunctionToPointerDecay>
`-DeclRefExpr 0x9b71fe8 'reference (size_type)' lvalue CXXMethod 0x9b4cbc0 'operator[]' 'reference (size_type)'
operator[][DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 62] push stmt CXXOperatorCallExpr 9b71f88 9965ef8 9965ef8
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b71f78 (ImplicitCastExpr) | range 
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 62] push stmt ImplicitCastExpr 9b71f78 9880b18 9880b18
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b71f28 (DeclRefExpr) | range 
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 62] push stmt DeclRefExpr 9b71f28 986b448 986b448
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b71f28 (DeclRefExpr)
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 70] leaving Stmt DeclRefExpr, start transform
DeclRefExpr 0x9b71f28 'reference (size_type)' lvalue CXXMethod 0x9b6e580 'operator[]' 'reference (size_type)'
operator[][DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b71f78 (ImplicitCastExpr)
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 70] leaving Stmt ImplicitCastExpr, start transform
ImplicitCastExpr 0x9b71f78 'reference (*)(size_type)' <FunctionToPointerDecay>
`-DeclRefExpr 0x9b71f28 'reference (size_type)' lvalue CXXMethod 0x9b6e580 'operator[]' 'reference (size_type)'
operator[][DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b71ed0 (DeclRefExpr) | range 
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 62] push stmt DeclRefExpr 9b71ed0 989cf48 989cf48
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b71ed0 (DeclRefExpr)
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 70] leaving Stmt DeclRefExpr, start transform
DeclRefExpr 0x9b71ed0 'vector<string>':'class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > >' lvalue Var 0x9b69090 '____localvar____3' 'vector<string>':'class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > >'
____localvar____3[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b71f18 (ImplicitCastExpr) | range 
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 62] push stmt ImplicitCastExpr 9b71f18 9869e10 9869e10
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b71ee8 (IntegerLiteral) | range 
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 62] push stmt IntegerLiteral 9b71ee8 9982ff0 9982ff0
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b71ee8 (IntegerLiteral)
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 70] leaving Stmt IntegerLiteral, start transform
IntegerLiteral 0x9b71ee8 'int' 2
2[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b71f18 (ImplicitCastExpr)
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 70] leaving Stmt ImplicitCastExpr, start transform
ImplicitCastExpr 0x9b71f18 'size_type':'unsigned int' <IntegralCast>
`-IntegerLiteral 0x9b71ee8 'int' 2
2[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b71fd8 (ImplicitCastExpr) | range 
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 62] push stmt ImplicitCastExpr 9b71fd8 9ae9f60 9ae9f60
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b71fc0 (IntegerLiteral) | range 
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 62] push stmt IntegerLiteral 9b71fc0 9af3150 9af3150
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b71fc0 (IntegerLiteral)
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 70] leaving Stmt IntegerLiteral, start transform
IntegerLiteral 0x9b71fc0 'int' 3
3[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b71fd8 (ImplicitCastExpr)
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 70] leaving Stmt ImplicitCastExpr, start transform
ImplicitCastExpr 0x9b71fd8 'size_type':'unsigned int' <IntegralCast>
`-IntegerLiteral 0x9b71fc0 'int' 3
3[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b72080 (CharacterLiteral) | range 
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 62] push stmt CharacterLiteral 9b72080 998eac8 998eac8
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b72080 (CharacterLiteral)
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 70] leaving Stmt CharacterLiteral, start transform
CharacterLiteral 0x9b72080 'char' 120
'x'[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b72090 (BinaryOperator)
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 70] leaving Stmt BinaryOperator, start transform
BinaryOperator 0x9b72090 'char':'char' lvalue '='
|-CXXOperatorCallExpr 0x9b72048 'char':'char' lvalue
| |-ImplicitCastExpr 0x9b72038 'reference (*)(size_type)' <FunctionToPointerDecay>
| | `-DeclRefExpr 0x9b71fe8 'reference (size_type)' lvalue CXXMethod 0x9b4cbc0 'operator[]' 'reference (size_type)'
| |-CXXOperatorCallExpr 0x9b71f88 'class std::basic_string<char>':'class std::basic_string<char>' lvalue
| | |-ImplicitCastExpr 0x9b71f78 'reference (*)(size_type)' <FunctionToPointerDecay>
| | | `-DeclRefExpr 0x9b71f28 'reference (size_type)' lvalue CXXMethod 0x9b6e580 'operator[]' 'reference (size_type)'
| | |-DeclRefExpr 0x9b71ed0 'vector<string>':'class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > >' lvalue Var 0x9b69090 '____localvar____3' 'vector<string>':'class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > >'
| | `-ImplicitCastExpr 0x9b71f18 'size_type':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x9b71ee8 'int' 2
| `-ImplicitCastExpr 0x9b71fd8 'size_type':'unsigned int' <IntegralCast>
|   `-IntegerLiteral 0x9b71fc0 'int' 3
`-CharacterLiteral 0x9b72080 'char' 120
____localvar____3[2][3] = 'x'[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b720a8 (CompoundStmt)
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 70] leaving Stmt CompoundStmt, start transform
CompoundStmt 0x9b720a8
|-DeclStmt 0x9b68e00
| `-VarDecl 0x9b686c0 ____localvar____2 'string [2][2]'
|   `-ExprWithCleanups 0x9b68df0 'string [2][2]'
|     `-InitListExpr 0x9b68b50 'string [2][2]'
|       |-InitListExpr 0x9b68b78 'string [2]'
|       `-InitListExpr 0x9b68ba0 'string [2]'
|         |-CXXConstructExpr 0x9b68d18 'string':'class std::basic_string<char>' 'void (const class std::basic_string<char> &)' elidable
|         | `-MaterializeTemporaryExpr 0x9b68d08 'const class std::basic_string<char>' lvalue
|         |   `-ImplicitCastExpr 0x9b68cf8 'const class std::basic_string<char>' <NoOp>
|         |     `-CXXBindTemporaryExpr 0x9b68ce8 'string':'class std::basic_string<char>' (CXXTemporary 0x9b68ce0)
|         |       `-ImplicitCastExpr 0x9b68cd0 'string':'class std::basic_string<char>' <ConstructorConversion>
|         |         `-CXXConstructExpr 0x9b68ca8 'string':'class std::basic_string<char>' 'void (const char *, const class std::allocator<char> &)'
|         |           |-ImplicitCastExpr 0x9b68bf0 'const char *' <ArrayToPointerDecay>
|         |           | `-StringLiteral 0x9b68760 'const char [3]' lvalue "xx"
|         |           `-CXXDefaultArgExpr 0x9b68c90 'const class std::allocator<char>':'const class std::allocator<char>' lvalue
|         `-CXXConstructExpr 0x9b68d60 'string':'class std::basic_string<char>' 'void (const class std::basic_string<char> &)' elidable
|           `-MaterializeTemporaryExpr 0x9b68d50 'const class std::basic_string<char>' lvalue
|             `-ImplicitCastExpr 0x9b68d40 'const class std::basic_string<char>' <NoOp>
|               `-CXXFunctionalCastExpr 0x9b68ad8 'string':'class std::basic_string<char>' functional cast to string <ConstructorConversion>
|                 `-CXXBindTemporaryExpr 0x9b68ac8 'string':'class std::basic_string<char>' (CXXTemporary 0x9b68ac0)
|                   `-CXXConstructExpr 0x9b68a98 'string':'class std::basic_string<char>' 'void (const char *, const class std::allocator<char> &)'
|                     |-ImplicitCastExpr 0x9b68828 'const char *' <ArrayToPointerDecay>
|                     | `-StringLiteral 0x9b687b0 'const char [4]' lvalue "yyy"
|                     `-CXXDefaultArgExpr 0x9b68a80 'const class std::allocator<char>':'const class std::allocator<char>' lvalue
|-DeclStmt 0x9b71ec0
| `-VarDecl 0x9b69090 ____localvar____3 'vector<string>':'class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > >'
|   `-CXXConstructExpr 0x9b71ea0 'vector<string>':'class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > >' 'void (void)'
`-BinaryOperator 0x9b72090 'char':'char' lvalue '='
  |-CXXOperatorCallExpr 0x9b72048 'char':'char' lvalue
  | |-ImplicitCastExpr 0x9b72038 'reference (*)(size_type)' <FunctionToPointerDecay>
  | | `-DeclRefExpr 0x9b71fe8 'reference (size_type)' lvalue CXXMethod 0x9b4cbc0 'operator[]' 'reference (size_type)'
  | |-CXXOperatorCallExpr 0x9b71f88 'class std::basic_string<char>':'class std::basic_string<char>' lvalue
  | | |-ImplicitCastExpr 0x9b71f78 'reference (*)(size_type)' <FunctionToPointerDecay>
  | | | `-DeclRefExpr 0x9b71f28 'reference (size_type)' lvalue CXXMethod 0x9b6e580 'operator[]' 'reference (size_type)'
  | | |-DeclRefExpr 0x9b71ed0 'vector<string>':'class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > >' lvalue Var 0x9b69090 '____localvar____3' 'vector<string>':'class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > >'
  | | `-ImplicitCastExpr 0x9b71f18 'size_type':'unsigned int' <IntegralCast>
  | |   `-IntegerLiteral 0x9b71ee8 'int' 2
  | `-ImplicitCastExpr 0x9b71fd8 'size_type':'unsigned int' <IntegralCast>
  |   `-IntegerLiteral 0x9b71fc0 'int' 3
  `-CharacterLiteral 0x9b72080 'char' 120
{
    string ____localvar____2[2][2] = { {  }, { "xx", string("yyy") } };
    vector<string> ____localvar____3;
    ____localvar____3[2][3] = 'x';
}
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 52] exit decl 9b683a0 (Function)
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 45] exitDecl
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 30] END StmtPretransformer
[DEBUG][alg/FlattenCFG/LocalDeclMover.cpp - line 5] START LocalDeclMover
FunctionDecl 0x9b683a0 <test/_array.cpp:11:1, line:15:1> classref 'void (void)'
`-CompoundStmt 0x9b720a8 <line:11:17, line:15:1>
  |-DeclStmt 0x9b68e00 <line:12:2, col:46>
  | `-VarDecl 0x9b686c0 <col:2, col:45> ____localvar____2 'string [2][2]'
  |   `-ExprWithCleanups 0x9b68df0 <col:18, col:45> 'string [2][2]'
  |     `-InitListExpr 0x9b68b50 <col:18, col:45> 'string [2][2]'
  |       |-InitListExpr 0x9b68b78 <col:20, col:21> 'string [2]'
  |       `-InitListExpr 0x9b68ba0 <col:23, col:43> 'string [2]'
  |         |-CXXConstructExpr 0x9b68d18 <col:24> 'string':'class std::basic_string<char>' 'void (const class std::basic_string<char> &)' elidable
  |         | `-MaterializeTemporaryExpr 0x9b68d08 <col:24> 'const class std::basic_string<char>' lvalue
  |         |   `-ImplicitCastExpr 0x9b68cf8 <col:24> 'const class std::basic_string<char>' <NoOp>
  |         |     `-CXXBindTemporaryExpr 0x9b68ce8 <col:24> 'string':'class std::basic_string<char>' (CXXTemporary 0x9b68ce0)
  |         |       `-ImplicitCastExpr 0x9b68cd0 <col:24> 'string':'class std::basic_string<char>' <ConstructorConversion>
  |         |         `-CXXConstructExpr 0x9b68ca8 <col:24> 'string':'class std::basic_string<char>' 'void (const char *, const class std::allocator<char> &)'
  |         |           |-ImplicitCastExpr 0x9b68bf0 <col:24> 'const char *' <ArrayToPointerDecay>
  |         |           | `-StringLiteral 0x9b68760 <col:24> 'const char [3]' lvalue "xx"
  |         |           `-CXXDefaultArgExpr 0x9b68c90 <<invalid sloc>> 'const class std::allocator<char>':'const class std::allocator<char>' lvalue
  |         `-CXXConstructExpr 0x9b68d60 <col:30, col:42> 'string':'class std::basic_string<char>' 'void (const class std::basic_string<char> &)' elidable
  |           `-MaterializeTemporaryExpr 0x9b68d50 <col:30, col:42> 'const class std::basic_string<char>' lvalue
  |             `-ImplicitCastExpr 0x9b68d40 <col:30, col:42> 'const class std::basic_string<char>' <NoOp>
  |               `-CXXFunctionalCastExpr 0x9b68ad8 <col:30, col:42> 'string':'class std::basic_string<char>' functional cast to string <ConstructorConversion>
  |                 `-CXXBindTemporaryExpr 0x9b68ac8 <col:30, col:37> 'string':'class std::basic_string<char>' (CXXTemporary 0x9b68ac0)
  |                   `-CXXConstructExpr 0x9b68a98 <col:30, col:37> 'string':'class std::basic_string<char>' 'void (const char *, const class std::allocator<char> &)'
  |                     |-ImplicitCastExpr 0x9b68828 <col:37> 'const char *' <ArrayToPointerDecay>
  |                     | `-StringLiteral 0x9b687b0 <col:37> 'const char [4]' lvalue "yyy"
  |                     `-CXXDefaultArgExpr 0x9b68a80 <<invalid sloc>> 'const class std::allocator<char>':'const class std::allocator<char>' lvalue
  |-DeclStmt 0x9b71ec0 <line:13:2, col:18>
  | `-VarDecl 0x9b69090 <col:2, col:17> ____localvar____3 'vector<string>':'class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > >'
  |   `-CXXConstructExpr 0x9b71ea0 <col:17> 'vector<string>':'class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > >' 'void (void)'
  `-BinaryOperator 0x9b72090 <line:14:2, col:12> 'char':'char' lvalue '='
    |-CXXOperatorCallExpr 0x9b72048 <col:2, col:8> 'char':'char' lvalue
    | |-ImplicitCastExpr 0x9b72038 <col:6, col:8> 'reference (*)(size_type)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x9b71fe8 <col:6, col:8> 'reference (size_type)' lvalue CXXMethod 0x9b4cbc0 'operator[]' 'reference (size_type)'
    | |-CXXOperatorCallExpr 0x9b71f88 <col:2, col:5> 'class std::basic_string<char>':'class std::basic_string<char>' lvalue
    | | |-ImplicitCastExpr 0x9b71f78 <col:3, col:5> 'reference (*)(size_type)' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x9b71f28 <col:3, col:5> 'reference (size_type)' lvalue CXXMethod 0x9b6e580 'operator[]' 'reference (size_type)'
    | | |-DeclRefExpr 0x9b71ed0 <col:2> 'vector<string>':'class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > >' lvalue Var 0x9b69090 '____localvar____3' 'vector<string>':'class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > >'
    | | `-ImplicitCastExpr 0x9b71f18 <col:4> 'size_type':'unsigned int' <IntegralCast>
    | |   `-IntegerLiteral 0x9b71ee8 <col:4> 'int' 2
    | `-ImplicitCastExpr 0x9b71fd8 <col:7> 'size_type':'unsigned int' <IntegralCast>
    |   `-IntegerLiteral 0x9b71fc0 <col:7> 'int' 3
    `-CharacterLiteral 0x9b72080 <col:12> 'char' 120
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 50] enter decl 9b683a0 (Function)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b720a8 (CompoundStmt) | range 
[DEBUG][alg/FlattenCFG/LocalDeclMover.cpp - line 48] Stmt CompoundStmt ( 9b720a8 -> p 0 )
CompoundStmt 0x9b720a8
|-DeclStmt 0x9b68e00
| `-VarDecl 0x9b686c0 ____localvar____2 'string [2][2]'
|   `-ExprWithCleanups 0x9b68df0 'string [2][2]'
|     `-InitListExpr 0x9b68b50 'string [2][2]'
|       |-InitListExpr 0x9b68b78 'string [2]'
|       `-InitListExpr 0x9b68ba0 'string [2]'
|         |-CXXConstructExpr 0x9b68d18 'string':'class std::basic_string<char>' 'void (const class std::basic_string<char> &)' elidable
|         | `-MaterializeTemporaryExpr 0x9b68d08 'const class std::basic_string<char>' lvalue
|         |   `-ImplicitCastExpr 0x9b68cf8 'const class std::basic_string<char>' <NoOp>
|         |     `-CXXBindTemporaryExpr 0x9b68ce8 'string':'class std::basic_string<char>' (CXXTemporary 0x9b68ce0)
|         |       `-ImplicitCastExpr 0x9b68cd0 'string':'class std::basic_string<char>' <ConstructorConversion>
|         |         `-CXXConstructExpr 0x9b68ca8 'string':'class std::basic_string<char>' 'void (const char *, const class std::allocator<char> &)'
|         |           |-ImplicitCastExpr 0x9b68bf0 'const char *' <ArrayToPointerDecay>
|         |           | `-StringLiteral 0x9b68760 'const char [3]' lvalue "xx"
|         |           `-CXXDefaultArgExpr 0x9b68c90 'const class std::allocator<char>':'const class std::allocator<char>' lvalue
|         `-CXXConstructExpr 0x9b68d60 'string':'class std::basic_string<char>' 'void (const class std::basic_string<char> &)' elidable
|           `-MaterializeTemporaryExpr 0x9b68d50 'const class std::basic_string<char>' lvalue
|             `-ImplicitCastExpr 0x9b68d40 'const class std::basic_string<char>' <NoOp>
|               `-CXXFunctionalCastExpr 0x9b68ad8 'string':'class std::basic_string<char>' functional cast to string <ConstructorConversion>
|                 `-CXXBindTemporaryExpr 0x9b68ac8 'string':'class std::basic_string<char>' (CXXTemporary 0x9b68ac0)
|                   `-CXXConstructExpr 0x9b68a98 'string':'class std::basic_string<char>' 'void (const char *, const class std::allocator<char> &)'
|                     |-ImplicitCastExpr 0x9b68828 'const char *' <ArrayToPointerDecay>
|                     | `-StringLiteral 0x9b687b0 'const char [4]' lvalue "yyy"
|                     `-CXXDefaultArgExpr 0x9b68a80 'const class std::allocator<char>':'const class std::allocator<char>' lvalue
|-DeclStmt 0x9b71ec0
| `-VarDecl 0x9b69090 ____localvar____3 'vector<string>':'class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > >'
|   `-CXXConstructExpr 0x9b71ea0 'vector<string>':'class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > >' 'void (void)'
`-BinaryOperator 0x9b72090 'char':'char' lvalue '='
  |-CXXOperatorCallExpr 0x9b72048 'char':'char' lvalue
  | |-ImplicitCastExpr 0x9b72038 'reference (*)(size_type)' <FunctionToPointerDecay>
  | | `-DeclRefExpr 0x9b71fe8 'reference (size_type)' lvalue CXXMethod 0x9b4cbc0 'operator[]' 'reference (size_type)'
  | |-CXXOperatorCallExpr 0x9b71f88 'class std::basic_string<char>':'class std::basic_string<char>' lvalue
  | | |-ImplicitCastExpr 0x9b71f78 'reference (*)(size_type)' <FunctionToPointerDecay>
  | | | `-DeclRefExpr 0x9b71f28 'reference (size_type)' lvalue CXXMethod 0x9b6e580 'operator[]' 'reference (size_type)'
  | | |-DeclRefExpr 0x9b71ed0 'vector<string>':'class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > >' lvalue Var 0x9b69090 '____localvar____3' 'vector<string>':'class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > >'
  | | `-ImplicitCastExpr 0x9b71f18 'size_type':'unsigned int' <IntegralCast>
  | |   `-IntegerLiteral 0x9b71ee8 'int' 2
  | `-ImplicitCastExpr 0x9b71fd8 'size_type':'unsigned int' <IntegralCast>
  |   `-IntegerLiteral 0x9b71fc0 'int' 3
  `-CharacterLiteral 0x9b72080 'char' 120
{
    string ____localvar____2[2][2] = { {  }, { "xx", string("yyy") } };
    vector<string> ____localvar____3;
    ____localvar____3[2][3] = 'x';
}
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b68e00 (DeclStmt) | range 
[DEBUG][alg/FlattenCFG/LocalDeclMover.cpp - line 48] Stmt DeclStmt ( 9b68e00 -> p 9b720a8 )
DeclStmt 0x9b68e00
`-VarDecl 0x9b686c0 ____localvar____2 'string [2][2]'
  `-ExprWithCleanups 0x9b68df0 'string [2][2]'
    `-InitListExpr 0x9b68b50 'string [2][2]'
      |-InitListExpr 0x9b68b78 'string [2]'
      `-InitListExpr 0x9b68ba0 'string [2]'
        |-CXXConstructExpr 0x9b68d18 'string':'class std::basic_string<char>' 'void (const class std::basic_string<char> &)' elidable
        | `-MaterializeTemporaryExpr 0x9b68d08 'const class std::basic_string<char>' lvalue
        |   `-ImplicitCastExpr 0x9b68cf8 'const class std::basic_string<char>' <NoOp>
        |     `-CXXBindTemporaryExpr 0x9b68ce8 'string':'class std::basic_string<char>' (CXXTemporary 0x9b68ce0)
        |       `-ImplicitCastExpr 0x9b68cd0 'string':'class std::basic_string<char>' <ConstructorConversion>
        |         `-CXXConstructExpr 0x9b68ca8 'string':'class std::basic_string<char>' 'void (const char *, const class std::allocator<char> &)'
        |           |-ImplicitCastExpr 0x9b68bf0 'const char *' <ArrayToPointerDecay>
        |           | `-StringLiteral 0x9b68760 'const char [3]' lvalue "xx"
        |           `-CXXDefaultArgExpr 0x9b68c90 'const class std::allocator<char>':'const class std::allocator<char>' lvalue
        `-CXXConstructExpr 0x9b68d60 'string':'class std::basic_string<char>' 'void (const class std::basic_string<char> &)' elidable
          `-MaterializeTemporaryExpr 0x9b68d50 'const class std::basic_string<char>' lvalue
            `-ImplicitCastExpr 0x9b68d40 'const class std::basic_string<char>' <NoOp>
              `-CXXFunctionalCastExpr 0x9b68ad8 'string':'class std::basic_string<char>' functional cast to string <ConstructorConversion>
                `-CXXBindTemporaryExpr 0x9b68ac8 'string':'class std::basic_string<char>' (CXXTemporary 0x9b68ac0)
                  `-CXXConstructExpr 0x9b68a98 'string':'class std::basic_string<char>' 'void (const char *, const class std::allocator<char> &)'
                    |-ImplicitCastExpr 0x9b68828 'const char *' <ArrayToPointerDecay>
                    | `-StringLiteral 0x9b687b0 'const char [4]' lvalue "yyy"
                    `-CXXDefaultArgExpr 0x9b68a80 'const class std::allocator<char>':'const class std::allocator<char>' lvalue
string ____localvar____2[2][2] = { {  }, { "xx", string("yyy") } };
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 50] enter decl 9b686c0 (Var)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b68400 (IntegerLiteral) | range 
[DEBUG][alg/FlattenCFG/LocalDeclMover.cpp - line 48] Stmt IntegerLiteral ( 9b68400 -> p 0 )
IntegerLiteral 0x9b68400 'int' 2
2[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b68400 (IntegerLiteral)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b68df0 (ExprWithCleanups) | range 
[DEBUG][alg/FlattenCFG/LocalDeclMover.cpp - line 48] Stmt ExprWithCleanups ( 9b68df0 -> p 9b68e00 )
ExprWithCleanups 0x9b68df0 'string [2][2]'
`-InitListExpr 0x9b68b50 'string [2][2]'
  |-InitListExpr 0x9b68b78 'string [2]'
  `-InitListExpr 0x9b68ba0 'string [2]'
    |-CXXConstructExpr 0x9b68d18 'string':'class std::basic_string<char>' 'void (const class std::basic_string<char> &)' elidable
    | `-MaterializeTemporaryExpr 0x9b68d08 'const class std::basic_string<char>' lvalue
    |   `-ImplicitCastExpr 0x9b68cf8 'const class std::basic_string<char>' <NoOp>
    |     `-CXXBindTemporaryExpr 0x9b68ce8 'string':'class std::basic_string<char>' (CXXTemporary 0x9b68ce0)
    |       `-ImplicitCastExpr 0x9b68cd0 'string':'class std::basic_string<char>' <ConstructorConversion>
    |         `-CXXConstructExpr 0x9b68ca8 'string':'class std::basic_string<char>' 'void (const char *, const class std::allocator<char> &)'
    |           |-ImplicitCastExpr 0x9b68bf0 'const char *' <ArrayToPointerDecay>
    |           | `-StringLiteral 0x9b68760 'const char [3]' lvalue "xx"
    |           `-CXXDefaultArgExpr 0x9b68c90 'const class std::allocator<char>':'const class std::allocator<char>' lvalue
    `-CXXConstructExpr 0x9b68d60 'string':'class std::basic_string<char>' 'void (const class std::basic_string<char> &)' elidable
      `-MaterializeTemporaryExpr 0x9b68d50 'const class std::basic_string<char>' lvalue
        `-ImplicitCastExpr 0x9b68d40 'const class std::basic_string<char>' <NoOp>
          `-CXXFunctionalCastExpr 0x9b68ad8 'string':'class std::basic_string<char>' functional cast to string <ConstructorConversion>
            `-CXXBindTemporaryExpr 0x9b68ac8 'string':'class std::basic_string<char>' (CXXTemporary 0x9b68ac0)
              `-CXXConstructExpr 0x9b68a98 'string':'class std::basic_string<char>' 'void (const char *, const class std::allocator<char> &)'
                |-ImplicitCastExpr 0x9b68828 'const char *' <ArrayToPointerDecay>
                | `-StringLiteral 0x9b687b0 'const char [4]' lvalue "yyy"
                `-CXXDefaultArgExpr 0x9b68a80 'const class std::allocator<char>':'const class std::allocator<char>' lvalue
{ {  }, { "xx", string("yyy") } }[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b68b50 (InitListExpr) | range 
[DEBUG][alg/FlattenCFG/LocalDeclMover.cpp - line 48] Stmt InitListExpr ( 9b68b20 -> p 0 )
InitListExpr 0x9b68b20 'string [2][2]'
|-InitListExpr 0x9b686f0 'string [2]'
`-InitListExpr 0x9b68af0 'string [2]'
  |-StringLiteral 0x9b68760 'const char [3]' lvalue "xx"
  `-CXXFunctionalCastExpr 0x9b68ad8 'string':'class std::basic_string<char>' functional cast to string <ConstructorConversion>
    `-CXXBindTemporaryExpr 0x9b68ac8 'string':'class std::basic_string<char>' (CXXTemporary 0x9b68ac0)
      `-CXXConstructExpr 0x9b68a98 'string':'class std::basic_string<char>' 'void (const char *, const class std::allocator<char> &)'
        |-ImplicitCastExpr 0x9b68828 'const char *' <ArrayToPointerDecay>
        | `-StringLiteral 0x9b687b0 'const char [4]' lvalue "yyy"
        `-CXXDefaultArgExpr 0x9b68a80 'const class std::allocator<char>':'const class std::allocator<char>' lvalue
{ {  }, { "xx", string("yyy") } }[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b686f0 (InitListExpr) | range 
[DEBUG][alg/FlattenCFG/LocalDeclMover.cpp - line 48] Stmt InitListExpr ( 9b686f0 -> p 9b68b20 )
InitListExpr 0x9b686f0 'string [2]'
{  }[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b686f0 (InitListExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b68af0 (InitListExpr) | range 
[DEBUG][alg/FlattenCFG/LocalDeclMover.cpp - line 48] Stmt InitListExpr ( 9b68af0 -> p 9b68b20 )
InitListExpr 0x9b68af0 'string [2]'
|-StringLiteral 0x9b68760 'const char [3]' lvalue "xx"
`-CXXFunctionalCastExpr 0x9b68ad8 'string':'class std::basic_string<char>' functional cast to string <ConstructorConversion>
  `-CXXBindTemporaryExpr 0x9b68ac8 'string':'class std::basic_string<char>' (CXXTemporary 0x9b68ac0)
    `-CXXConstructExpr 0x9b68a98 'string':'class std::basic_string<char>' 'void (const char *, const class std::allocator<char> &)'
      |-ImplicitCastExpr 0x9b68828 'const char *' <ArrayToPointerDecay>
      | `-StringLiteral 0x9b687b0 'const char [4]' lvalue "yyy"
      `-CXXDefaultArgExpr 0x9b68a80 'const class std::allocator<char>':'const class std::allocator<char>' lvalue
{ "xx", string("yyy") }[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b68760 (StringLiteral) | range 
[DEBUG][alg/FlattenCFG/LocalDeclMover.cpp - line 48] Stmt StringLiteral ( 9b68760 -> p 9b68af0 )
StringLiteral 0x9b68760 'const char [3]' lvalue "xx"
"xx"[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b68760 (StringLiteral)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b68ad8 (CXXFunctionalCastExpr) | range 
[DEBUG][alg/FlattenCFG/LocalDeclMover.cpp - line 48] Stmt CXXFunctionalCastExpr ( 9b68ad8 -> p 9b68af0 )
CXXFunctionalCastExpr 0x9b68ad8 'string':'class std::basic_string<char>' functional cast to string <ConstructorConversion>
`-CXXBindTemporaryExpr 0x9b68ac8 'string':'class std::basic_string<char>' (CXXTemporary 0x9b68ac0)
  `-CXXConstructExpr 0x9b68a98 'string':'class std::basic_string<char>' 'void (const char *, const class std::allocator<char> &)'
    |-ImplicitCastExpr 0x9b68828 'const char *' <ArrayToPointerDecay>
    | `-StringLiteral 0x9b687b0 'const char [4]' lvalue "yyy"
    `-CXXDefaultArgExpr 0x9b68a80 'const class std::allocator<char>':'const class std::allocator<char>' lvalue
string("yyy")[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b68ac8 (CXXBindTemporaryExpr) | range 
[DEBUG][alg/FlattenCFG/LocalDeclMover.cpp - line 48] Stmt CXXBindTemporaryExpr ( 9b68ac8 -> p 9b68ad8 )
CXXBindTemporaryExpr 0x9b68ac8 'string':'class std::basic_string<char>' (CXXTemporary 0x9b68ac0)
`-CXXConstructExpr 0x9b68a98 'string':'class std::basic_string<char>' 'void (const char *, const class std::allocator<char> &)'
  |-ImplicitCastExpr 0x9b68828 'const char *' <ArrayToPointerDecay>
  | `-StringLiteral 0x9b687b0 'const char [4]' lvalue "yyy"
  `-CXXDefaultArgExpr 0x9b68a80 'const class std::allocator<char>':'const class std::allocator<char>' lvalue
"yyy"[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b68a98 (CXXConstructExpr) | range 
[DEBUG][alg/FlattenCFG/LocalDeclMover.cpp - line 48] Stmt CXXConstructExpr ( 9b68a98 -> p 9b68ac8 )
CXXConstructExpr 0x9b68a98 'string':'class std::basic_string<char>' 'void (const char *, const class std::allocator<char> &)'
|-ImplicitCastExpr 0x9b68828 'const char *' <ArrayToPointerDecay>
| `-StringLiteral 0x9b687b0 'const char [4]' lvalue "yyy"
`-CXXDefaultArgExpr 0x9b68a80 'const class std::allocator<char>':'const class std::allocator<char>' lvalue
"yyy"[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b68828 (ImplicitCastExpr) | range 
[DEBUG][alg/FlattenCFG/LocalDeclMover.cpp - line 48] Stmt ImplicitCastExpr ( 9b68828 -> p 9b68a98 )
ImplicitCastExpr 0x9b68828 'const char *' <ArrayToPointerDecay>
`-StringLiteral 0x9b687b0 'const char [4]' lvalue "yyy"
"yyy"[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b687b0 (StringLiteral) | range 
[DEBUG][alg/FlattenCFG/LocalDeclMover.cpp - line 48] Stmt StringLiteral ( 9b687b0 -> p 9b68828 )
StringLiteral 0x9b687b0 'const char [4]' lvalue "yyy"
"yyy"[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b687b0 (StringLiteral)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b68828 (ImplicitCastExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b68a80 (CXXDefaultArgExpr) | range 
[DEBUG][alg/FlattenCFG/LocalDeclMover.cpp - line 48] Stmt CXXDefaultArgExpr ( 9b68a80 -> p 9b68a98 )
CXXDefaultArgExpr 0x9b68a80 'const class std::allocator<char>':'const class std::allocator<char>' lvalue
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b68a80 (CXXDefaultArgExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b68a98 (CXXConstructExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b68ac8 (CXXBindTemporaryExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b68ad8 (CXXFunctionalCastExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b68af0 (InitListExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b68b50 (InitListExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b68df0 (ExprWithCleanups)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 52] exit decl 9b686c0 (Var)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b68e00 (DeclStmt)
[DEBUG][alg/FlattenCFG/LocalDeclMover.cpp - line 177] WorkOnDeclStmt
[DEBUG][alg/FlattenCFG/LocalDeclMover.cpp - line 229] Handle VarDecl ____localvar____2 9b686c0 | Ctx 9b683c4(Function) -> p 98706f4
[DEBUG][alg/FlattenCFG/LocalDeclMover.cpp - line 254] QualType 
string identifier[2][2]
ExprWithCleanups 0x9b68df0 'string [2][2]'
`-InitListExpr 0x9b68b50 'string [2][2]'
  |-InitListExpr 0x9b68b78 'string [2]'
  `-InitListExpr 0x9b68ba0 'string [2]'
    |-CXXConstructExpr 0x9b68d18 'string':'class std::basic_string<char>' 'void (const class std::basic_string<char> &)' elidable
    | `-MaterializeTemporaryExpr 0x9b68d08 'const class std::basic_string<char>' lvalue
    |   `-ImplicitCastExpr 0x9b68cf8 'const class std::basic_string<char>' <NoOp>
    |     `-CXXBindTemporaryExpr 0x9b68ce8 'string':'class std::basic_string<char>' (CXXTemporary 0x9b68ce0)
    |       `-ImplicitCastExpr 0x9b68cd0 'string':'class std::basic_string<char>' <ConstructorConversion>
    |         `-CXXConstructExpr 0x9b68ca8 'string':'class std::basic_string<char>' 'void (const char *, const class std::allocator<char> &)'
    |           |-ImplicitCastExpr 0x9b68bf0 'const char *' <ArrayToPointerDecay>
    |           | `-StringLiteral 0x9b68760 'const char [3]' lvalue "xx"
    |           `-CXXDefaultArgExpr 0x9b68c90 'const class std::allocator<char>':'const class std::allocator<char>' lvalue
    `-CXXConstructExpr 0x9b68d60 'string':'class std::basic_string<char>' 'void (const class std::basic_string<char> &)' elidable
      `-MaterializeTemporaryExpr 0x9b68d50 'const class std::basic_string<char>' lvalue
        `-ImplicitCastExpr 0x9b68d40 'const class std::basic_string<char>' <NoOp>
          `-CXXFunctionalCastExpr 0x9b68ad8 'string':'class std::basic_string<char>' functional cast to string <ConstructorConversion>
            `-CXXBindTemporaryExpr 0x9b68ac8 'string':'class std::basic_string<char>' (CXXTemporary 0x9b68ac0)
              `-CXXConstructExpr 0x9b68a98 'string':'class std::basic_string<char>' 'void (const char *, const class std::allocator<char> &)'
                |-ImplicitCastExpr 0x9b68828 'const char *' <ArrayToPointerDecay>
                | `-StringLiteral 0x9b687b0 'const char [4]' lvalue "yyy"
                `-CXXDefaultArgExpr 0x9b68a80 'const class std::allocator<char>':'const class std::allocator<char>' lvalue
[DEBUG][alg/FlattenCFG/LocalDeclMover.cpp - line 297] ArrayType
[DEBUG][alg/Algorithm.cpp - line 215] Build sub expr idx = 0
[DEBUG][alg/Algorithm.cpp - line 215] Build sub expr idx = 1
[DEBUG][alg/FlattenCFG/LocalDeclMover.cpp - line 140] construct(not void)
[DEBUG][alg/Algorithm.cpp - line 215] Build sub expr idx = 0
[DEBUG][alg/Algorithm.cpp - line 215] Build sub expr idx = 1
[DEBUG][alg/FlattenCFG/LocalDeclMover.cpp - line 140] construct(not void)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b71ec0 (DeclStmt) | range 
[DEBUG][alg/FlattenCFG/LocalDeclMover.cpp - line 48] Stmt DeclStmt ( 9b71ec0 -> p 9b720a8 )
DeclStmt 0x9b71ec0
`-VarDecl 0x9b69090 ____localvar____3 'vector<string>':'class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > >'
  `-CXXConstructExpr 0x9b71ea0 'vector<string>':'class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > >' 'void (void)'
vector<string> ____localvar____3;
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 50] enter decl 9b69090 (Var)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b71ea0 (CXXConstructExpr) | range 
[DEBUG][alg/FlattenCFG/LocalDeclMover.cpp - line 48] Stmt CXXConstructExpr ( 9b71ea0 -> p 9b71ec0 )
CXXConstructExpr 0x9b71ea0 'vector<string>':'class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > >' 'void (void)'
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b71ea0 (CXXConstructExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 52] exit decl 9b69090 (Var)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b71ec0 (DeclStmt)
[DEBUG][alg/FlattenCFG/LocalDeclMover.cpp - line 177] WorkOnDeclStmt
[DEBUG][alg/FlattenCFG/LocalDeclMover.cpp - line 229] Handle VarDecl ____localvar____3 9b69090 | Ctx 9b683c4(Function) -> p 98706f4
[DEBUG][alg/FlattenCFG/LocalDeclMover.cpp - line 254] QualType 
class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > > identifier
CXXConstructExpr 0x9b71ea0 'vector<string>':'class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > >' 'void (void)'
[DEBUG][alg/FlattenCFG/LocalDeclMover.cpp - line 306] Expr type: lhs 9b69000, rhs 9b69000
[DEBUG][alg/FlattenCFG/LocalDeclMover.cpp - line 137] construct(void)
[DEBUG][alg/FlattenCFG/LocalDeclMover.cpp - line 309] retAssign
CXXOperatorCallExpr 0x9b85958 'class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > >' lvalue
|-ImplicitCastExpr 0x9b85948 'class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > > &(*)(const class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > > &)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x9b85918 'class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > > &(const class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > > &)' lvalue CXXMethod 0x9b6d820 'operator=' 'class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > > &(const class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > > &)'
|-DeclRefExpr 0x9b85890 'vector<string>':'class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > >' lvalue Var 0x9b69090 '____localvar____3' 'vector<string>':'class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > >'
`-MaterializeTemporaryExpr 0x9b85908 'const class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > >' lvalue
  `-ImplicitCastExpr 0x9b858f8 'const class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > >' <NoOp>
    `-CXXBindTemporaryExpr 0x9b858e8 'class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > >' (CXXTemporary 0x9b858e0)
      `-CXXTemporaryObjectExpr 0x9b858b0 'class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > >' 'void (void)'
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b72090 (BinaryOperator) | range 
[DEBUG][alg/FlattenCFG/LocalDeclMover.cpp - line 48] Stmt BinaryOperator ( 9b72090 -> p 9b720a8 )
BinaryOperator 0x9b72090 'char':'char' lvalue '='
|-CXXOperatorCallExpr 0x9b72048 'char':'char' lvalue
| |-ImplicitCastExpr 0x9b72038 'reference (*)(size_type)' <FunctionToPointerDecay>
| | `-DeclRefExpr 0x9b71fe8 'reference (size_type)' lvalue CXXMethod 0x9b4cbc0 'operator[]' 'reference (size_type)'
| |-CXXOperatorCallExpr 0x9b71f88 'class std::basic_string<char>':'class std::basic_string<char>' lvalue
| | |-ImplicitCastExpr 0x9b71f78 'reference (*)(size_type)' <FunctionToPointerDecay>
| | | `-DeclRefExpr 0x9b71f28 'reference (size_type)' lvalue CXXMethod 0x9b6e580 'operator[]' 'reference (size_type)'
| | |-DeclRefExpr 0x9b71ed0 'vector<string>':'class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > >' lvalue Var 0x9b69090 '____localvar____3' 'vector<string>':'class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > >'
| | `-ImplicitCastExpr 0x9b71f18 'size_type':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x9b71ee8 'int' 2
| `-ImplicitCastExpr 0x9b71fd8 'size_type':'unsigned int' <IntegralCast>
|   `-IntegerLiteral 0x9b71fc0 'int' 3
`-CharacterLiteral 0x9b72080 'char' 120
____localvar____3[2][3] = 'x'[DEBUG][alg/FlattenCFG/LocalDeclMover.cpp - line 48] Stmt CXXOperatorCallExpr ( 9b72048 -> p 9b72090 )
CXXOperatorCallExpr 0x9b72048 'char':'char' lvalue
|-ImplicitCastExpr 0x9b72038 'reference (*)(size_type)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x9b71fe8 'reference (size_type)' lvalue CXXMethod 0x9b4cbc0 'operator[]' 'reference (size_type)'
|-CXXOperatorCallExpr 0x9b71f88 'class std::basic_string<char>':'class std::basic_string<char>' lvalue
| |-ImplicitCastExpr 0x9b71f78 'reference (*)(size_type)' <FunctionToPointerDecay>
| | `-DeclRefExpr 0x9b71f28 'reference (size_type)' lvalue CXXMethod 0x9b6e580 'operator[]' 'reference (size_type)'
| |-DeclRefExpr 0x9b71ed0 'vector<string>':'class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > >' lvalue Var 0x9b69090 '____localvar____3' 'vector<string>':'class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > >'
| `-ImplicitCastExpr 0x9b71f18 'size_type':'unsigned int' <IntegralCast>
|   `-IntegerLiteral 0x9b71ee8 'int' 2
`-ImplicitCastExpr 0x9b71fd8 'size_type':'unsigned int' <IntegralCast>
  `-IntegerLiteral 0x9b71fc0 'int' 3
____localvar____3[2][3][DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b72038 (ImplicitCastExpr) | range 
[DEBUG][alg/FlattenCFG/LocalDeclMover.cpp - line 48] Stmt ImplicitCastExpr ( 9b72038 -> p 9b72048 )
ImplicitCastExpr 0x9b72038 'reference (*)(size_type)' <FunctionToPointerDecay>
`-DeclRefExpr 0x9b71fe8 'reference (size_type)' lvalue CXXMethod 0x9b4cbc0 'operator[]' 'reference (size_type)'
operator[][DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b71fe8 (DeclRefExpr) | range 
[DEBUG][alg/FlattenCFG/LocalDeclMover.cpp - line 48] Stmt DeclRefExpr ( 9b71fe8 -> p 9b72038 )
DeclRefExpr 0x9b71fe8 'reference (size_type)' lvalue CXXMethod 0x9b4cbc0 'operator[]' 'reference (size_type)'
operator[][DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b71fe8 (DeclRefExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b72038 (ImplicitCastExpr)
[DEBUG][alg/FlattenCFG/LocalDeclMover.cpp - line 48] Stmt CXXOperatorCallExpr ( 9b71f88 -> p 9b72048 )
CXXOperatorCallExpr 0x9b71f88 'class std::basic_string<char>':'class std::basic_string<char>' lvalue
|-ImplicitCastExpr 0x9b71f78 'reference (*)(size_type)' <FunctionToPointerDecay>
| `-DeclRefExpr 0x9b71f28 'reference (size_type)' lvalue CXXMethod 0x9b6e580 'operator[]' 'reference (size_type)'
|-DeclRefExpr 0x9b71ed0 'vector<string>':'class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > >' lvalue Var 0x9b69090 '____localvar____3' 'vector<string>':'class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > >'
`-ImplicitCastExpr 0x9b71f18 'size_type':'unsigned int' <IntegralCast>
  `-IntegerLiteral 0x9b71ee8 'int' 2
____localvar____3[2][DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b71f78 (ImplicitCastExpr) | range 
[DEBUG][alg/FlattenCFG/LocalDeclMover.cpp - line 48] Stmt ImplicitCastExpr ( 9b71f78 -> p 9b71f88 )
ImplicitCastExpr 0x9b71f78 'reference (*)(size_type)' <FunctionToPointerDecay>
`-DeclRefExpr 0x9b71f28 'reference (size_type)' lvalue CXXMethod 0x9b6e580 'operator[]' 'reference (size_type)'
operator[][DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b71f28 (DeclRefExpr) | range 
[DEBUG][alg/FlattenCFG/LocalDeclMover.cpp - line 48] Stmt DeclRefExpr ( 9b71f28 -> p 9b71f78 )
DeclRefExpr 0x9b71f28 'reference (size_type)' lvalue CXXMethod 0x9b6e580 'operator[]' 'reference (size_type)'
operator[][DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b71f28 (DeclRefExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b71f78 (ImplicitCastExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b71ed0 (DeclRefExpr) | range 
[DEBUG][alg/FlattenCFG/LocalDeclMover.cpp - line 48] Stmt DeclRefExpr ( 9b71ed0 -> p 9b71f88 )
DeclRefExpr 0x9b71ed0 'vector<string>':'class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > >' lvalue Var 0x9b69090 '____localvar____3' 'vector<string>':'class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > >'
____localvar____3[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b71ed0 (DeclRefExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b71f18 (ImplicitCastExpr) | range 
[DEBUG][alg/FlattenCFG/LocalDeclMover.cpp - line 48] Stmt ImplicitCastExpr ( 9b71f18 -> p 9b71f88 )
ImplicitCastExpr 0x9b71f18 'size_type':'unsigned int' <IntegralCast>
`-IntegerLiteral 0x9b71ee8 'int' 2
2[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b71ee8 (IntegerLiteral) | range 
[DEBUG][alg/FlattenCFG/LocalDeclMover.cpp - line 48] Stmt IntegerLiteral ( 9b71ee8 -> p 9b71f18 )
IntegerLiteral 0x9b71ee8 'int' 2
2[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b71ee8 (IntegerLiteral)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b71f18 (ImplicitCastExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b71fd8 (ImplicitCastExpr) | range 
[DEBUG][alg/FlattenCFG/LocalDeclMover.cpp - line 48] Stmt ImplicitCastExpr ( 9b71fd8 -> p 9b72048 )
ImplicitCastExpr 0x9b71fd8 'size_type':'unsigned int' <IntegralCast>
`-IntegerLiteral 0x9b71fc0 'int' 3
3[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b71fc0 (IntegerLiteral) | range 
[DEBUG][alg/FlattenCFG/LocalDeclMover.cpp - line 48] Stmt IntegerLiteral ( 9b71fc0 -> p 9b71fd8 )
IntegerLiteral 0x9b71fc0 'int' 3
3[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b71fc0 (IntegerLiteral)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b71fd8 (ImplicitCastExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b72080 (CharacterLiteral) | range 
[DEBUG][alg/FlattenCFG/LocalDeclMover.cpp - line 48] Stmt CharacterLiteral ( 9b72080 -> p 9b72090 )
CharacterLiteral 0x9b72080 'char' 120
'x'[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b72080 (CharacterLiteral)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b72090 (BinaryOperator)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b720a8 (CompoundStmt)
[DEBUG][alg/FlattenCFG/LocalDeclMover.cpp - line 109] root stmt type CompoundStmt 9b720a8 | children size 2
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 52] exit decl 9b683a0 (Function)
[DEBUG][alg/FlattenCFG/LocalDeclMover.cpp - line 27] END LocalDeclMover
FunctionDecl 0x9b683a0 <test/_array.cpp:11:1, line:15:1> classref 'void (void)'
`-CompoundStmt 0x9b720a8 <line:11:17, line:15:1>
  |-DeclStmt 0x9b85868 <<invalid sloc>>
  | `-VarDecl 0x9b686c0 <line:12:2, col:14> ____localvar____2 'string [2][2]'
  |-DeclStmt 0x9b85990 <<invalid sloc>>
  | `-VarDecl 0x9b69090 <line:13:2, col:17> ____localvar____3 'vector<string>':'class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > >'
  |-CompoundStmt 0x9b85878 <<invalid sloc>>
  | |-CXXOperatorCallExpr 0x9b85688 <<invalid sloc>, <invalid sloc>> 'class std::basic_string<char>' lvalue
  | | |-ImplicitCastExpr 0x9b85678 <<invalid sloc>> 'class std::basic_string<char> &(*)(const class std::basic_string<char> &)' <FunctionToPointerDecay>
  | | | `-DeclRefExpr 0x9b85640 <<invalid sloc>> 'class std::basic_string<char> &(const class std::basic_string<char> &)' lvalue CXXMethod 0x9b4bbb0 'operator=' 'class std::basic_string<char> &(const class std::basic_string<char> &)'
  | | |-ArraySubscriptExpr 0x9b85558 <<invalid sloc>> 'string':'class std::basic_string<char>' lvalue
  | | | |-ImplicitCastExpr 0x9b85548 <<invalid sloc>> 'string *' <ArrayToPointerDecay>
  | | | | `-ArraySubscriptExpr 0x9b85518 <<invalid sloc>> 'string [2]' lvalue
  | | | |   |-ImplicitCastExpr 0x9b85508 <<invalid sloc>> 'string (*)[2]' <ArrayToPointerDecay>
  | | | |   | `-DeclRefExpr 0x9b8546c <<invalid sloc>> 'string [2][2]' lvalue Var 0x9b686c0 '____localvar____2' 'string [2][2]'
  | | | |   `-IntegerLiteral 0x9b854a0 <<invalid sloc>> 'int' 1
  | | | `-IntegerLiteral 0x9b854b8 <<invalid sloc>> 'int' 0
  | | `-MaterializeTemporaryExpr 0x9b85630 <<invalid sloc>, <invalid sloc>> 'const class std::basic_string<char>' lvalue
  | |   `-ImplicitCastExpr 0x9b85620 <<invalid sloc>, <invalid sloc>> 'const class std::basic_string<char>' <NoOp>
  | |     `-CXXFunctionalCastExpr 0x9b85608 <<invalid sloc>, <invalid sloc>> 'class std::basic_string<char>' functional cast to class std::basic_string<char> <ConstructorConversion>
  | |       `-CXXBindTemporaryExpr 0x9b855f8 <<invalid sloc>, line:12:24> 'class std::basic_string<char>' (CXXTemporary 0x9b855f0)
  | |         `-CXXConstructExpr 0x9b855c8 <<invalid sloc>, col:24> 'class std::basic_string<char>' 'void (const class std::basic_string<char> &)' elidable
  | |           `-MaterializeTemporaryExpr 0x9b855b8 <col:24> 'const class std::basic_string<char>' lvalue
  | |             `-ImplicitCastExpr 0x9b855a8 <col:24> 'const class std::basic_string<char>' <NoOp>
  | |               `-CXXConstructExpr 0x9b68d18 <col:24> 'string':'class std::basic_string<char>' 'void (const class std::basic_string<char> &)' elidable
  | |                 `-MaterializeTemporaryExpr 0x9b68d08 <col:24> 'const class std::basic_string<char>' lvalue
  | |                   `-ImplicitCastExpr 0x9b68cf8 <col:24> 'const class std::basic_string<char>' <NoOp>
  | |                     `-CXXBindTemporaryExpr 0x9b68ce8 <col:24> 'string':'class std::basic_string<char>' (CXXTemporary 0x9b68ce0)
  | |                       `-ImplicitCastExpr 0x9b68cd0 <col:24> 'string':'class std::basic_string<char>' <ConstructorConversion>
  | |                         `-CXXConstructExpr 0x9b68ca8 <col:24> 'string':'class std::basic_string<char>' 'void (const char *, const class std::allocator<char> &)'
  | |                           |-ImplicitCastExpr 0x9b68bf0 <col:24> 'const char *' <ArrayToPointerDecay>
  | |                           | `-StringLiteral 0x9b68760 <col:24> 'const char [3]' lvalue "xx"
  | |                           `-CXXDefaultArgExpr 0x9b68c90 <<invalid sloc>> 'const class std::allocator<char>':'const class std::allocator<char>' lvalue
  | `-CXXOperatorCallExpr 0x9b85818 <<invalid sloc>, <invalid sloc>> 'class std::basic_string<char>' lvalue
  |   |-ImplicitCastExpr 0x9b85808 <<invalid sloc>> 'class std::basic_string<char> &(*)(const class std::basic_string<char> &)' <FunctionToPointerDecay>
  |   | `-DeclRefExpr 0x9b857f0 <<invalid sloc>> 'class std::basic_string<char> &(const class std::basic_string<char> &)' lvalue CXXMethod 0x9b4bbb0 'operator=' 'class std::basic_string<char> &(const class std::basic_string<char> &)'
  |   |-ArraySubscriptExpr 0x9b85710 <<invalid sloc>> 'string':'class std::basic_string<char>' lvalue
  |   | |-ImplicitCastExpr 0x9b85700 <<invalid sloc>> 'string *' <ArrayToPointerDecay>
  |   | | `-ArraySubscriptExpr 0x9b856e8 <<invalid sloc>> 'string [2]' lvalue
  |   | |   |-ImplicitCastExpr 0x9b856d8 <<invalid sloc>> 'string (*)[2]' <ArrayToPointerDecay>
  |   | |   | `-DeclRefExpr 0x9b8546c <<invalid sloc>> 'string [2][2]' lvalue Var 0x9b686c0 '____localvar____2' 'string [2][2]'
  |   | |   `-IntegerLiteral 0x9b854a0 <<invalid sloc>> 'int' 1
  |   | `-IntegerLiteral 0x9b856c0 <<invalid sloc>> 'int' 1
  |   `-MaterializeTemporaryExpr 0x9b857e0 <<invalid sloc>, <invalid sloc>> 'const class std::basic_string<char>' lvalue
  |     `-ImplicitCastExpr 0x9b857d0 <<invalid sloc>, <invalid sloc>> 'const class std::basic_string<char>' <NoOp>
  |       `-CXXFunctionalCastExpr 0x9b857b8 <<invalid sloc>, <invalid sloc>> 'class std::basic_string<char>' functional cast to class std::basic_string<char> <ConstructorConversion>
  |         `-CXXBindTemporaryExpr 0x9b857a8 <<invalid sloc>, col:42> 'class std::basic_string<char>' (CXXTemporary 0x9b857a0)
  |           `-CXXConstructExpr 0x9b85778 <<invalid sloc>, col:42> 'class std::basic_string<char>' 'void (const class std::basic_string<char> &)' elidable
  |             `-MaterializeTemporaryExpr 0x9b85768 <col:30, col:42> 'const class std::basic_string<char>' lvalue
  |               `-ImplicitCastExpr 0x9b85758 <col:30, col:42> 'const class std::basic_string<char>' <NoOp>
  |                 `-CXXConstructExpr 0x9b68d60 <col:30, col:42> 'string':'class std::basic_string<char>' 'void (const class std::basic_string<char> &)' elidable
  |                   `-MaterializeTemporaryExpr 0x9b68d50 <col:30, col:42> 'const class std::basic_string<char>' lvalue
  |                     `-ImplicitCastExpr 0x9b68d40 <col:30, col:42> 'const class std::basic_string<char>' <NoOp>
  |                       `-CXXFunctionalCastExpr 0x9b68ad8 <col:30, col:42> 'string':'class std::basic_string<char>' functional cast to string <ConstructorConversion>
  |                         `-CXXBindTemporaryExpr 0x9b68ac8 <col:30, col:37> 'string':'class std::basic_string<char>' (CXXTemporary 0x9b68ac0)
  |                           `-CXXConstructExpr 0x9b68a98 <col:30, col:37> 'string':'class std::basic_string<char>' 'void (const char *, const class std::allocator<char> &)'
  |                             |-ImplicitCastExpr 0x9b68828 <col:37> 'const char *' <ArrayToPointerDecay>
  |                             | `-StringLiteral 0x9b687b0 <col:37> 'const char [4]' lvalue "yyy"
  |                             `-CXXDefaultArgExpr 0x9b68a80 <<invalid sloc>> 'const class std::allocator<char>':'const class std::allocator<char>' lvalue
  |-CXXOperatorCallExpr 0x9b85958 <<invalid sloc>, <invalid sloc>> 'class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > >' lvalue
  | |-ImplicitCastExpr 0x9b85948 <<invalid sloc>> 'class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > > &(*)(const class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > > &)' <FunctionToPointerDecay>
  | | `-DeclRefExpr 0x9b85918 <<invalid sloc>> 'class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > > &(const class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > > &)' lvalue CXXMethod 0x9b6d820 'operator=' 'class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > > &(const class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > > &)'
  | |-DeclRefExpr 0x9b85890 <<invalid sloc>> 'vector<string>':'class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > >' lvalue Var 0x9b69090 '____localvar____3' 'vector<string>':'class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > >'
  | `-MaterializeTemporaryExpr 0x9b85908 <<invalid sloc>, <invalid sloc>> 'const class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > >' lvalue
  |   `-ImplicitCastExpr 0x9b858f8 <<invalid sloc>, <invalid sloc>> 'const class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > >' <NoOp>
  |     `-CXXBindTemporaryExpr 0x9b858e8 <<invalid sloc>, <invalid sloc>> 'class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > >' (CXXTemporary 0x9b858e0)
  |       `-CXXTemporaryObjectExpr 0x9b858b0 <<invalid sloc>, <invalid sloc>> 'class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > >' 'void (void)'
  `-BinaryOperator 0x9b72090 <line:14:2, col:12> 'char':'char' lvalue '='
    |-CXXOperatorCallExpr 0x9b72048 <col:2, col:8> 'char':'char' lvalue
    | |-ImplicitCastExpr 0x9b72038 <col:6, col:8> 'reference (*)(size_type)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x9b71fe8 <col:6, col:8> 'reference (size_type)' lvalue CXXMethod 0x9b4cbc0 'operator[]' 'reference (size_type)'
    | |-CXXOperatorCallExpr 0x9b71f88 <col:2, col:5> 'class std::basic_string<char>':'class std::basic_string<char>' lvalue
    | | |-ImplicitCastExpr 0x9b71f78 <col:3, col:5> 'reference (*)(size_type)' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x9b71f28 <col:3, col:5> 'reference (size_type)' lvalue CXXMethod 0x9b6e580 'operator[]' 'reference (size_type)'
    | | |-DeclRefExpr 0x9b71ed0 <col:2> 'vector<string>':'class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > >' lvalue Var 0x9b69090 '____localvar____3' 'vector<string>':'class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > >'
    | | `-ImplicitCastExpr 0x9b71f18 <col:4> 'size_type':'unsigned int' <IntegralCast>
    | |   `-IntegerLiteral 0x9b71ee8 <col:4> 'int' 2
    | `-ImplicitCastExpr 0x9b71fd8 <col:7> 'size_type':'unsigned int' <IntegralCast>
    |   `-IntegerLiteral 0x9b71fc0 <col:7> 'int' 3
    `-CharacterLiteral 0x9b72080 <col:12> 'char' 120
[DEBUG][alg/FlattenCFG/CFGFlattener.cpp - line 20] decl before flatten
FunctionDecl 0x9b683a0 <test/_array.cpp:11:1, line:15:1> classref 'void (void)'
`-CompoundStmt 0x9b720a8 <line:11:17, line:15:1>
  |-DeclStmt 0x9b85868 <<invalid sloc>>
  | `-VarDecl 0x9b686c0 <line:12:2, col:14> ____localvar____2 'string [2][2]'
  |-DeclStmt 0x9b85990 <<invalid sloc>>
  | `-VarDecl 0x9b69090 <line:13:2, col:17> ____localvar____3 'vector<string>':'class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > >'
  |-CompoundStmt 0x9b85878 <<invalid sloc>>
  | |-CXXOperatorCallExpr 0x9b85688 <<invalid sloc>, <invalid sloc>> 'class std::basic_string<char>' lvalue
  | | |-ImplicitCastExpr 0x9b85678 <<invalid sloc>> 'class std::basic_string<char> &(*)(const class std::basic_string<char> &)' <FunctionToPointerDecay>
  | | | `-DeclRefExpr 0x9b85640 <<invalid sloc>> 'class std::basic_string<char> &(const class std::basic_string<char> &)' lvalue CXXMethod 0x9b4bbb0 'operator=' 'class std::basic_string<char> &(const class std::basic_string<char> &)'
  | | |-ArraySubscriptExpr 0x9b85558 <<invalid sloc>> 'string':'class std::basic_string<char>' lvalue
  | | | |-ImplicitCastExpr 0x9b85548 <<invalid sloc>> 'string *' <ArrayToPointerDecay>
  | | | | `-ArraySubscriptExpr 0x9b85518 <<invalid sloc>> 'string [2]' lvalue
  | | | |   |-ImplicitCastExpr 0x9b85508 <<invalid sloc>> 'string (*)[2]' <ArrayToPointerDecay>
  | | | |   | `-DeclRefExpr 0x9b8546c <<invalid sloc>> 'string [2][2]' lvalue Var 0x9b686c0 '____localvar____2' 'string [2][2]'
  | | | |   `-IntegerLiteral 0x9b854a0 <<invalid sloc>> 'int' 1
  | | | `-IntegerLiteral 0x9b854b8 <<invalid sloc>> 'int' 0
  | | `-MaterializeTemporaryExpr 0x9b85630 <<invalid sloc>, <invalid sloc>> 'const class std::basic_string<char>' lvalue
  | |   `-ImplicitCastExpr 0x9b85620 <<invalid sloc>, <invalid sloc>> 'const class std::basic_string<char>' <NoOp>
  | |     `-CXXFunctionalCastExpr 0x9b85608 <<invalid sloc>, <invalid sloc>> 'class std::basic_string<char>' functional cast to class std::basic_string<char> <ConstructorConversion>
  | |       `-CXXBindTemporaryExpr 0x9b855f8 <<invalid sloc>, line:12:24> 'class std::basic_string<char>' (CXXTemporary 0x9b855f0)
  | |         `-CXXConstructExpr 0x9b855c8 <<invalid sloc>, col:24> 'class std::basic_string<char>' 'void (const class std::basic_string<char> &)' elidable
  | |           `-MaterializeTemporaryExpr 0x9b855b8 <col:24> 'const class std::basic_string<char>' lvalue
  | |             `-ImplicitCastExpr 0x9b855a8 <col:24> 'const class std::basic_string<char>' <NoOp>
  | |               `-CXXConstructExpr 0x9b68d18 <col:24> 'string':'class std::basic_string<char>' 'void (const class std::basic_string<char> &)' elidable
  | |                 `-MaterializeTemporaryExpr 0x9b68d08 <col:24> 'const class std::basic_string<char>' lvalue
  | |                   `-ImplicitCastExpr 0x9b68cf8 <col:24> 'const class std::basic_string<char>' <NoOp>
  | |                     `-CXXBindTemporaryExpr 0x9b68ce8 <col:24> 'string':'class std::basic_string<char>' (CXXTemporary 0x9b68ce0)
  | |                       `-ImplicitCastExpr 0x9b68cd0 <col:24> 'string':'class std::basic_string<char>' <ConstructorConversion>
  | |                         `-CXXConstructExpr 0x9b68ca8 <col:24> 'string':'class std::basic_string<char>' 'void (const char *, const class std::allocator<char> &)'
  | |                           |-ImplicitCastExpr 0x9b68bf0 <col:24> 'const char *' <ArrayToPointerDecay>
  | |                           | `-StringLiteral 0x9b68760 <col:24> 'const char [3]' lvalue "xx"
  | |                           `-CXXDefaultArgExpr 0x9b68c90 <<invalid sloc>> 'const class std::allocator<char>':'const class std::allocator<char>' lvalue
  | `-CXXOperatorCallExpr 0x9b85818 <<invalid sloc>, <invalid sloc>> 'class std::basic_string<char>' lvalue
  |   |-ImplicitCastExpr 0x9b85808 <<invalid sloc>> 'class std::basic_string<char> &(*)(const class std::basic_string<char> &)' <FunctionToPointerDecay>
  |   | `-DeclRefExpr 0x9b857f0 <<invalid sloc>> 'class std::basic_string<char> &(const class std::basic_string<char> &)' lvalue CXXMethod 0x9b4bbb0 'operator=' 'class std::basic_string<char> &(const class std::basic_string<char> &)'
  |   |-ArraySubscriptExpr 0x9b85710 <<invalid sloc>> 'string':'class std::basic_string<char>' lvalue
  |   | |-ImplicitCastExpr 0x9b85700 <<invalid sloc>> 'string *' <ArrayToPointerDecay>
  |   | | `-ArraySubscriptExpr 0x9b856e8 <<invalid sloc>> 'string [2]' lvalue
  |   | |   |-ImplicitCastExpr 0x9b856d8 <<invalid sloc>> 'string (*)[2]' <ArrayToPointerDecay>
  |   | |   | `-DeclRefExpr 0x9b8546c <<invalid sloc>> 'string [2][2]' lvalue Var 0x9b686c0 '____localvar____2' 'string [2][2]'
  |   | |   `-IntegerLiteral 0x9b854a0 <<invalid sloc>> 'int' 1
  |   | `-IntegerLiteral 0x9b856c0 <<invalid sloc>> 'int' 1
  |   `-MaterializeTemporaryExpr 0x9b857e0 <<invalid sloc>, <invalid sloc>> 'const class std::basic_string<char>' lvalue
  |     `-ImplicitCastExpr 0x9b857d0 <<invalid sloc>, <invalid sloc>> 'const class std::basic_string<char>' <NoOp>
  |       `-CXXFunctionalCastExpr 0x9b857b8 <<invalid sloc>, <invalid sloc>> 'class std::basic_string<char>' functional cast to class std::basic_string<char> <ConstructorConversion>
  |         `-CXXBindTemporaryExpr 0x9b857a8 <<invalid sloc>, col:42> 'class std::basic_string<char>' (CXXTemporary 0x9b857a0)
  |           `-CXXConstructExpr 0x9b85778 <<invalid sloc>, col:42> 'class std::basic_string<char>' 'void (const class std::basic_string<char> &)' elidable
  |             `-MaterializeTemporaryExpr 0x9b85768 <col:30, col:42> 'const class std::basic_string<char>' lvalue
  |               `-ImplicitCastExpr 0x9b85758 <col:30, col:42> 'const class std::basic_string<char>' <NoOp>
  |                 `-CXXConstructExpr 0x9b68d60 <col:30, col:42> 'string':'class std::basic_string<char>' 'void (const class std::basic_string<char> &)' elidable
  |                   `-MaterializeTemporaryExpr 0x9b68d50 <col:30, col:42> 'const class std::basic_string<char>' lvalue
  |                     `-ImplicitCastExpr 0x9b68d40 <col:30, col:42> 'const class std::basic_string<char>' <NoOp>
  |                       `-CXXFunctionalCastExpr 0x9b68ad8 <col:30, col:42> 'string':'class std::basic_string<char>' functional cast to string <ConstructorConversion>
  |                         `-CXXBindTemporaryExpr 0x9b68ac8 <col:30, col:37> 'string':'class std::basic_string<char>' (CXXTemporary 0x9b68ac0)
  |                           `-CXXConstructExpr 0x9b68a98 <col:30, col:37> 'string':'class std::basic_string<char>' 'void (const char *, const class std::allocator<char> &)'
  |                             |-ImplicitCastExpr 0x9b68828 <col:37> 'const char *' <ArrayToPointerDecay>
  |                             | `-StringLiteral 0x9b687b0 <col:37> 'const char [4]' lvalue "yyy"
  |                             `-CXXDefaultArgExpr 0x9b68a80 <<invalid sloc>> 'const class std::allocator<char>':'const class std::allocator<char>' lvalue
  |-CXXOperatorCallExpr 0x9b85958 <<invalid sloc>, <invalid sloc>> 'class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > >' lvalue
  | |-ImplicitCastExpr 0x9b85948 <<invalid sloc>> 'class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > > &(*)(const class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > > &)' <FunctionToPointerDecay>
  | | `-DeclRefExpr 0x9b85918 <<invalid sloc>> 'class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > > &(const class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > > &)' lvalue CXXMethod 0x9b6d820 'operator=' 'class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > > &(const class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > > &)'
  | |-DeclRefExpr 0x9b85890 <<invalid sloc>> 'vector<string>':'class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > >' lvalue Var 0x9b69090 '____localvar____3' 'vector<string>':'class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > >'
  | `-MaterializeTemporaryExpr 0x9b85908 <<invalid sloc>, <invalid sloc>> 'const class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > >' lvalue
  |   `-ImplicitCastExpr 0x9b858f8 <<invalid sloc>, <invalid sloc>> 'const class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > >' <NoOp>
  |     `-CXXBindTemporaryExpr 0x9b858e8 <<invalid sloc>, <invalid sloc>> 'class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > >' (CXXTemporary 0x9b858e0)
  |       `-CXXTemporaryObjectExpr 0x9b858b0 <<invalid sloc>, <invalid sloc>> 'class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > >' 'void (void)'
  `-BinaryOperator 0x9b72090 <line:14:2, col:12> 'char':'char' lvalue '='
    |-CXXOperatorCallExpr 0x9b72048 <col:2, col:8> 'char':'char' lvalue
    | |-ImplicitCastExpr 0x9b72038 <col:6, col:8> 'reference (*)(size_type)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x9b71fe8 <col:6, col:8> 'reference (size_type)' lvalue CXXMethod 0x9b4cbc0 'operator[]' 'reference (size_type)'
    | |-CXXOperatorCallExpr 0x9b71f88 <col:2, col:5> 'class std::basic_string<char>':'class std::basic_string<char>' lvalue
    | | |-ImplicitCastExpr 0x9b71f78 <col:3, col:5> 'reference (*)(size_type)' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x9b71f28 <col:3, col:5> 'reference (size_type)' lvalue CXXMethod 0x9b6e580 'operator[]' 'reference (size_type)'
    | | |-DeclRefExpr 0x9b71ed0 <col:2> 'vector<string>':'class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > >' lvalue Var 0x9b69090 '____localvar____3' 'vector<string>':'class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > >'
    | | `-ImplicitCastExpr 0x9b71f18 <col:4> 'size_type':'unsigned int' <IntegralCast>
    | |   `-IntegerLiteral 0x9b71ee8 <col:4> 'int' 2
    | `-ImplicitCastExpr 0x9b71fd8 <col:7> 'size_type':'unsigned int' <IntegralCast>
    |   `-IntegerLiteral 0x9b71fc0 <col:7> 'int' 3
    `-CharacterLiteral 0x9b72080 <col:12> 'char' 120
[DEBUG][alg/FlattenCFG/CFGFlattener.cpp - line 26] cfg before flattening

 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: string ____localvar____2[2][2];
   2: vector<string> ____localvar____3;
   3: "xx" (CXXConstructExpr, string)
   4: [B1.3] (CXXConstructExpr, string)
   5: [B1.4] (CXXConstructExpr, class std::basic_string<char>)
   6: ____localvar____2[1][0] = std::basic_string<char>([B1.5]) (OperatorCall)
   7: "yyy" (CXXConstructExpr, string)
   8: string([B1.7]) (CXXConstructExpr, string)
   9: [B1.8] (CXXConstructExpr, class std::basic_string<char>)
  10: ____localvar____2[1][1] = std::basic_string<char>([B1.9]) (OperatorCall)
  11: std::vector<std::basic_string<char>, std::allocator<std::basic_string<char> > >() (CXXConstructExpr, class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > >)
  12: ____localvar____3 = [B1.11] (OperatorCall)
  13: ____localvar____3[2] (OperatorCall)
  14: [B1.13][3] (OperatorCall)
  15: [B1.14] = 'x'
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

Writing '/tmp/llvm_uSS0AK/CFG.dot'...  done. 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b720a8 (CompoundStmt) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b85868 (DeclStmt) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 50] enter decl 9b686c0 (Var)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b68400 (IntegerLiteral) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b68400 (IntegerLiteral)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 52] exit decl 9b686c0 (Var)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b85868 (DeclStmt)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b85990 (DeclStmt) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 50] enter decl 9b69090 (Var)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 52] exit decl 9b69090 (Var)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b85990 (DeclStmt)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b85878 (CompoundStmt) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b85688 (CXXOperatorCallExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b85678 (ImplicitCastExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b85640 (DeclRefExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b85640 (DeclRefExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b85678 (ImplicitCastExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b85558 (ArraySubscriptExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b85548 (ImplicitCastExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b85518 (ArraySubscriptExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b85508 (ImplicitCastExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b8546c (DeclRefExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b8546c (DeclRefExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b85508 (ImplicitCastExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b854a0 (IntegerLiteral) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b854a0 (IntegerLiteral)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b85518 (ArraySubscriptExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b85548 (ImplicitCastExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b854b8 (IntegerLiteral) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b854b8 (IntegerLiteral)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b85558 (ArraySubscriptExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b85630 (MaterializeTemporaryExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b85620 (ImplicitCastExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b85608 (CXXFunctionalCastExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b855f8 (CXXBindTemporaryExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b855c8 (CXXConstructExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b855b8 (MaterializeTemporaryExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b855a8 (ImplicitCastExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b68d18 (CXXConstructExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b68d08 (MaterializeTemporaryExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b68cf8 (ImplicitCastExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b68ce8 (CXXBindTemporaryExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b68cd0 (ImplicitCastExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b68ca8 (CXXConstructExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b68bf0 (ImplicitCastExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b68760 (StringLiteral) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b68760 (StringLiteral)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b68bf0 (ImplicitCastExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b68c90 (CXXDefaultArgExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b68c90 (CXXDefaultArgExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b68ca8 (CXXConstructExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b68cd0 (ImplicitCastExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b68ce8 (CXXBindTemporaryExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b68cf8 (ImplicitCastExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b68d08 (MaterializeTemporaryExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b68d18 (CXXConstructExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b855a8 (ImplicitCastExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b855b8 (MaterializeTemporaryExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b855c8 (CXXConstructExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b855f8 (CXXBindTemporaryExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b85608 (CXXFunctionalCastExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b85620 (ImplicitCastExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b85630 (MaterializeTemporaryExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b85688 (CXXOperatorCallExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b85818 (CXXOperatorCallExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b85808 (ImplicitCastExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b857f0 (DeclRefExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b857f0 (DeclRefExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b85808 (ImplicitCastExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b85710 (ArraySubscriptExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b85700 (ImplicitCastExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b856e8 (ArraySubscriptExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b856d8 (ImplicitCastExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b8546c (DeclRefExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b8546c (DeclRefExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b856d8 (ImplicitCastExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b854a0 (IntegerLiteral) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b854a0 (IntegerLiteral)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b856e8 (ArraySubscriptExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b85700 (ImplicitCastExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b856c0 (IntegerLiteral) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b856c0 (IntegerLiteral)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b85710 (ArraySubscriptExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b857e0 (MaterializeTemporaryExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b857d0 (ImplicitCastExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b857b8 (CXXFunctionalCastExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b857a8 (CXXBindTemporaryExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b85778 (CXXConstructExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b85768 (MaterializeTemporaryExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b85758 (ImplicitCastExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b68d60 (CXXConstructExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b68d50 (MaterializeTemporaryExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b68d40 (ImplicitCastExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b68ad8 (CXXFunctionalCastExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b68ac8 (CXXBindTemporaryExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b68a98 (CXXConstructExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b68828 (ImplicitCastExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b687b0 (StringLiteral) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b687b0 (StringLiteral)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b68828 (ImplicitCastExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b68a80 (CXXDefaultArgExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b68a80 (CXXDefaultArgExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b68a98 (CXXConstructExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b68ac8 (CXXBindTemporaryExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b68ad8 (CXXFunctionalCastExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b68d40 (ImplicitCastExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b68d50 (MaterializeTemporaryExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b68d60 (CXXConstructExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b85758 (ImplicitCastExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b85768 (MaterializeTemporaryExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b85778 (CXXConstructExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b857a8 (CXXBindTemporaryExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b857b8 (CXXFunctionalCastExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b857d0 (ImplicitCastExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b857e0 (MaterializeTemporaryExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b85818 (CXXOperatorCallExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b85878 (CompoundStmt)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b85958 (CXXOperatorCallExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b85948 (ImplicitCastExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b85918 (DeclRefExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b85918 (DeclRefExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b85948 (ImplicitCastExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b85890 (DeclRefExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b85890 (DeclRefExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b85908 (MaterializeTemporaryExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b858f8 (ImplicitCastExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b858e8 (CXXBindTemporaryExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b858b0 (CXXTemporaryObjectExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b858b0 (CXXTemporaryObjectExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b858e8 (CXXBindTemporaryExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b858f8 (ImplicitCastExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b85908 (MaterializeTemporaryExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b85958 (CXXOperatorCallExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b72090 (BinaryOperator) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b72038 (ImplicitCastExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b71fe8 (DeclRefExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b71fe8 (DeclRefExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b72038 (ImplicitCastExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b71f78 (ImplicitCastExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b71f28 (DeclRefExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b71f28 (DeclRefExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b71f78 (ImplicitCastExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b71ed0 (DeclRefExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b71ed0 (DeclRefExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b71f18 (ImplicitCastExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b71ee8 (IntegerLiteral) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b71ee8 (IntegerLiteral)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b71f18 (ImplicitCastExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b71fd8 (ImplicitCastExpr) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b71fc0 (IntegerLiteral) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b71fc0 (IntegerLiteral)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b71fd8 (ImplicitCastExpr)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b72080 (CharacterLiteral) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b72080 (CharacterLiteral)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b72090 (BinaryOperator)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b720a8 (CompoundStmt)
[DEBUG][alg/FlattenCFG/CFGFlattener.cpp - line 368] pass handledStmt [B1.3]
[DEBUG][alg/FlattenCFG/CFGFlattener.cpp - line 368] pass handledStmt [B1.4]
[DEBUG][alg/FlattenCFG/CFGFlattener.cpp - line 368] pass handledStmt [B1.5]
[DEBUG][alg/FlattenCFG/CFGFlattener.cpp - line 368] pass handledStmt [B1.7]
[DEBUG][alg/FlattenCFG/CFGFlattener.cpp - line 368] pass handledStmt [B1.8]
[DEBUG][alg/FlattenCFG/CFGFlattener.cpp - line 368] pass handledStmt [B1.9]
[DEBUG][alg/FlattenCFG/CFGFlattener.cpp - line 368] pass handledStmt [B1.11]
[DEBUG][alg/FlattenCFG/CFGFlattener.cpp - line 368] pass handledStmt [B1.13]
[DEBUG][alg/FlattenCFG/CFGFlattener.cpp - line 368] pass handledStmt [B1.14]
[DEBUG][alg/FlattenCFG/CFGFlattener.cpp - line 377] edge 1 -> 0
[DEBUG][alg/FlattenCFG/CFGFlattener.cpp - line 377] edge 2 -> 1
[DEBUG][alg/FlattenCFG/CFGFlattener.cpp - line 39] CompoundStmt before flatten
{
    string ____localvar____2[2][2];
    vector<string> ____localvar____3;
    {
        ____localvar____2[1][0] = std::basic_string<char>("xx");
        ____localvar____2[1][1] = std::basic_string<char>(string("yyy"));
    }
    ____localvar____3 = std::vector<std::basic_string<char>, std::allocator<std::basic_string<char> > >();
    ____localvar____3[2][3] = 'x';
}
[DEBUG][alg/FlattenCFG/CFGFlattener.cpp - line 48] DeclStmt at the beginning met.
DeclStmt 0x9b85868
`-VarDecl 0x9b686c0 ____localvar____2 'string [2][2]'
[DEBUG][alg/FlattenCFG/CFGFlattener.cpp - line 48] DeclStmt at the beginning met.
DeclStmt 0x9b85990
`-VarDecl 0x9b69090 ____localvar____3 'vector<string>':'class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > >'
[DEBUG][alg/FlattenCFG/CFGFlattener.cpp - line 208] create case for node 1 9aad454
<NULL>[DEBUG][alg/FlattenCFG/CFGFlattener.cpp - line 243] add stmt #0
[DEBUG][alg/FlattenCFG/CFGFlattener.cpp - line 243] add stmt #1
[DEBUG][alg/FlattenCFG/CFGFlattener.cpp - line 243] add stmt #2
____localvar____2[1][0] = std::basic_string<char>("xx")[DEBUG][alg/FlattenCFG/CFGFlattener.cpp - line 243] add stmt #3
____localvar____2[1][1] = std::basic_string<char>(string("yyy"))[DEBUG][alg/FlattenCFG/CFGFlattener.cpp - line 243] add stmt #4
____localvar____3 = std::vector<std::basic_string<char>, std::allocator<std::basic_string<char> > >()[DEBUG][alg/FlattenCFG/CFGFlattener.cpp - line 243] add stmt #5
____localvar____3[2][3] = 'x'CaseStmt 0x9b85af0
|-IntegerLiteral 0x9b85ad8 'int' 1
|-<<<NULL>>>
`-CompoundStmt 0x9b85b18
  |-CXXOperatorCallExpr 0x9b85688 'class std::basic_string<char>' lvalue
  | |-ImplicitCastExpr 0x9b85678 'class std::basic_string<char> &(*)(const class std::basic_string<char> &)' <FunctionToPointerDecay>
  | | `-DeclRefExpr 0x9b85640 'class std::basic_string<char> &(const class std::basic_string<char> &)' lvalue CXXMethod 0x9b4bbb0 'operator=' 'class std::basic_string<char> &(const class std::basic_string<char> &)'
  | |-ArraySubscriptExpr 0x9b85558 'string':'class std::basic_string<char>' lvalue
  | | |-ImplicitCastExpr 0x9b85548 'string *' <ArrayToPointerDecay>
  | | | `-ArraySubscriptExpr 0x9b85518 'string [2]' lvalue
  | | |   |-ImplicitCastExpr 0x9b85508 'string (*)[2]' <ArrayToPointerDecay>
  | | |   | `-DeclRefExpr 0x9b8546c 'string [2][2]' lvalue Var 0x9b686c0 '____localvar____2' 'string [2][2]'
  | | |   `-IntegerLiteral 0x9b854a0 'int' 1
  | | `-IntegerLiteral 0x9b854b8 'int' 0
  | `-MaterializeTemporaryExpr 0x9b85630 'const class std::basic_string<char>' lvalue
  |   `-ImplicitCastExpr 0x9b85620 'const class std::basic_string<char>' <NoOp>
  |     `-CXXFunctionalCastExpr 0x9b85608 'class std::basic_string<char>' functional cast to class std::basic_string<char> <ConstructorConversion>
  |       `-CXXBindTemporaryExpr 0x9b855f8 'class std::basic_string<char>' (CXXTemporary 0x9b855f0)
  |         `-CXXConstructExpr 0x9b855c8 'class std::basic_string<char>' 'void (const class std::basic_string<char> &)' elidable
  |           `-MaterializeTemporaryExpr 0x9b855b8 'const class std::basic_string<char>' lvalue
  |             `-ImplicitCastExpr 0x9b855a8 'const class std::basic_string<char>' <NoOp>
  |               `-CXXConstructExpr 0x9b68d18 'string':'class std::basic_string<char>' 'void (const class std::basic_string<char> &)' elidable
  |                 `-MaterializeTemporaryExpr 0x9b68d08 'const class std::basic_string<char>' lvalue
  |                   `-ImplicitCastExpr 0x9b68cf8 'const class std::basic_string<char>' <NoOp>
  |                     `-CXXBindTemporaryExpr 0x9b68ce8 'string':'class std::basic_string<char>' (CXXTemporary 0x9b68ce0)
  |                       `-ImplicitCastExpr 0x9b68cd0 'string':'class std::basic_string<char>' <ConstructorConversion>
  |                         `-CXXConstructExpr 0x9b68ca8 'string':'class std::basic_string<char>' 'void (const char *, const class std::allocator<char> &)'
  |                           |-ImplicitCastExpr 0x9b68bf0 'const char *' <ArrayToPointerDecay>
  |                           | `-StringLiteral 0x9b68760 'const char [3]' lvalue "xx"
  |                           `-CXXDefaultArgExpr 0x9b68c90 'const class std::allocator<char>':'const class std::allocator<char>' lvalue
  |-CXXOperatorCallExpr 0x9b85818 'class std::basic_string<char>' lvalue
  | |-ImplicitCastExpr 0x9b85808 'class std::basic_string<char> &(*)(const class std::basic_string<char> &)' <FunctionToPointerDecay>
  | | `-DeclRefExpr 0x9b857f0 'class std::basic_string<char> &(const class std::basic_string<char> &)' lvalue CXXMethod 0x9b4bbb0 'operator=' 'class std::basic_string<char> &(const class std::basic_string<char> &)'
  | |-ArraySubscriptExpr 0x9b85710 'string':'class std::basic_string<char>' lvalue
  | | |-ImplicitCastExpr 0x9b85700 'string *' <ArrayToPointerDecay>
  | | | `-ArraySubscriptExpr 0x9b856e8 'string [2]' lvalue
  | | |   |-ImplicitCastExpr 0x9b856d8 'string (*)[2]' <ArrayToPointerDecay>
  | | |   | `-DeclRefExpr 0x9b8546c 'string [2][2]' lvalue Var 0x9b686c0 '____localvar____2' 'string [2][2]'
  | | |   `-IntegerLiteral 0x9b854a0 'int' 1
  | | `-IntegerLiteral 0x9b856c0 'int' 1
  | `-MaterializeTemporaryExpr 0x9b857e0 'const class std::basic_string<char>' lvalue
  |   `-ImplicitCastExpr 0x9b857d0 'const class std::basic_string<char>' <NoOp>
  |     `-CXXFunctionalCastExpr 0x9b857b8 'class std::basic_string<char>' functional cast to class std::basic_string<char> <ConstructorConversion>
  |       `-CXXBindTemporaryExpr 0x9b857a8 'class std::basic_string<char>' (CXXTemporary 0x9b857a0)
  |         `-CXXConstructExpr 0x9b85778 'class std::basic_string<char>' 'void (const class std::basic_string<char> &)' elidable
  |           `-MaterializeTemporaryExpr 0x9b85768 'const class std::basic_string<char>' lvalue
  |             `-ImplicitCastExpr 0x9b85758 'const class std::basic_string<char>' <NoOp>
  |               `-CXXConstructExpr 0x9b68d60 'string':'class std::basic_string<char>' 'void (const class std::basic_string<char> &)' elidable
  |                 `-MaterializeTemporaryExpr 0x9b68d50 'const class std::basic_string<char>' lvalue
  |                   `-ImplicitCastExpr 0x9b68d40 'const class std::basic_string<char>' <NoOp>
  |                     `-CXXFunctionalCastExpr 0x9b68ad8 'string':'class std::basic_string<char>' functional cast to string <ConstructorConversion>
  |                       `-CXXBindTemporaryExpr 0x9b68ac8 'string':'class std::basic_string<char>' (CXXTemporary 0x9b68ac0)
  |                         `-CXXConstructExpr 0x9b68a98 'string':'class std::basic_string<char>' 'void (const char *, const class std::allocator<char> &)'
  |                           |-ImplicitCastExpr 0x9b68828 'const char *' <ArrayToPointerDecay>
  |                           | `-StringLiteral 0x9b687b0 'const char [4]' lvalue "yyy"
  |                           `-CXXDefaultArgExpr 0x9b68a80 'const class std::allocator<char>':'const class std::allocator<char>' lvalue
  |-CXXOperatorCallExpr 0x9b85958 'class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > >' lvalue
  | |-ImplicitCastExpr 0x9b85948 'class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > > &(*)(const class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > > &)' <FunctionToPointerDecay>
  | | `-DeclRefExpr 0x9b85918 'class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > > &(const class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > > &)' lvalue CXXMethod 0x9b6d820 'operator=' 'class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > > &(const class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > > &)'
  | |-DeclRefExpr 0x9b85890 'vector<string>':'class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > >' lvalue Var 0x9b69090 '____localvar____3' 'vector<string>':'class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > >'
  | `-MaterializeTemporaryExpr 0x9b85908 'const class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > >' lvalue
  |   `-ImplicitCastExpr 0x9b858f8 'const class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > >' <NoOp>
  |     `-CXXBindTemporaryExpr 0x9b858e8 'class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > >' (CXXTemporary 0x9b858e0)
  |       `-CXXTemporaryObjectExpr 0x9b858b0 'class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > >' 'void (void)'
  |-BinaryOperator 0x9b72090 'char':'char' lvalue '='
  | |-CXXOperatorCallExpr 0x9b72048 'char':'char' lvalue
  | | |-ImplicitCastExpr 0x9b72038 'reference (*)(size_type)' <FunctionToPointerDecay>
  | | | `-DeclRefExpr 0x9b71fe8 'reference (size_type)' lvalue CXXMethod 0x9b4cbc0 'operator[]' 'reference (size_type)'
  | | |-CXXOperatorCallExpr 0x9b71f88 'class std::basic_string<char>':'class std::basic_string<char>' lvalue
  | | | |-ImplicitCastExpr 0x9b71f78 'reference (*)(size_type)' <FunctionToPointerDecay>
  | | | | `-DeclRefExpr 0x9b71f28 'reference (size_type)' lvalue CXXMethod 0x9b6e580 'operator[]' 'reference (size_type)'
  | | | |-DeclRefExpr 0x9b71ed0 'vector<string>':'class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > >' lvalue Var 0x9b69090 '____localvar____3' 'vector<string>':'class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > >'
  | | | `-ImplicitCastExpr 0x9b71f18 'size_type':'unsigned int' <IntegralCast>
  | | |   `-IntegerLiteral 0x9b71ee8 'int' 2
  | | `-ImplicitCastExpr 0x9b71fd8 'size_type':'unsigned int' <IntegralCast>
  | |   `-IntegerLiteral 0x9b71fc0 'int' 3
  | `-CharacterLiteral 0x9b72080 'char' 120
  `-BreakStmt 0x9b85b10
[DEBUG][alg/FlattenCFG/CFGFlattener.cpp - line 85] New switch body create
switch (int ____localvar____4 = 1) {
  case 1:
    {
        ____localvar____2[1][0] = std::basic_string<char>("xx");
        ____localvar____2[1][1] = std::basic_string<char>(string("yyy"));
        ____localvar____3 = std::vector<std::basic_string<char>, std::allocator<std::basic_string<char> > >();
        ____localvar____3[2][3] = 'x';
        break;
    }
}
[DEBUG][alg/FlattenCFG/CFGFlattener.cpp - line 89] New function body created.
{
    string ____localvar____2[2][2];
    vector<string> ____localvar____3;
    int ____localvar____4 = 1;
    while (____localvar____4 != 0)
        switch (int ____localvar____4 = 1) {
          case 1:
            {
                ____localvar____2[1][0] = std::basic_string<char>("xx");
                ____localvar____2[1][1] = std::basic_string<char>(string("yyy"));
                ____localvar____3 = std::vector<std::basic_string<char>, std::allocator<std::basic_string<char> > >();
                ____localvar____3[2][3] = 'x';
                break;
            }
        }
}
[DEBUG][alg/FlattenCFG/CFGFlattener.cpp - line 92] decl after flatten
FunctionDecl 0x9b683a0 <test/_array.cpp:11:1, line:15:1> classref 'void (void)'
`-CompoundStmt 0x9b720a8 <line:11:17, line:15:1>
  |-DeclStmt 0x9b85868 <<invalid sloc>>
  | `-VarDecl 0x9b686c0 <line:12:2, col:14> ____localvar____2 'string [2][2]'
  |-DeclStmt 0x9b85990 <<invalid sloc>>
  | `-VarDecl 0x9b69090 <line:13:2, col:17> ____localvar____3 'vector<string>':'class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > >'
  |-DeclStmt 0x9b85a10 <<invalid sloc>>
  | `-VarDecl 0x9b859d0 <<invalid sloc>> ____localvar____4 'int'
  |   `-ExprWithCleanups 0x9b85a00 <<invalid sloc>> 'int'
  |     `-IntegerLiteral 0x9b859b8 <<invalid sloc>> 'int' 1
  `-WhileStmt 0x9b85a78 <<invalid sloc>>
    |-<<<NULL>>>
    |-BinaryOperator 0x9b85a60 <<invalid sloc>> '_Bool' '!='
    | |-ImplicitCastExpr 0x9b85a50 <<invalid sloc>> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x9b85a38 <<invalid sloc>> 'int' lvalue Var 0x9b859d0 '____localvar____4' 'int'
    | `-IntegerLiteral 0x9b85a20 <<invalid sloc>> 'int' 0
    `-SwitchStmt 0x9b85aa8 <<invalid sloc>>
      |-DeclStmt 0x9b85ac8 <<invalid sloc>>
      | `-VarDecl 0x9b859d0 <<invalid sloc>> ____localvar____4 'int'
      |   `-ExprWithCleanups 0x9b85a00 <<invalid sloc>> 'int'
      |     `-IntegerLiteral 0x9b859b8 <<invalid sloc>> 'int' 1
      |-DeclRefExpr 0x9b85a8c <<invalid sloc>> 'int' lvalue Var 0x9b859d0 '____localvar____4' 'int'
      `-CompoundStmt 0x9b85b40 <<invalid sloc>>
        `-CaseStmt 0x9b85af0 <<invalid sloc>>
          |-IntegerLiteral 0x9b85ad8 <<invalid sloc>> 'int' 1
          |-<<<NULL>>>
          `-CompoundStmt 0x9b85b18 <<invalid sloc>>
            |-CXXOperatorCallExpr 0x9b85688 <<invalid sloc>, <invalid sloc>> 'class std::basic_string<char>' lvalue
            | |-ImplicitCastExpr 0x9b85678 <<invalid sloc>> 'class std::basic_string<char> &(*)(const class std::basic_string<char> &)' <FunctionToPointerDecay>
            | | `-DeclRefExpr 0x9b85640 <<invalid sloc>> 'class std::basic_string<char> &(const class std::basic_string<char> &)' lvalue CXXMethod 0x9b4bbb0 'operator=' 'class std::basic_string<char> &(const class std::basic_string<char> &)'
            | |-ArraySubscriptExpr 0x9b85558 <<invalid sloc>> 'string':'class std::basic_string<char>' lvalue
            | | |-ImplicitCastExpr 0x9b85548 <<invalid sloc>> 'string *' <ArrayToPointerDecay>
            | | | `-ArraySubscriptExpr 0x9b85518 <<invalid sloc>> 'string [2]' lvalue
            | | |   |-ImplicitCastExpr 0x9b85508 <<invalid sloc>> 'string (*)[2]' <ArrayToPointerDecay>
            | | |   | `-DeclRefExpr 0x9b8546c <<invalid sloc>> 'string [2][2]' lvalue Var 0x9b686c0 '____localvar____2' 'string [2][2]'
            | | |   `-IntegerLiteral 0x9b854a0 <<invalid sloc>> 'int' 1
            | | `-IntegerLiteral 0x9b854b8 <<invalid sloc>> 'int' 0
            | `-MaterializeTemporaryExpr 0x9b85630 <<invalid sloc>, <invalid sloc>> 'const class std::basic_string<char>' lvalue
            |   `-ImplicitCastExpr 0x9b85620 <<invalid sloc>, <invalid sloc>> 'const class std::basic_string<char>' <NoOp>
            |     `-CXXFunctionalCastExpr 0x9b85608 <<invalid sloc>, <invalid sloc>> 'class std::basic_string<char>' functional cast to class std::basic_string<char> <ConstructorConversion>
            |       `-CXXBindTemporaryExpr 0x9b855f8 <<invalid sloc>, line:12:24> 'class std::basic_string<char>' (CXXTemporary 0x9b855f0)
            |         `-CXXConstructExpr 0x9b855c8 <<invalid sloc>, col:24> 'class std::basic_string<char>' 'void (const class std::basic_string<char> &)' elidable
            |           `-MaterializeTemporaryExpr 0x9b855b8 <col:24> 'const class std::basic_string<char>' lvalue
            |             `-ImplicitCastExpr 0x9b855a8 <col:24> 'const class std::basic_string<char>' <NoOp>
            |               `-CXXConstructExpr 0x9b68d18 <col:24> 'string':'class std::basic_string<char>' 'void (const class std::basic_string<char> &)' elidable
            |                 `-MaterializeTemporaryExpr 0x9b68d08 <col:24> 'const class std::basic_string<char>' lvalue
            |                   `-ImplicitCastExpr 0x9b68cf8 <col:24> 'const class std::basic_string<char>' <NoOp>
            |                     `-CXXBindTemporaryExpr 0x9b68ce8 <col:24> 'string':'class std::basic_string<char>' (CXXTemporary 0x9b68ce0)
            |                       `-ImplicitCastExpr 0x9b68cd0 <col:24> 'string':'class std::basic_string<char>' <ConstructorConversion>
            |                         `-CXXConstructExpr 0x9b68ca8 <col:24> 'string':'class std::basic_string<char>' 'void (const char *, const class std::allocator<char> &)'
            |                           |-ImplicitCastExpr 0x9b68bf0 <col:24> 'const char *' <ArrayToPointerDecay>
            |                           | `-StringLiteral 0x9b68760 <col:24> 'const char [3]' lvalue "xx"
            |                           `-CXXDefaultArgExpr 0x9b68c90 <<invalid sloc>> 'const class std::allocator<char>':'const class std::allocator<char>' lvalue
            |-CXXOperatorCallExpr 0x9b85818 <<invalid sloc>, <invalid sloc>> 'class std::basic_string<char>' lvalue
            | |-ImplicitCastExpr 0x9b85808 <<invalid sloc>> 'class std::basic_string<char> &(*)(const class std::basic_string<char> &)' <FunctionToPointerDecay>
            | | `-DeclRefExpr 0x9b857f0 <<invalid sloc>> 'class std::basic_string<char> &(const class std::basic_string<char> &)' lvalue CXXMethod 0x9b4bbb0 'operator=' 'class std::basic_string<char> &(const class std::basic_string<char> &)'
            | |-ArraySubscriptExpr 0x9b85710 <<invalid sloc>> 'string':'class std::basic_string<char>' lvalue
            | | |-ImplicitCastExpr 0x9b85700 <<invalid sloc>> 'string *' <ArrayToPointerDecay>
            | | | `-ArraySubscriptExpr 0x9b856e8 <<invalid sloc>> 'string [2]' lvalue
            | | |   |-ImplicitCastExpr 0x9b856d8 <<invalid sloc>> 'string (*)[2]' <ArrayToPointerDecay>
            | | |   | `-DeclRefExpr 0x9b8546c <<invalid sloc>> 'string [2][2]' lvalue Var 0x9b686c0 '____localvar____2' 'string [2][2]'
            | | |   `-IntegerLiteral 0x9b854a0 <<invalid sloc>> 'int' 1
            | | `-IntegerLiteral 0x9b856c0 <<invalid sloc>> 'int' 1
            | `-MaterializeTemporaryExpr 0x9b857e0 <<invalid sloc>, <invalid sloc>> 'const class std::basic_string<char>' lvalue
            |   `-ImplicitCastExpr 0x9b857d0 <<invalid sloc>, <invalid sloc>> 'const class std::basic_string<char>' <NoOp>
            |     `-CXXFunctionalCastExpr 0x9b857b8 <<invalid sloc>, <invalid sloc>> 'class std::basic_string<char>' functional cast to class std::basic_string<char> <ConstructorConversion>
            |       `-CXXBindTemporaryExpr 0x9b857a8 <<invalid sloc>, col:42> 'class std::basic_string<char>' (CXXTemporary 0x9b857a0)
            |         `-CXXConstructExpr 0x9b85778 <<invalid sloc>, col:42> 'class std::basic_string<char>' 'void (const class std::basic_string<char> &)' elidable
            |           `-MaterializeTemporaryExpr 0x9b85768 <col:30, col:42> 'const class std::basic_string<char>' lvalue
            |             `-ImplicitCastExpr 0x9b85758 <col:30, col:42> 'const class std::basic_string<char>' <NoOp>
            |               `-CXXConstructExpr 0x9b68d60 <col:30, col:42> 'string':'class std::basic_string<char>' 'void (const class std::basic_string<char> &)' elidable
            |                 `-MaterializeTemporaryExpr 0x9b68d50 <col:30, col:42> 'const class std::basic_string<char>' lvalue
            |                   `-ImplicitCastExpr 0x9b68d40 <col:30, col:42> 'const class std::basic_string<char>' <NoOp>
            |                     `-CXXFunctionalCastExpr 0x9b68ad8 <col:30, col:42> 'string':'class std::basic_string<char>' functional cast to string <ConstructorConversion>
            |                       `-CXXBindTemporaryExpr 0x9b68ac8 <col:30, col:37> 'string':'class std::basic_string<char>' (CXXTemporary 0x9b68ac0)
            |                         `-CXXConstructExpr 0x9b68a98 <col:30, col:37> 'string':'class std::basic_string<char>' 'void (const char *, const class std::allocator<char> &)'
            |                           |-ImplicitCastExpr 0x9b68828 <col:37> 'const char *' <ArrayToPointerDecay>
            |                           | `-StringLiteral 0x9b687b0 <col:37> 'const char [4]' lvalue "yyy"
            |                           `-CXXDefaultArgExpr 0x9b68a80 <<invalid sloc>> 'const class std::allocator<char>':'const class std::allocator<char>' lvalue
            |-CXXOperatorCallExpr 0x9b85958 <<invalid sloc>, <invalid sloc>> 'class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > >' lvalue
            | |-ImplicitCastExpr 0x9b85948 <<invalid sloc>> 'class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > > &(*)(const class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > > &)' <FunctionToPointerDecay>
            | | `-DeclRefExpr 0x9b85918 <<invalid sloc>> 'class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > > &(const class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > > &)' lvalue CXXMethod 0x9b6d820 'operator=' 'class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > > &(const class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > > &)'
            | |-DeclRefExpr 0x9b85890 <<invalid sloc>> 'vector<string>':'class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > >' lvalue Var 0x9b69090 '____localvar____3' 'vector<string>':'class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > >'
            | `-MaterializeTemporaryExpr 0x9b85908 <<invalid sloc>, <invalid sloc>> 'const class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > >' lvalue
            |   `-ImplicitCastExpr 0x9b858f8 <<invalid sloc>, <invalid sloc>> 'const class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > >' <NoOp>
            |     `-CXXBindTemporaryExpr 0x9b858e8 <<invalid sloc>, <invalid sloc>> 'class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > >' (CXXTemporary 0x9b858e0)
            |       `-CXXTemporaryObjectExpr 0x9b858b0 <<invalid sloc>, <invalid sloc>> 'class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > >' 'void (void)'
            |-BinaryOperator 0x9b72090 <line:14:2, col:12> 'char':'char' lvalue '='
            | |-CXXOperatorCallExpr 0x9b72048 <col:2, col:8> 'char':'char' lvalue
            | | |-ImplicitCastExpr 0x9b72038 <col:6, col:8> 'reference (*)(size_type)' <FunctionToPointerDecay>
            | | | `-DeclRefExpr 0x9b71fe8 <col:6, col:8> 'reference (size_type)' lvalue CXXMethod 0x9b4cbc0 'operator[]' 'reference (size_type)'
            | | |-CXXOperatorCallExpr 0x9b71f88 <col:2, col:5> 'class std::basic_string<char>':'class std::basic_string<char>' lvalue
            | | | |-ImplicitCastExpr 0x9b71f78 <col:3, col:5> 'reference (*)(size_type)' <FunctionToPointerDecay>
            | | | | `-DeclRefExpr 0x9b71f28 <col:3, col:5> 'reference (size_type)' lvalue CXXMethod 0x9b6e580 'operator[]' 'reference (size_type)'
            | | | |-DeclRefExpr 0x9b71ed0 <col:2> 'vector<string>':'class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > >' lvalue Var 0x9b69090 '____localvar____3' 'vector<string>':'class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > >'
            | | | `-ImplicitCastExpr 0x9b71f18 <col:4> 'size_type':'unsigned int' <IntegralCast>
            | | |   `-IntegerLiteral 0x9b71ee8 <col:4> 'int' 2
            | | `-ImplicitCastExpr 0x9b71fd8 <col:7> 'size_type':'unsigned int' <IntegralCast>
            | |   `-IntegerLiteral 0x9b71fc0 <col:7> 'int' 3
            | `-CharacterLiteral 0x9b72080 <col:12> 'char' 120
            `-BreakStmt 0x9b85b10 <<invalid sloc>>
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 23] TUDecl Function 9b720f0 | Ctx 98706f4 -> p 98706e0
[DEBUG][alg/FlattenCFG/FlattenCFGTransformer.cpp - line 48] enter FuncDecl
[DEBUG][alg/FlattenCFG/VarRenamer.cpp - line 9] START VarRenamer
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 50] enter decl 9b720f0 (Function)
[DEBUG][alg/FlattenCFG/VarRenamer.cpp - line 20] decl: Function
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b72178 (CompoundStmt) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b72168 (ReturnStmt) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b72150 (IntegerLiteral) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b72150 (IntegerLiteral)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b72168 (ReturnStmt)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b72178 (CompoundStmt)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 52] exit decl 9b720f0 (Function)
[DEBUG][alg/FlattenCFG/VarRenamer.cpp - line 11] END VarRenamer
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 6] START StmtPretransformer
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 50] enter decl 9b720f0 (Function)
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 37] visitDecl 9b720f0(Function) Ctx 98706f4
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b72178 (CompoundStmt) | range 
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 62] push stmt CompoundStmt 9b72178 9867250 9867250
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b72168 (ReturnStmt) | range 
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 62] push stmt ReturnStmt 9b72168 992db10 992db10
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b72150 (IntegerLiteral) | range 
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 62] push stmt IntegerLiteral 9b72150 9adfd18 9adfd18
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b72150 (IntegerLiteral)
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 70] leaving Stmt IntegerLiteral, start transform
IntegerLiteral 0x9b72150 'int' 0
0[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b72168 (ReturnStmt)
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 70] leaving Stmt ReturnStmt, start transform
ReturnStmt 0x9b72168
`-IntegerLiteral 0x9b72150 'int' 0
return 0;
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b72178 (CompoundStmt)
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 70] leaving Stmt CompoundStmt, start transform
CompoundStmt 0x9b72178
`-ReturnStmt 0x9b72168
  `-IntegerLiteral 0x9b72150 'int' 0
{
    return 0;
}
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 52] exit decl 9b720f0 (Function)
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 45] exitDecl
[DEBUG][alg/FlattenCFG/StmtPretransformer.cpp - line 30] END StmtPretransformer
[DEBUG][alg/FlattenCFG/LocalDeclMover.cpp - line 5] START LocalDeclMover
FunctionDecl 0x9b720f0 <test/_array.cpp:17:1, line:19:1> main 'int (void)'
`-CompoundStmt 0x9b72178 <line:17:12, line:19:1>
  `-ReturnStmt 0x9b72168 <line:18:2, col:9>
    `-IntegerLiteral 0x9b72150 <col:9> 'int' 0
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 50] enter decl 9b720f0 (Function)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b72178 (CompoundStmt) | range 
[DEBUG][alg/FlattenCFG/LocalDeclMover.cpp - line 48] Stmt CompoundStmt ( 9b72178 -> p 0 )
CompoundStmt 0x9b72178
`-ReturnStmt 0x9b72168
  `-IntegerLiteral 0x9b72150 'int' 0
{
    return 0;
}
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b72168 (ReturnStmt) | range 
[DEBUG][alg/FlattenCFG/LocalDeclMover.cpp - line 48] Stmt ReturnStmt ( 9b72168 -> p 9b72178 )
ReturnStmt 0x9b72168
`-IntegerLiteral 0x9b72150 'int' 0
return 0;
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b72150 (IntegerLiteral) | range 
[DEBUG][alg/FlattenCFG/LocalDeclMover.cpp - line 48] Stmt IntegerLiteral ( 9b72150 -> p 9b72168 )
IntegerLiteral 0x9b72150 'int' 0
0[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b72150 (IntegerLiteral)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b72168 (ReturnStmt)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b72178 (CompoundStmt)
[DEBUG][alg/FlattenCFG/LocalDeclMover.cpp - line 109] root stmt type CompoundStmt 9b72178 | children size 0
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 52] exit decl 9b720f0 (Function)
[DEBUG][alg/FlattenCFG/LocalDeclMover.cpp - line 27] END LocalDeclMover
FunctionDecl 0x9b720f0 <test/_array.cpp:17:1, line:19:1> main 'int (void)'
`-CompoundStmt 0x9b72178 <line:17:12, line:19:1>
  `-ReturnStmt 0x9b72168 <line:18:2, col:9>
    `-IntegerLiteral 0x9b72150 <col:9> 'int' 0
[DEBUG][alg/FlattenCFG/CFGFlattener.cpp - line 20] decl before flatten
FunctionDecl 0x9b720f0 <test/_array.cpp:17:1, line:19:1> main 'int (void)'
`-CompoundStmt 0x9b72178 <line:17:12, line:19:1>
  `-ReturnStmt 0x9b72168 <line:18:2, col:9>
    `-IntegerLiteral 0x9b72150 <col:9> 'int' 0
[DEBUG][alg/FlattenCFG/CFGFlattener.cpp - line 26] cfg before flattening

 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: return 0;
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

Writing '/tmp/llvm_BYSIW3/CFG.dot'...  done. 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b72178 (CompoundStmt) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b72168 (ReturnStmt) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 38] enter stmt 9b72150 (IntegerLiteral) | range 
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b72150 (IntegerLiteral)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b72168 (ReturnStmt)
[DEBUG][./alg/FlattenCFG/ASTTraverserPlus.h - line 40] exit stmt 9b72178 (CompoundStmt)
[DEBUG][alg/FlattenCFG/CFGFlattener.cpp - line 377] edge 1 -> 0
[DEBUG][alg/FlattenCFG/CFGFlattener.cpp - line 377] edge 2 -> 1
[DEBUG][alg/FlattenCFG/CFGFlattener.cpp - line 39] CompoundStmt before flatten
{
    return 0;
}
[DEBUG][alg/FlattenCFG/CFGFlattener.cpp - line 208] create case for node 1 98ae5bc
<NULL>[DEBUG][alg/FlattenCFG/CFGFlattener.cpp - line 243] add stmt #0
return 0;
CaseStmt 0x9b85ca0
|-IntegerLiteral 0x9b85c88 'int' 1
|-<<<NULL>>>
`-CompoundStmt 0x9b85cc8
  |-ReturnStmt 0x9b72168
  | `-IntegerLiteral 0x9b72150 'int' 0
  `-BreakStmt 0x9b85cc0
[DEBUG][alg/FlattenCFG/CFGFlattener.cpp - line 85] New switch body create
switch (int ____localvar____5 = 1) {
  case 1:
    {
        return 0;
        break;
    }
}
[DEBUG][alg/FlattenCFG/CFGFlattener.cpp - line 89] New function body created.
{
    int ____localvar____5 = 1;
    while (____localvar____5 != 0)
        switch (int ____localvar____5 = 1) {
          case 1:
            {
                return 0;
                break;
            }
        }
}
[DEBUG][alg/FlattenCFG/CFGFlattener.cpp - line 92] decl after flatten
FunctionDecl 0x9b720f0 <test/_array.cpp:17:1, line:19:1> main 'int (void)'
`-CompoundStmt 0x9b72178 <line:17:12, line:19:1>
  |-DeclStmt 0x9b85bc0 <<invalid sloc>>
  | `-VarDecl 0x9b85b90 <<invalid sloc>> ____localvar____5 'int'
  |   `-IntegerLiteral 0x9b85b78 <<invalid sloc>> 'int' 1
  `-WhileStmt 0x9b85c28 <<invalid sloc>>
    |-<<<NULL>>>
    |-BinaryOperator 0x9b85c10 <<invalid sloc>> '_Bool' '!='
    | |-ImplicitCastExpr 0x9b85c00 <<invalid sloc>> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x9b85be8 <<invalid sloc>> 'int' lvalue Var 0x9b85b90 '____localvar____5' 'int'
    | `-IntegerLiteral 0x9b85bd0 <<invalid sloc>> 'int' 0
    `-SwitchStmt 0x9b85c58 <<invalid sloc>>
      |-DeclStmt 0x9b85c78 <<invalid sloc>>
      | `-VarDecl 0x9b85b90 <<invalid sloc>> ____localvar____5 'int'
      |   `-IntegerLiteral 0x9b85b78 <<invalid sloc>> 'int' 1
      |-DeclRefExpr 0x9b85c3c <<invalid sloc>> 'int' lvalue Var 0x9b85b90 '____localvar____5' 'int'
      `-CompoundStmt 0x9b85ce0 <<invalid sloc>>
        `-CaseStmt 0x9b85ca0 <<invalid sloc>>
          |-IntegerLiteral 0x9b85c88 <<invalid sloc>> 'int' 1
          |-<<<NULL>>>
          `-CompoundStmt 0x9b85cc8 <<invalid sloc>>
            |-ReturnStmt 0x9b72168 <line:18:2, col:9>
            | `-IntegerLiteral 0x9b72150 <col:9> 'int' 0
            `-BreakStmt 0x9b85cc0 <<invalid sloc>>
[DEBUG][alg/SimplePrinter.cpp - line 7] alg started.
[DEBUG][alg/SimplePrinterConsumer.cpp - line 47] PrintingPolicy: 0 0 0 0 0
using namespace std;
[DEBUG][alg/SimplePrinterConsumer.cpp - line 47] PrintingPolicy: 0 0 0 0 0
void declref() {
    int ____localvar____0[3][3][2];
    int ____localvar____1 = 1;
    while (____localvar____1 != 0)
        switch (int ____localvar____1 = 1) {
          case 1:
            {
                ____localvar____0[0][0][0] = 1;
                ____localvar____0[0][0][1] = 2;
                ____localvar____0[0][1][0] = 3;
                ____localvar____0[2][0][0] = 3;
                ____localvar____0[2][1][0] = 9;
                ____localvar____0[2][1][1] = 8;
                ____localvar____0[0][0][1] = 0;
                break;
            }
        }
}

;
[0;1;33m
 [B6 (ENTRY)]
[0m[0;35m   Succs [0m(1):[0;35m B5[0m
[0;1;33m
 [B1]
[0m[0;34m   Preds [0m(2):[0;34m B3 B2[0m
[0;35m   Succs [0m(1):[0;35m B4[0m
[0;1;33m
 [B2]
[0m   1: 1
   2: int ____localvar____1 = 1;
   3: ____localvar____1
[0;32m   T: switch [B2.3]
[0m[0;34m   Preds [0m(1):[0;34m B4[0m
[0;35m   Succs [0m(2):[0;35m B3 B1[0m
[0;1;33m
 [B3]
[0m  case 1:
   1: ____localvar____0[0][0][0] = 1
   2: ____localvar____0[0][0][1] = 2
   3: ____localvar____0[0][1][0] = 3
   4: ____localvar____0[2][0][0] = 3
   5: ____localvar____0[2][1][0] = 9
   6: ____localvar____0[2][1][1] = 8
   7: ____localvar____0[0][0][1] = 0
[0;32m   T: break;

[0m[0;34m   Preds [0m(1):[0;34m B2[0m
[0;35m   Succs [0m(1):[0;35m B1[0m
[0;1;33m
 [B4]
[0m   1: ____localvar____1 != 0
[0;32m   T: while [B4.1]
[0m[0;34m   Preds [0m(2):[0;34m B1 B5[0m
[0;35m   Succs [0m(2):[0;35m B2 B0[0m
[0;1;33m
 [B5]
[0m   1: int ____localvar____0[3][3][2];
   2: int ____localvar____1 = 1;
[0;34m   Preds [0m(1):[0;34m B6[0m
[0;35m   Succs [0m(1):[0;35m B4[0m
[0;1;33m
 [B0 (EXIT)]
[0m[0;34m   Preds [0m(1):[0;34m B4[0m

Writing '/tmp/llvm_ZMbOin/CFG.dot'...  done. 
[DEBUG][alg/SimplePrinterConsumer.cpp - line 47] PrintingPolicy: 0 0 0 0 0
void classref() {
    string ____localvar____2[2][2];
    vector<string> ____localvar____3;
    int ____localvar____4 = 1;
    while (____localvar____4 != 0)
        switch (int ____localvar____4 = 1) {
          case 1:
            {
                ____localvar____2[1][0] = std::basic_string<char>("xx");
                ____localvar____2[1][1] = std::basic_string<char>(string("yyy"));
                ____localvar____3 = std::vector<std::basic_string<char>, std::allocator<std::basic_string<char> > >();
                ____localvar____3[2][3] = 'x';
                break;
            }
        }
}

;
[0;1;33m
 [B6 (ENTRY)]
[0m[0;35m   Succs [0m(1):[0;35m B5[0m
[0;1;33m
 [B1]
[0m[0;34m   Preds [0m(2):[0;34m B3 B2[0m
[0;35m   Succs [0m(1):[0;35m B4[0m
[0;1;33m
 [B2]
[0m   1: 1
   2: int ____localvar____4 = 1;
   3: ____localvar____4
[0;32m   T: switch [B2.3]
[0m[0;34m   Preds [0m(1):[0;34m B4[0m
[0;35m   Succs [0m(2):[0;35m B3 B1[0m
[0;1;33m
 [B3]
[0m  case 1:
   1: "xx" (CXXConstructExpr, string)
   2: [B3.1] (CXXConstructExpr, string)
   3: [B3.2] (CXXConstructExpr, class std::basic_string<char>)
   4: ____localvar____2[1][0] = std::basic_string<char>([B3.3]) (OperatorCall)
   5: "yyy" (CXXConstructExpr, string)
   6: string([B3.5]) (CXXConstructExpr, string)
   7: [B3.6] (CXXConstructExpr, class std::basic_string<char>)
   8: ____localvar____2[1][1] = std::basic_string<char>([B3.7]) (OperatorCall)
   9: std::vector<std::basic_string<char>, std::allocator<std::basic_string<char> > >() (CXXConstructExpr, class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > >)
  10: ____localvar____3 = [B3.9] (OperatorCall)
  11: ____localvar____3[2] (OperatorCall)
  12: [B3.11][3] (OperatorCall)
  13: [B3.12] = 'x'
[0;32m   T: break;

[0m[0;34m   Preds [0m(1):[0;34m B2[0m
[0;35m   Succs [0m(1):[0;35m B1[0m
[0;1;33m
 [B4]
[0m   1: ____localvar____4 != 0
[0;32m   T: while [B4.1]
[0m[0;34m   Preds [0m(2):[0;34m B1 B5[0m
[0;35m   Succs [0m(2):[0;35m B2 B0[0m
[0;1;33m
 [B5]
[0m   1: string ____localvar____2[2][2];
   2: vector<string> ____localvar____3;
   3: int ____localvar____4 = 1;
[0;34m   Preds [0m(1):[0;34m B6[0m
[0;35m   Succs [0m(1):[0;35m B4[0m
[0;1;33m
 [B0 (EXIT)]
[0m[0;34m   Preds [0m(1):[0;34m B4[0m

Writing '/tmp/llvm_8SO5EG/CFG.dot'...  done. 
[DEBUG][alg/SimplePrinterConsumer.cpp - line 47] PrintingPolicy: 0 0 0 0 0
int main() {
    int ____localvar____5 = 1;
    while (____localvar____5 != 0)
        switch (int ____localvar____5 = 1) {
          case 1:
            {
                return 0;
                break;
            }
        }
}

;
[0;1;33m
 [B7 (ENTRY)]
[0m[0;35m   Succs [0m(1):[0;35m B6[0m
[0;1;33m
 [B1]
[0m[0;34m   Preds [0m(2):[0;34m B3 B2[0m
[0;35m   Succs [0m(1):[0;35m B5[0m
[0;1;33m
 [B2]
[0m   1: 1
   2: int ____localvar____5 = 1;
   3: ____localvar____5
[0;32m   T: switch [B2.3]
[0m[0;34m   Preds [0m(1):[0;34m B5[0m
[0;35m   Succs [0m(2):[0;35m B4 B1[0m
[0;1;33m
 [B3]
[0m[0;32m   T: break;

[0m[0;35m   Succs [0m(1):[0;35m B1[0m
[0;1;33m
 [B4]
[0m  case 1:
   1: return 0;
[0;34m   Preds [0m(1):[0;34m B2[0m
[0;35m   Succs [0m(1):[0;35m B0[0m
[0;1;33m
 [B5]
[0m   1: ____localvar____5 != 0
[0;32m   T: while [B5.1]
[0m[0;34m   Preds [0m(2):[0;34m B1 B6[0m
[0;35m   Succs [0m(2):[0;35m B2 B0[0m
[0;1;33m
 [B6]
[0m   1: int ____localvar____5 = 1;
[0;34m   Preds [0m(1):[0;34m B7[0m
[0;35m   Succs [0m(1):[0;35m B5[0m
[0;1;33m
 [B0 (EXIT)]
[0m[0;34m   Preds [0m(2):[0;34m B4 B5[0m

Writing '/tmp/llvm_NUGu1Z/CFG.dot'...  done. 
[DEBUG][alg/SimplePrinter.cpp - line 26] alg finished.
[DEBUG][ResourceManager.cpp - line 134] src test/_.__array.cpp rewrited.
done2
